package io.github.cpearl0.ctnhcore.registry.machines.multiblock;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.GTValues;
import com.gregtechceu.gtceu.api.data.RotationState;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.machine.MultiblockMachineDefinition;
import com.gregtechceu.gtceu.api.machine.multiblock.PartAbility;
import com.gregtechceu.gtceu.api.machine.multiblock.WorkableElectricMultiblockMachine;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.Predicates;
import com.gregtechceu.gtceu.api.recipe.OverclockingLogic;
import com.gregtechceu.gtceu.common.data.*;
import com.gregtechceu.gtceu.common.machine.multiblock.electric.AssemblyLineMachine;
import com.gregtechceu.gtceu.common.machine.multiblock.generator.LargeTurbineMachine;
import com.gregtechceu.gtceu.common.registry.GTRegistration;
import com.gregtechceu.gtceu.config.ConfigHolder;
import com.mo_guang.ctpp.CTPP;
import com.mo_guang.ctpp.api.CTPPPartAbility;
import com.mo_guang.ctpp.common.data.CTPPRecipeModifiers;
import com.mo_guang.ctpp.common.machine.multiblock.KineticWorkableMultiblockMachine;
import com.negodya1.vintageimprovements.VintageBlocks;
import com.simibubi.create.AllBlocks;
import fr.lucreeper74.createmetallurgy.registries.CMBlocks;
import io.github.cpearl0.ctnhcore.CTNHCore;
import io.github.cpearl0.ctnhcore.api.Pattern.CTNHPredicates;
import io.github.cpearl0.ctnhcore.client.renderer.EternalGardenRender;
import io.github.cpearl0.ctnhcore.client.renderer.ManaCondenserRender;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.KineticElectricMutiblockMachine;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.electric.*;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.generator.Arc_Generator;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.generator.Arc_Reactor;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.generator.NanoscaleTriboelectricGenerator;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.generator.PhotoVoltaicDroneStation;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.kinetic.Hybrid_Power_Mixer;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.magic.*;
import io.github.cpearl0.ctnhcore.common.machine.multiblock.part.CTNHPartAbility;
import io.github.cpearl0.ctnhcore.data.CreateRecipeTypes;
import io.github.cpearl0.ctnhcore.registry.CTNHBlocks;
import io.github.cpearl0.ctnhcore.registry.CTNHMachines;
import io.github.cpearl0.ctnhcore.registry.CTNHMaterials;
import io.github.cpearl0.ctnhcore.registry.CTNHRecipeTypes;
import net.minecraft.ChatFormatting;
import net.minecraft.network.chat.Component;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.DyeColor;
import vazkii.botania.common.block.BotaniaBlocks;
import vazkii.botania.common.block.BotaniaFlowerBlocks;
import wayoftime.bloodmagic.BloodMagic;
import wayoftime.bloodmagic.common.block.BloodMagicBlocks;
import wayoftime.bloodmagic.common.fluid.BloodMagicFluids;

import static com.gregtechceu.gtceu.api.GTValues.EV;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.autoAbilities;
import static com.gregtechceu.gtceu.api.pattern.util.RelativeDirection.*;
import static com.gregtechceu.gtceu.common.data.GCYMBlocks.*;
import static com.gregtechceu.gtceu.common.data.GTBlocks.*;
import static com.gregtechceu.gtceu.common.data.GTMaterialBlocks.MATERIAL_BLOCKS;
import static com.gregtechceu.gtceu.common.data.GTMaterials.*;
import static com.gregtechceu.gtceu.common.data.GTMaterials.Naquadria;
import static com.gregtechceu.gtceu.common.data.GTRecipeTypes.DUMMY_RECIPES;
import static com.hollingsworth.arsnouveau.setup.registry.BlockRegistry.*;
import static com.hollingsworth.arsnouveau.setup.registry.BlockRegistry.VEXING_LOG;
import static io.github.cpearl0.ctnhcore.registry.CTNHBlocks.*;
import static io.github.cpearl0.ctnhcore.registry.CTNHBlocks.TERRA_STEEL_CASING;
import static io.github.cpearl0.ctnhcore.registry.CTNHRegistration.REGISTRATE;
import static net.minecraft.world.level.block.Blocks.*;

public class MultiblocksB {
    public final static MultiblockMachineDefinition ZENITH_CIRCUIT_ASSEMBLER = REGISTRATE.multiblock("zenith_circult_assembler", holder -> new ZenithMachine(holder, 24, 12, 60, 12))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(GTRecipeTypes.CIRCUIT_ASSEMBLER_RECIPES, CTNHRecipeTypes.RESONANT_MAGICAL_ASSEMBLY)
            .appearanceBlock(CTNHBlocks.ZENITH_CASING_BLOCK)
            .recipeModifiers(ZenithMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.zenith_circut_assember"),
                    Component.translatable("zenith_machine").withStyle(ChatFormatting.DARK_PURPLE),
                    Component.translatable("ctnh.super_mana_machine.mana_consume"),
                    Component.translatable("ctnh.zenith_circut_assember_sp"),
                    Component.translatable("ctnh.zenith_machine_tip"),
                    Component.translatable("ctnh.zenith_waring"),
                    Component.translatable("ctnh.perfect_overclock"),
                    Component.translatable("ctnh.mana.waring"),
                    Component.translatable("ctnh.manamachine.parallel"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("####PPP####", "####PHP####", "####PPP####", "###########")
                    .aisle("###B#C#B###", "###D###D###", "###D###D###", "####BEB####")
                    .aisle("#BB##C##BB#", "#DD#####DD#", "#DD#####DD#", "###BBEBB###")
                    .aisle("B###CCC###B", "B#########B", "B#########B", "#BBBEEEBBB#")
                    .aisle("BCCCCBCCCCB", "H####A####H", "B#########B", "#EEEEHEEEE#")
                    .aisle("B###CCC###B", "B#########B", "B#########B", "#BBBEEEBBB#")
                    .aisle("#BB##C##BB#", "#DD#####DD#", "#DD#####DD#", "###BBEBB###")
                    .aisle("###B#C#B###", "###D###D###", "###D###D###", "####BEB####")
                    .aisle("####PPP####", "####P@P####", "####PPP####", "###########")
                    .where("A", Predicates.blocks(CTNHBlocks.ZENITH_CASING_GEARBOX.get()))
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CTNHBlocks.ZENITH_CASING_BLOCK.get()))
                    .where("C", Predicates.blocks(CTNHBlocks.MANA_STEEL_CASING.get()))
                    .where("D", Predicates.blocks(CTNHBlocks.DEPTH_FORCE_FIELD_STABILIZING_CASING.get()))
                    .where("E", Predicates.blocks(CTNHBlocks.ALF_STEEL_CASING.get()))
                    .where("H", Predicates.blocks(CTNHBlocks.ZENITH_EYE.get()))
                    .where("P", Predicates.blocks(CTNHBlocks.ZENITH_CASING_BLOCK.get())
                            .or(abilities(PartAbility.INPUT_ENERGY).setExactLimit(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS))
                            .or(abilities(PartAbility.IMPORT_ITEMS))
                            .or(abilities(PartAbility.EXPORT_ITEMS))
                            .or(abilities(PartAbility.EXPORT_FLUIDS)))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/zenith_casing")), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();

    public final static MultiblockMachineDefinition ZENITH_DISTILLATION_TOWER = REGISTRATE.multiblock("zenith_distillation_tower", holder -> new ZenithMachine(holder, 10, 12, 60, 5))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(GTRecipeTypes.DISTILLATION_RECIPES)
            .appearanceBlock(CTNHBlocks.ZENITH_CASING_BLOCK)
            .recipeModifiers(ZenithMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.zenith_tower"),
                    Component.translatable("zenith_machine").withStyle(ChatFormatting.DARK_PURPLE),
                    Component.translatable("ctnh.super_mana_machine.mana_consume"),
                    Component.translatable("ctnh.zenith_machine_tip"),
                    Component.translatable("ctnh.zenith_waring"),
                    Component.translatable("ctnh.perfect_overclock"),
                    Component.translatable("ctnh.mana.waring"),
                    Component.translatable("ctnh.manamachine.parallel"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "BBBBB", "BBEBB", "BEEEB", "BEEEB", "BEEEB", "BDDDB")
                    .aisle("#PPP#", "#PPP#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "BDDDB", "B###B", "E###E", "E###E", "E###E", "DEEED")
                    .aisle("#PAP#", "#P#P#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "#B#B#", "BD#DB", "E###E", "E###E", "E###E", "E###E", "DEEED")
                    .aisle("#P@P#", "#PPP#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "#BBB#", "BDDDB", "B###B", "E###E", "E###E", "E###E", "DEEED")
                    .aisle("#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "#####", "BBBBB", "BBEBB", "BEEEB", "BEEEB", "BEEEB", "BDDDB")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CTNHBlocks.ZENITH_CASING_BLOCK.get()))
                    .where("D", Predicates.blocks(CTNHBlocks.DEPTH_FORCE_FIELD_STABILIZING_CASING.get()))
                    .where("E", Predicates.blocks(BotaniaBlocks.manaGlass))
                    .where("A", Predicates.blocks(CTNHBlocks.ZENITH_EYE.get()))
                    .where("P", Predicates.blocks(CTNHBlocks.ZENITH_CASING_BLOCK.get())
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/zenith_casing")), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition SCALABLE_RESERVOIR_COMPUTING = REGISTRATE.multiblock("scalable_reservoir_computing", holder -> new ScalableReservoirComputingMachine(holder))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.SCALABLE_RESERVOIR_COMPUTING)
            .appearanceBlock(CTNHBlocks.ZENITH_CASING_BLOCK)
            .recipeModifiers(ZenithMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.computer.a1"),
                    Component.translatable("ctnh.computer.a2").withStyle(ChatFormatting.DARK_PURPLE),
                    Component.translatable("ctnh.computer.a3"),
                    Component.translatable("ctnh.computer.a4"),
                    Component.translatable("ctnh.computer.a5"),
                    Component.translatable("ctnh.computer.a6"),
                    Component.translatable("ctnh.computer.a7"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("YX#XXX######XXXXXXX#####XXX#X#", "XWX##XX####X#######X###XX##XWX", "XWX###XX##X#########X#XX###XWX", "#X#####XXX###########XX#####X#", "#########X###UUUUU###X########", "#########X###UUUUU###X########", "#########X###UUUUU###X########", "#########X###UUUUU###X########", "#########X###UUUUU###X########", "#######XXX###########XXX######", "######XX##X#########X##XX#####", "#####XX####X#######X####XX####", "#X#XXX######XXXXXXX######XX#X#", "XWX########################X#X", "XWX########################X#X", "#X##########################XY")
                    .aisle
                    .aisle
                    .where("Y", Predicates.any())
                    .where("X", Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where("#", Predicates.any())
                    .where("W", Predicates.blocks(IRON_BARS))
                    .where("V", Predicates.blocks(GTBlocks.CASING_ASSEMBLY_CONTROL.get()))
                    .where("U", Predicates.blocks(BotaniaBlocks.alfglassPane))
                    .where("T", Predicates.blocks(GTBlocks.FUSION_COIL.get()))
                    .where("S", Predicates.blocks(CTNHBlocks.RESERVOIR_COMPUTING_CASING.get()))
                    .where("R", Predicates.blocks(GTBlocks.CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where("Q", Predicates.blocks(CTNHBlocks.ZENITH_CASING_BLOCK.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.COMPUTATION_DATA_TRANSMISSION).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER)))
                    .where("P", Predicates.blocks(CTNHBlocks.CASING_ADVANCED_HYPER.get()))
                    .where("O", Predicates.blocks(BotaniaBlocks.manaGlass))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/zenith_casing")), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static MultiblockMachineDefinition SEASON_REACTOR = REGISTRATE.multiblock("season_reactor", season_reactor::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.SEASON_STEAM_RECIPES)
            // .appearanceBlock(GTBlocks.CASING_BRONZE_BRICKS)
            .tooltips(Component.translatable("ctnh.season.a1"),
                    Component.translatable("ctnh.season.a2"),
                    Component.translatable("ctnh.season.a3"))
            .recipeModifiers(season_reactor::recipeModifier, CTPPRecipeModifiers.KINETIC_ADJUST)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("YXY", "XWX", "KKK")
                    .aisle("XVX", "WUW", "KOK")
                    .aisle("Y@Y", "XWX", "KKK")
                    .where("Y", Predicates.blocks(BotaniaBlocks.livingwood))
                    .where("#", Predicates.any())
                    .where("W", Predicates.blocks(BotaniaBlocks.manaGlass))
                    .where("V", Predicates.blocks(DIRT))
                    .where("O", Predicates.blocks((BotaniaBlocks.manaPylon)))
                    .where("K", Predicates.blocks(BotaniaBlocks.livingrockBrickStairs))
                    .where("U", Predicates.blocks(BotaniaFlowerBlocks.pureDaisy))
                    .where("X", abilities(CTPPPartAbility.OUTPUT_KINETIC).setExactLimit(1)
                            .or(Predicates.blocks(BotaniaBlocks.livingrockBrick))
                            .or(abilities(PartAbility.IMPORT_ITEMS))
                    )
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(ResourceLocation.tryParse("botania:block/polished_livingrock"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();

    public final static MultiblockMachineDefinition SILICA_ROCK_FUEL_REFINERY = REGISTRATE.multiblock("silica_rock_fuel_refinery", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .recipeTypes(CTNHRecipeTypes.SILICA_ROCK_FUEL_REFINERY)
            .appearanceBlock(CTNHBlocks.CASING_NAQUADAH_BLOCK)
            .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("##AAA##", "##ABA##", "##AAA##", "###B###", "###B###", "###A###")
                    .aisle("###A###", "##AAA##", "###C###", "##ADA##", "###A###", "###A###")
                    .aisle("A##A##A", "AAADAAA", "A#ACA#A", "#AACAA#", "##ADA##", "###C###")
                    .aisle("AAAAAAA", "BADDDAB", "ACCDCCA", "BDCDCDB", "BADDDAB", "AACCCAA")
                    .aisle("A##A##A", "AAADAAA", "A#ACA#A", "#AACAA#", "##ADA##", "###C###")
                    .aisle("###A###", "##AAA##", "###C###", "##ADA##", "###A###", "###A###")
                    .aisle("##AAA##", "##A@A##", "##AAA##", "###B###", "###B###", "###A###")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(CASING_NAQUADAH_BLOCK.get())
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("B", Predicates.frames(GTMaterials.NaquadahEnriched))
                    .where("C", Predicates.blocks(ANNIHILATE_CORE_MKI.get()))
                    .where("D", Predicates.blocks(PLASMA_COOLED_CORE.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/nq_casing")), GTCEu.id("block/multiblock/implosion_compressor"))
            .register();
    public static MultiblockMachineDefinition ALTER = REGISTRATE.multiblock("alter", AlterLogic::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ALTER)
            // .appearanceBlock(GTBlocks.CASING_BRONZE_BRICKS)
            .recipeModifiers(AlterLogic::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.alter.tips1"),
                    Component.translatable("ctnh.alter.tips2"),
                    Component.translatable("ctnh.alter.tips3"),
                    Component.translatable("ctnh.alter.tips4"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "B#####B", "B#####B", "B#####B", "C#####C", "OEEEEEO", "#######", "#######", "#######")
                    .aisle("A#####A", "#ACCCA#", "#######", "#######", "#######", "E#####E", "##EEE##", "#######", "#######")
                    .aisle("A#####A", "#C###C#", "##CGC##", "#######", "#######", "E#####E", "#E###E#", "###E###", "#######")
                    .aisle("A#####A", "#C###C#", "##GAG##", "###H###", "###B###", "E##B##E", "#E#B#E#", "##EEE##", "###D###")
                    .aisle("A#####A", "#C###C#", "##CGC##", "#######", "#######", "E#####E", "#E###E#", "###E###", "#######")
                    .aisle("A#####A", "#ACCCA#", "#######", "#######", "#######", "E#####E", "##EEE##", "#######", "#######")
                    .aisle("AAAIAAA", "B#####B", "B#####B", "B#####B", "C#####C", "OEEEEEO", "#######", "#######", "#######")
                    .where("A", Predicates.blocks(BloodMagicBlocks.BLANK_RUNE.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("B", Predicates.blocks(CHAIN))
                    .where("#", Predicates.any())
                    .where("C", Predicates.blocks(BloodMagicBlocks.DUNGEON_ORE.get()))
                    .where("D", Predicates.blocks(LAMPS.get(DyeColor.PURPLE).get()))
                    .where("O", Predicates.blocks(LAMPS.get(DyeColor.RED).get()))
                    .where("E", Predicates.blocks(BloodMagicBlocks.DUNGEON_BRICK_1.get()))
                    .where("F", Predicates.blocks(MYCELIUM))
                    .where("G", Predicates.blocks(BloodMagicBlocks.OBSIDIAN_PATH.get())
                            .or(Predicates.blocks(BloodMagicBlocks.CAPACITY_RUNE.get()))
                            .or(Predicates.blocks(BloodMagicBlocks.CAPACITY_RUNE_2.get()))
                    )

                    .where("H", Predicates.blocks(SOUL_LANTERN))
                    .where("I", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(BloodMagic.rl("block/blankrune"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static MultiblockMachineDefinition EYE_OF_QUASAR = REGISTRATE.multiblock("eye_of_quasar", Quasar_Eye::new)
            .rotationState(RotationState.ALL)
            .recipeTypes(CTNHRecipeTypes.QUASAR_EYE,CTNHRecipeTypes.QUASAR_CREATE)
            .generator(true)
            .recipeModifier(Quasar_Eye::recipeModifier, true)
            .tooltips(Component.translatable("ctnh.quarsar.tips1"),
                    Component.translatable("ctnh.quarsar.tips2"),
                    Component.translatable("ctnh.quarsar.tips6"),
                    Component.translatable("ctnh.quarsar.tips3"),
                    Component.translatable("ctnh.quarsar.tips7"),
                    Component.translatable("ctnh.quarsar.tips4"),
                    Component.translatable("ctnh.quarsar.tips8"),
                    Component.translatable("ctnh.quarsar.tips9"),
                    Component.translatable("ctnh.quarsar.tips10"),
                    Component.translatable("ctnh.quarsar.tips11"),
                    Component.translatable("ctnh.quasar.tip.4"),
                    Component.translatable("ctnh.quasar.tip.5"),
                    Component.translatable("ctnh.quarsar.tips5")


            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################", "###############################", "###############################", "###############################", "###############################", "###############B###############", "##############DED##############", "##############DED##############", "##############DED##############", "###############B###############", "###############B###############", "###############################", "###############################", "#######DDD####GGG####DDD#######", "######BEEEBB##GFG##BBEEEB######", "#######DDD####GGG####DDD#######", "###############################", "###############################", "###############B###############", "###############B###############", "##############DED##############", "##############DED##############", "##############DED##############", "###############B###############", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("#############CCCCC#############", "##############DCD##############", "###############B###############", "###############################", "###############################", "###############################", "###############################", "###############I###############", "###############################", "###############J###############", "###############################", "###############################", "#C###########################C#", "#CD#########################DC#", "#CCB####I#J#########J#I####BCC#", "#CD#########################DC#", "#C###########################C#", "###############################", "###############################", "###############J###############", "###############################", "###############I###############", "###############################", "###############################", "###############################", "###############################", "###############B###############", "##############DCD##############", "#############CCCCC#############")
                    .aisle("#######DD####CCCCC####DD#######", "#######DDD#DDDCCCDDD#DDD#######", "########EDDD##GGG##DDDE########", "#######DED####GGG####DED#######", "######DDED####GGG####DEDD######", "#####DD#ED####GGG####DE#DD#####", "####DD##DDD###H#H###DDD##DD####", "####D#####D###III###D#####D####", "###DD#####D#########D#####DD###", "###D#####DD####J####DD#####D###", "##DD#######################DD##", "##D#########################D##", "#CD#########################DC#", "#CCGGGGHI#############IHGGGGCC#", "#CCGGGG#I#J####K####J#I#GGGGCC#", "#CCGGGGHI#############IHGGGGCC#", "#CD#########################DC#", "##D#########################D##", "##DD#######################DD##", "###D###########J###########D###", "###DD#####################DD###", "####D#########III#########D####", "####DD########H#H########DD####", "#####DD#######GGG#######DD#####", "######DD######GGG######DD######", "#######DDD####GGG####DDD#######", "#########DDD##GGG##DDD#########", "###########DDDCCCDDD###########", "#############CCCCC#############")
                    .aisle
                    .aisle("#######DD####CCCCC####DD#######", "#######DDD#DDDCCCDDD#DDD#######", "########EDDD##GGG##DDDE########", "#######DED####GGG####DED#######", "######DDED####GGG####DEDD######", "#####DD#ED####GGG####DE#DD#####", "####DD##DDD###H#H###DDD##DD####", "####D#####D###III###D#####D####", "###DD#####D#########D#####DD###", "###D#####DD####J####DD#####D###", "##DD#######################DD##", "##D#########################D##", "#CD#########################DC#", "#CCGGGGHI#############IHGGGGCC#", "#CCGGGG#I#J####K####J#I#GGGGCC#", "#CCGGGGHI#############IHGGGGCC#", "#CD#########################DC#", "##D#########################D##", "##DD#######################DD##", "###D###########J###########D###", "###DD#####################DD###", "####D#########III#########D####", "####DD########H#H########DD####", "#####DD#######GGG#######DD#####", "######DD######GGG######DD######", "#######DDD####GGG####DDD#######", "#########DDD##GGG##DDD#########", "###########DDDCCCDDD###########", "#############CCCCC#############")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################", "##############DBD##############", "##############DED##############", "##############DED##############", "##############DBD##############", "##############D#D##############", "##############D#D##############", "###############################", "###############################", "##############DBD##############", "###############B###############", "###############################", "###############################", "###DD#####################DD###", "##BEEB#########F#########BEEB##", "###DD#####################DD###", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############B###############", "##############DED##############", "##############DED##############", "###############B###############", "###############################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############B###############", "###############B###############", "##############DED##############", "##############DED##############", "##############DED##############", "###############B###############", "###############B###############", "#########DDD##GGG##DDD#########", "#######BBEEEBBGFGBBEEEBB#######", "#########DDD##GGG##DDD#########", "###############B###############", "###############B###############", "##############DED##############", "##############DED##############", "##############DED##############", "###############B###############", "###############B###############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle
                    .aisle
                    .aisle
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(QUASAR_ENERGY_STABILIZATION_CASING.get()))
                    .where("C", Predicates.blocks(DEPTH_FORCE_FIELD_STABILIZING_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.OUTPUT_LASER))
                            .or(abilities(PartAbility.IMPORT_ITEMS))
                    )

                    .where("D", Predicates.blocks(FUSION_CASING_MK3.get()))
                    .where("E", Predicates.blocks(CASING_NAQUADAH_BLOCK.get()))
                    .where("F", Predicates.blocks(BotaniaBlocks.biomeBrickForest))
                    .where("G", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("H", Predicates.blocks(MACHINE_CASING_ZPM.get()))
                    .where("I", Predicates.blocks(TERRA_STEEL_CASING.get()))
                    .where("J", Predicates.blocks(ALF_STEEL_CASING.get()))
                    .where("K", Predicates.blocks(QUASAR_ENERGY_STABILIZATION_CASING.get()))
                    .where("L", Predicates.blocks(CASING_NAQUADAH_BLOCK.get()))
                    .where("M", Predicates.blocks(FUSION_COIL.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/depth_force_field_stabilizing_casing")), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();
    public static MultiblockMachineDefinition NICOLL_DYSON_BEAMS = REGISTRATE.multiblock("nicoll_dyson_beams", Nicoll_Dyson_Beams::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.BEAMS)
            // .appearanceBlock(GTBlocks.CASING_BRONZE_BRICKS)
            .recipeModifiers(Nicoll_Dyson_Beams::recipeModifier)
            .tooltips(Component.translatable("ctnh.beams.story0"),
                    Component.translatable("ctnh.beams.story1"),
                    Component.translatable("ctnh.beams.story2"),
                    Component.translatable("ctnh.beams.tips12"),
                    Component.translatable("ctnh.beams.tips1"),
                    Component.translatable("ctnh.beams.tips13"),
                    Component.translatable("ctnh.beams.tips2"),
                    Component.translatable("ctnh.beams.tips3"),
                    Component.translatable("ctnh.beams.tips4"),
                    Component.translatable("ctnh.beams.tips5"),
                    Component.translatable("ctnh.beams.tips6"),
                    Component.translatable("ctnh.beams.tips8"),
                    Component.translatable("ctnh.beams.tips9"),
                    Component.translatable("ctnh.beams.tips7"),
                    Component.translatable("ctnh.beams.tips10"),
                    Component.translatable("ctnh.beams.tips11"),
                    Component.translatable("ctnh.beams.tips11.1"),
                    Component.translatable("ctnh.beams.tips13"),
                    Component.translatable("ctnh.beams.tips14")


            )
            .pattern(definition -> FactoryBlockPattern.start()

                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################################", "###############################################", "###############################################", "###############################################", "##########GGGG###################GGGG##########", "#########GGIGGGG#######B#######GGGGIGG#########", "#########EIIIIGG####BN#O#NB####GGIIIIE#########", "#########GGIGGGG#######B#######GGGGIGG#########", "#########HGJGG###################GGJGH#########", "############KK#######M###M#######KK############", "#####################M###M#####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################")
                    .aisle("###############################################", "###############################################", "###############################################", "###############################################", "#########GGG#######################GGG#########", "########GGIGGG########NBN########GGGIGG########", "########EIIIGG#######BBOBB#######GGIIIE########", "########GGIGGG########NBN########GGGIGG########", "########HGJG#######################GJGH########", "###########K#######################K###########", "#####################M###M#####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################################", "###############################################", "###############################################", "###############################################", "#####GGG###############################GGG#####", "####GGIGG##############B##############GGIGG####", "####EIIIG##############O##############GIIIE####", "####GGIGG##############B##############GGIGG####", "####HGJG###############################GJGH####", "#######K###############################K#######", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "#####################M###M#####################", "#####################M###M#####################", "#####################M###M#####################", "#####################M###M#####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("######################RJR######################", "#####################RRJRR#####################", "###################RR#TTT#RR###################", "##UUU#############R#########R#############CCC##", "#UUUUU############R#########R############G###G#", "UUUUUUU##########R#####B#####R##########G##I##C", "UUUUUUUNB#######RR####VOV####RR#######BNG#III#E", "UUUUUUU#########RR#####B#####RR#########G##I##C", "#UUUUUM##########R###########R##########MG###G#", "##UUULMM##########R#########R##########MMLCCC##", "#######MMM########R#########R########MMM#######", "#########MM########RR#####RR########MM#########", "##########MM#########RR#RR#########MM##########", "##########BM##########RFR##########MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BMM#####################MMB##########", "##########BBM#####################MBB##########", "############M#####################M############", "############MM###################MM############", "#############ML##QG#########GQ##LM#############", "##############MMMM#F#######F#MMMM##############", "################SQG#########GQS################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################SQG#########GQS################", "################MM#F#######F#MM################", "#################QG#########GQ#################")
                    .aisle
                    .aisle("#####################JJJJJ#####################", "###################JJJXJXJJJ###################", "##################J##TWXWT##J##################", "##UFU############J####B#B####J############CFC##", "#J###U##########Q#############Q##########F###F#", "J#####YBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBG##I##D", "F##B##FOOOOOOOOOOOOOOOOAOOOOOOOOOOOOOOOOF#III#F", "J#####YBBBBBBBBBBBBBBBZAZBBBBBBBBBBBBBBBG##I##D", "#J###U##########Q#############Q##########F###F#", "##UFU############F###########F############DFD##", "#################F###########F#################", "##################F#########F##################", "###################FF#####FF###################", "#####################F#F#F#####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "################QG###########GQ################", "################F#F#########F#F################", "################QG###########GQ################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "################QG###########GQ################", "################F#F#########F#F################", "################QG###########GQ################")
                    .aisle
                    .aisle("######################RJR######################", "#####################RRJRR#####################", "###################RR#TTT#RR###################", "##UUU#############R#########R#############CCC##", "#UUUUU############R#########R############G###G#", "UUUUUUU##########R#####B#####R##########G##I##C", "UUUUUUUNB#######RR####VOV####RR#######BNG#III#E", "UUUUUUU#########RR#####B#####RR#########G##I##C", "#UUUUUM##########R###########R##########MG###G#", "##UUULMM##########R#########R##########MMLCCC##", "#######MMM########R#########R########MMM#######", "#########MM########RR#####RR########MM#########", "##########MM#########RR#RR#########MM##########", "##########BM##########RFR##########MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BM#######################MB##########", "##########BMM#####################MMB##########", "##########BBM#####################MBB##########", "############M#####################M############", "############MM###################MM############", "#############ML##QG#########GQ##LM#############", "##############MMMM#F#######F#MMMM##############", "################SQG#########GQS################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################S#############S################", "################SQG#########GQS################", "################MM#F#######F#MM################", "#################QG#########GQ#################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###############################################", "###############################################", "###############################################", "######################RJR######################", "###GGG################R#R################GGG###", "##GGIGG##############RRBRR##############GGIGG##", "##EIIIG############RRR#O#RRR############GIIIE##", "##GGIGG############RRR#B#RRR############GGIGG##", "##HGJG###############RR#RR###############GJGH##", "#####K################RFR################K#####", "######################RFR######################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "####################QQGGGQQ####################", "####################FM###MF####################", "####################QQGGGQQ####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "####################QQGGGQQ####################", "####################FM###MF####################", "####################QQGGGQQ####################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .where("#", Predicates.any())
                    .where("B", Predicates.frames(GTMaterials.Naquadah))
                    .where("C", Predicates.blocks(QUASAR_ENERGY_STABILIZATION_CASING.get()))
                    .where("D", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("E", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("F", Predicates.blocks(FUSION_GLASS.get()))
                    .where("G", Predicates.blocks(FUSION_CASING_MK3.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH))
                    )
                    .where("H", Predicates.frames(GTMaterials.Naquadah))
                    .where("I", Predicates.blocks(FUSION_COIL.get()))
                    .where("J", Predicates.blocks(GTBlocks.HIGH_POWER_CASING.get()))
                    .where("K", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Iridium).get()))
                    .where("L", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, BlueAlloy).get()))
                    .where("M", Predicates.frames(BlueAlloy))
                    .where("N", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Naquadria).get()))
                    .where("O", Predicates.frames(Neutronium))
                    .where("P", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Neutronium).get()))
                    .where("Q", Predicates.blocks(DEPTH_FORCE_FIELD_STABILIZING_CASING.get()))
                    .where("R", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("S", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("T", Predicates.blocks(CASING_NAQUADAH_GEARBOX.get()))
                    .where("U", Predicates.blocks(COMPUTER_CASING.get()))
                    .where("V", Predicates.blocks(MACHINE_CASING_UV.get()))
                    .where("W", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Naquadah).get()))
                    .where("X", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Naquadah).get()))
                    .where("Y", Predicates.blocks(ADVANCED_COMPUTER_CASING.get()))
                    .where("Z", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Darmstadtium).get()))
                    .where("#", Predicates.any())
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("A", Predicates.blocks(ALF_STEEL_CASING.get()))
                    .build())
            .workableCasingModel(CTNHCore.id("block/casings/depth_force_field_stabilizing_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static MultiblockMachineDefinition ETERNAL_WELL_OF_SUFFER = REGISTRATE.multiblock("eternal_well_of_suffer", EternalWosMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.DIGITAL_WELL_OF_SUFFER)
            .recipeModifier(EternalWosMachine::recipeModifier)
            .tooltips(Component.translatable("ctnh.gtceu:eternal_well_of_suffer.0"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.1"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.2"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.3"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.4"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.5"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.6"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.7"),
                    Component.translatable("ctnh.gtceu:eternal_well_of_suffer.8"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#########", "#########", "#########", "#########", "#########", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "###AAA###", "#########", "#########")
                    .aisle("#########", "#########", "##B#B#B##", "#ABABABA#", "#ABABABA#", "#A#BBB#A#", "#A#CCC#A#", "#A#DDD#A#", "#A#DDD#A#", "#A#####A#", "#A#####A#", "#A#####A#", "#A#####A#", "#AA###AA#", "###AAA###", "#########")
                    .aisle("#########", "####A####", "#BAA#AAB#", "#BA###AB#", "#BA###AB#", "##BCCCB##", "##CEEEC##", "##D###D##", "##D###D##", "###DDD###", "#########", "#########", "#########", "#A#####A#", "##AAAAA##", "#########")
                    .aisle("###AAA###", "###AAA###", "##A###A##", "#A#####A#", "#A#####A#", "#BCFFFCB#", "#CEEEEEC#", "#D#####D#", "#D#####D#", "##DD#DD##", "####D####", "####G####", "#########", "A#######A", "#AAA#AAA#", "###AAA###")
                    .aisle("###AAA###", "##AAHAA##", "#B#####B#", "#B#####B#", "#B#####B#", "ABCFCFCBA", "ACEEEEECA", "AD#####DA", "AD#####DA", "A#D###D#A", "A##DGD##A", "A##GGG##A", "A###G###A", "A#######A", "#AA###AA#", "###AAA###")
                    .aisle("###AAA###", "###AAA###", "##A###A##", "#A#####A#", "#A#####A#", "#BCFFFCB#", "#CEEEEEC#", "#D#####D#", "#D#####D#", "##DD#DD##", "####D####", "####G####", "#########", "A#######A", "#AAA#AAA#", "###AAA###")
                    .aisle("#########", "####A####", "#BAA#AAB#", "#BA###AB#", "#BA###AB#", "##BCCCB##", "##CEEEC##", "##D###D##", "##D###D##", "###DDD###", "#########", "#########", "#########", "#A#####A#", "##AAAAA##", "#########")
                    .aisle("#########", "#########", "##B#B#B##", "#ABA@ABA#", "#ABABABA#", "#A#BBB#A#", "#A#CCC#A#", "#A#DDD#A#", "#A#DDD#A#", "#A#####A#", "#A#####A#", "#A#####A#", "#A#####A#", "#AA###AA#", "###AAA###", "#########")
                    .aisle("#########", "#########", "#########", "#########", "#########", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "####A####", "###AAA###", "#########", "#########")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(BloodMagicBlocks.OBSIDIAN_TILE_PATH.get()))
                    .where("B", Predicates.blocks(BloodMagicBlocks.BLOODSTONE.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("C", Predicates.blocks(BloodMagicBlocks.BLANK_RITUAL_STONE.get()))
                    .where("D", Predicates.blocks(TINTED_GLASS))
                    .where("E", Predicates.blocks(BloodMagicFluids.LIFE_ESSENCE_BLOCK.get()))
                    .where("F", Predicates.blocks(BloodMagicBlocks.SACRIFICE_RUNE.get()))
                    .where("G", Predicates.blocks(BloodMagicBlocks.HELLFORGED_BLOCK.get()))
                    .where("H", Predicates.blocks(LAVA))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(BloodMagic.rl("block/largebloodstonebrick"), GTCEu.id("block/machines/digital_well_of_suffer"))
            .register();
    public static MultiblockMachineDefinition HELLFORGE = REGISTRATE.multiblock("hellforge", HellForgeMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.HELLFORGE)

            .tooltips(Component.translatable("ctnh.gtceu:hellforge.0"),
                    Component.translatable("ctnh.gtceu:hellforge.1"),
                    Component.translatable("ctnh.gtceu:hellforge.2"),
                    Component.translatable("ctnh.gtceu:hellforge.3"),
                    Component.translatable("ctnh.gtceu:hellforge.4"),
                    Component.translatable("ctnh.gtceu:hellforge.5"),
                    Component.translatable("ctnh.gtceu:hellforge.6"),
                    Component.translatable("ctnh.gtceu:hellforge.7"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "AAAAAAA", "AAAAAAA", "A#A#A#A")
                    .aisle("AAAAAAA", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "AAAAAAA", "A#####A", "#######")
                    .aisle("AAAAAAA", "##CCC##", "##D#D##", "##BCB##", "##BEB##", "##B#B##", "##D#D##", "##D#D##", "AAAAAAA", "A#AAA#A", "A#####A")
                    .aisle("AAAAAAA", "##CFC##", "###G###", "##CCC##", "##EHE##", "#######", "#######", "#######", "AAAAAAA", "A#AIA#A", "#######")
                    .aisle("AAAAAAA", "##CCC##", "##D#D##", "##BCB##", "##BEB##", "##B#B##", "##D#D##", "##D#D##", "AAAAAAA", "A#AAA#A", "A#####A")
                    .aisle("AAAAAAA", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "#A###A#", "AAAAAAA", "A#####A", "#######")
                    .aisle("AAA@AAA", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "B#####B", "AAAAAAA", "AAAAAAA", "A#A#A#A")
                    .where("A", Predicates.blocks(BloodMagicBlocks.OBSIDIAN_TILE_PATH.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("B", Predicates.blocks(CHAIN))
                    .where("#", Predicates.any())
                    .where("C", Predicates.blocks(BloodMagicBlocks.DUNGEON_BRICK_SLAB.get()))
                    .where("D", Predicates.blocks(BloodMagicBlocks.HELLFORGED_BLOCK.get()))
                    .where("E", Predicates.blocks(BloodMagicBlocks.DUNGEON_BRICK_1.get()))
                    .where("F", Predicates.blocks(BloodMagicBlocks.DUNGEON_TILE.get()))
                    .where("G", Predicates.blocks(BloodMagicBlocks.DUNGEON_BRICK_WALL.get()))
                    .where("H", Predicates.blocks(BloodMagicFluids.LIFE_ESSENCE_BLOCK.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("I", Predicates.blocks(LAVA)).build())
            .workableCasingModel(BloodMagic.rl("block/obsidiantilepath"), GTCEu.id("block/machines/autoclave"))
            .register();
    public static MultiblockMachineDefinition TWISTED_FUSION_MK1 = REGISTRATE.multiblock("twisted_fusion_mk1", holder -> new TwistedFusionMachine(holder, 1))
            .recipeTypes(GTRecipeTypes.FUSION_RECIPES, CTNHRecipeTypes.TWISTED_FUSION)
            .recipeModifiers(TwistedFusionMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .workableCasingModel(CTNHCore.id("block/casings/twisted_fusion_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .tooltips(Component.translatable("ctnh.gtceu:twisted_fusion_mk1.0"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.1"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.2"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.3"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.4"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.5"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.6"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.7"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.8"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.9"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "####AA###AAA###", "###A##AAA##A###", "###AAA###AA####", "###############", "###############")
                    .aisle("###############", "###########A###", "###A######ABA##", "##ABAA###AABA##", "##ABA######A###", "###A###########", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##AA#######AA##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "###########AA##", "###########A#A#", "##A#########A##", "#A#A###########", "##AA###########", "###############")
                    .aisle("###########A###", "#########AABA##", "##########ABA##", "###A#######A###", "##ABA##########", "##ABAA#########", "###A###########")
                    .aisle("#########AA####", "######AAA##A###", "#########AAA###", "###############", "###AAA#########", "###A##AAA######", "####AA#########")
                    .aisle("######AAA######", "####AA###AA####", "######CCC######", "######C@C######", "######CCC######", "####AA###AA####", "######AAA######")
                    .aisle("####AA#########", "###A##AAA######", "###AAA#########", "###############", "#########AAA###", "######AAA##A###", "#########AA####")
                    .aisle("###A###########", "##ABAA#########", "##ABA##########", "###A#######A###", "##########ABA##", "#########AABA##", "###########A###")
                    .aisle("###############", "##AA###########", "#A#A###########", "##A#########A##", "###########A#A#", "###########AA##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##AA#######AA##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "###A###########", "##ABA######A###", "##ABAA###AABA##", "###A######ABA##", "###########A###", "###############")
                    .aisle("###############", "###############", "###AAA###AA####", "###A##AAA##A###", "####AA###AAA###", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(TWISTED_FUSION_CASING.get()))
                    .where("B", Predicates.blocks(FUSION_COIL.get()))
                    .where("C", Predicates.blocks(TWISTED_FUSION_CASING.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .register();
    public static MultiblockMachineDefinition TWISTED_FUSION_MK2 = REGISTRATE.multiblock("twisted_fusion_mk2", holder -> new TwistedFusionMachine(holder, 2))
            .recipeTypes(GTRecipeTypes.FUSION_RECIPES, CTNHRecipeTypes.TWISTED_FUSION)

            .recipeModifiers(TwistedFusionMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .workableCasingModel(CTNHCore.id("block/casings/twisted_fusion_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .tooltips(Component.translatable("ctnh.gtceu:twisted_fusion_mk1.0"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.1"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.2"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.3"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.4"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.5"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.6"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.7"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.8"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.9"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "####AA###AAA###", "###A##AAA##A###", "###AAA###AA####", "###############", "###############")
                    .aisle("###############", "###########A###", "###A######ABA##", "##ABAA###AABA##", "##ABA######A###", "###A###########", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##AA#######AA##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "###########AA##", "###########A#A#", "##A#########A##", "#A#A###########", "##AA###########", "###############")
                    .aisle("###########A###", "#########AABA##", "##########ABA##", "###A#######A###", "##ABA##########", "##ABAA#########", "###A###########")
                    .aisle("#########AA####", "######AAA##A###", "#########AAA###", "###############", "###AAA#########", "###A##AAA######", "####AA#########")
                    .aisle("######AAA######", "####AA###AA####", "######CCC######", "######C@C######", "######CCC######", "####AA###AA####", "######AAA######")
                    .aisle("####AA#########", "###A##AAA######", "###AAA#########", "###############", "#########AAA###", "######AAA##A###", "#########AA####")
                    .aisle("###A###########", "##ABAA#########", "##ABA##########", "###A#######A###", "##########ABA##", "#########AABA##", "###########A###")
                    .aisle("###############", "##AA###########", "#A#A###########", "##A#########A##", "###########A#A#", "###########AA##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##AA#######AA##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "###A###########", "##ABA######A###", "##ABAA###AABA##", "###A######ABA##", "###########A###", "###############")
                    .aisle("###############", "###############", "###AAA###AA####", "###A##AAA##A###", "####AA###AAA###", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(TWISTED_FUSION_CASING.get()))
                    .where("B", Predicates.blocks(FUSION_COIL.get()))
                    .where("C", Predicates.blocks(TWISTED_FUSION_CASING.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .register();
    public static MultiblockMachineDefinition TWISTED_FUSION_MK3 = REGISTRATE.multiblock("twisted_fusion_mk3", holder -> new TwistedFusionMachine(holder, 3))
            .recipeTypes(GTRecipeTypes.FUSION_RECIPES, CTNHRecipeTypes.TWISTED_FUSION)
            .recipeModifiers(TwistedFusionMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .workableCasingModel(CTNHCore.id("block/casings/twisted_fusion_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .tooltips(Component.translatable("ctnh.gtceu:twisted_fusion_mk1.0"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.1"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.2"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.3"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.4"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.5"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.6"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.7"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.8"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.9"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "####AA###AAA###", "###A##AAA##A###", "###AAA###AA####", "###############", "###############")
                    .aisle("###############", "###########A###", "###A######ABA##", "##ABAA###AABA##", "##ABA######A###", "###A###########", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##AA#######AA##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "###########AA##", "###########A#A#", "##A#########A##", "#A#A###########", "##AA###########", "###############")
                    .aisle("###########A###", "#########AABA##", "##########ABA##", "###A#######A###", "##ABA##########", "##ABAA#########", "###A###########")
                    .aisle("#########AA####", "######AAA##A###", "#########AAA###", "###############", "###AAA#########", "###A##AAA######", "####AA#########")
                    .aisle("######AAA######", "####AA###AA####", "######CCC######", "######C@C######", "######CCC######", "####AA###AA####", "######AAA######")
                    .aisle("####AA#########", "###A##AAA######", "###AAA#########", "###############", "#########AAA###", "######AAA##A###", "#########AA####")
                    .aisle("###A###########", "##ABAA#########", "##ABA##########", "###A#######A###", "##########ABA##", "#########AABA##", "###########A###")
                    .aisle("###############", "##AA###########", "#A#A###########", "##A#########A##", "###########A#A#", "###########AA##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##AA#######AA##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "###A###########", "##ABA######A###", "##ABAA###AABA##", "###A######ABA##", "###########A###", "###############")
                    .aisle("###############", "###############", "###AAA###AA####", "###A##AAA##A###", "####AA###AAA###", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(TWISTED_FUSION_CASING.get()))
                    .where("B", Predicates.blocks(FUSION_COIL.get()))
                    .where("C", Predicates.blocks(TWISTED_FUSION_CASING.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .register();
    public static MultiblockMachineDefinition TWISTED_FUSION_MKINFINITY = REGISTRATE.multiblock("twisted_fusion_mkinfinity", holder -> new TwistedFusionMachine(holder, 666))
            .recipeTypes(GTRecipeTypes.FUSION_RECIPES, CTNHRecipeTypes.TWISTED_FUSION)
            .recipeModifiers(TwistedFusionMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .workableCasingModel(CTNHCore.id("block/casings/twisted_fusion_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .tooltips(Component.translatable("ctnh.gtceu.tfmkinfinity.1"),
                    Component.translatable("ctnh.gtceu.tfmkinfinity.1.1"),
                    Component.translatable("ctnh.gtceu:twisted_fusion_mk1.0"),
                    Component.translatable("ctnh.gtceu.tfmkinfinity.2"),
                    Component.translatable("ctnh.gtceu.tfmkinfinity.3")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "####AA###AAA###", "###A##AAA##A###", "###AAA###AA####", "###############", "###############")
                    .aisle("###############", "###########A###", "###A######ABA##", "##ABAA###AABA##", "##ABA######A###", "###A###########", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##AA#######AA##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "###########AA##", "###########A#A#", "##A#########A##", "#A#A###########", "##AA###########", "###############")
                    .aisle("###########A###", "#########AABA##", "##########ABA##", "###A#######A###", "##ABA##########", "##ABAA#########", "###A###########")
                    .aisle("#########AA####", "######AAA##A###", "#########AAA###", "###############", "###AAA#########", "###A##AAA######", "####AA#########")
                    .aisle("######AAA######", "####AA###AA####", "######CCC######", "######C@C######", "######CCC######", "####AA###AA####", "######AAA######")
                    .aisle("####AA#########", "###A##AAA######", "###AAA#########", "###############", "#########AAA###", "######AAA##A###", "#########AA####")
                    .aisle("###A###########", "##ABAA#########", "##ABA##########", "###A#######A###", "##########ABA##", "#########AABA##", "###########A###")
                    .aisle("###############", "##AA###########", "#A#A###########", "##A#########A##", "###########A#A#", "###########AA##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##AA#######AA##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "###A###########", "##ABA######A###", "##ABAA###AABA##", "###A######ABA##", "###########A###", "###############")
                    .aisle("###############", "###############", "###AAA###AA####", "###A##AAA##A###", "####AA###AAA###", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(TWISTED_FUSION_CASING.get()))
                    .where("B", Predicates.blocks(FUSION_COIL.get()))
                    .where("C", Predicates.blocks(TWISTED_FUSION_CASING.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())).or(abilities(PartAbility.INPUT_LASER)))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .register();
    public static MultiblockMachineDefinition TWISTED_FUSION_MKALEPHNULL = REGISTRATE.multiblock("twisted_fusion_mkalephnull", holder -> new TwistedFusionMachine(holder, Integer.MAX_VALUE))
            .recipeTypes(GTRecipeTypes.FUSION_RECIPES, CTNHRecipeTypes.TWISTED_FUSION)
            .recipeModifiers(TwistedFusionMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .workableCasingModel(CTNHCore.id("block/casings/twisted_fusion_casing"), GTCEu.id("block/multiblock/fusion_reactor"))

            .tooltips(Component.translatable("ctnh.gtceu.tfmkalephzero.1"),
                    Component.translatable("ctnh.gtceu.tfmkalephzero.2"),
                    Component.translatable("ctnh.gtceu.tfmkalephzero.3"),
                    Component.translatable("ctnh.gtceu.tfmkalephzero.4")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "####AA###AAA###", "###A##AAA##A###", "###AAA###AA####", "###############", "###############")
                    .aisle("###############", "###########A###", "###A######ABA##", "##ABAA###AABA##", "##ABA######A###", "###A###########", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##AA#######AA##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "#############A#", "############A#A", "#A###########A#", "A#A############", "#A#############", "###############")
                    .aisle("###############", "############A##", "###########A#A#", "##A#########A##", "#A#A###########", "##A############", "###############")
                    .aisle("###############", "###########AA##", "###########A#A#", "##A#########A##", "#A#A###########", "##AA###########", "###############")
                    .aisle("###########A###", "#########AABA##", "##########ABA##", "###A#######A###", "##ABA##########", "##ABAA#########", "###A###########")
                    .aisle("#########AA####", "######AAA##A###", "#########AAA###", "###############", "###AAA#########", "###A##AAA######", "####AA#########")
                    .aisle("######AAA######", "####AA###AA####", "######CCC######", "######C@C######", "######CCC######", "####AA###AA####", "######AAA######")
                    .aisle("####AA#########", "###A##AAA######", "###AAA#########", "###############", "#########AAA###", "######AAA##A###", "#########AA####")
                    .aisle("###A###########", "##ABAA#########", "##ABA##########", "###A#######A###", "##########ABA##", "#########AABA##", "###########A###")
                    .aisle("###############", "##AA###########", "#A#A###########", "##A#########A##", "###########A#A#", "###########AA##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "#A#############", "A#A############", "#A###########A#", "############A#A", "#############A#", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##A#########A##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "##A############", "#A#A###########", "##AA#######AA##", "###########A#A#", "############A##", "###############")
                    .aisle("###############", "###A###########", "##ABA######A###", "##ABAA###AABA##", "###A######ABA##", "###########A###", "###############")
                    .aisle("###############", "###############", "###AAA###AA####", "###A##AAA##A###", "####AA###AAA###", "###############", "###############")
                    .aisle("###############", "###############", "######AAA######", "####AA###AA####", "######AAA######", "###############", "###############")
                    .aisle("###############", "###############", "###############", "######AAA######", "###############", "###############", "###############")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(TWISTED_FUSION_CASING.get()))
                    .where("B", Predicates.blocks(FUSION_COIL.get()))
                    .where("C", Predicates.blocks(TWISTED_FUSION_CASING.get()).or(Predicates.autoAbilities(definition.getRecipeTypes())).or(abilities(PartAbility.INPUT_LASER)))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .register();
    public static MultiblockMachineDefinition NANOGENERATOR = REGISTRATE.multiblock("nanogenetor", NanoscaleTriboelectricGenerator::new)
            .rotationState(RotationState.ALL)
            .recipeType(CTNHRecipeTypes.NANO_GENERATOR)
            .generator(true)
            .recipeModifier(NanoscaleTriboelectricGenerator::recipeModifier, true)
            .tooltips(Component.translatable("ctnh.nano.1"),
                    Component.translatable("ctnh.nano.2"),
                    Component.translatable("ctnh.nano.3"),
                    Component.translatable("ctnh.nano.4")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###B###", "###C###", "###C###", "###C###", "###C###", "###C###", "###D###", "###D###", "###D###", "###D###", "###E###", "###F###", "###F###", "###D###")
                    .aisle("##EEE##", "##B#B##", "##C#C##", "##C#C##", "##C#C##", "##C#C##", "##C#C##", "##D#D##", "##D#D##", "##DED##", "##E#E##", "##F#F##", "##F#F##", "##DDD##")
                    .aisle("#EEEEE#", "#GHHHI#", "#BHHHB#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#DHHHD#", "#DHHHD#", "#E###E#", "#F###F#", "#F###F#", "#DJJJD#")
                    .aisle("EEEEEEE", "K#HLH#M", "N#HLH#G", "B#HLH#B", "C#HLH#C", "C#HLH#C", "C#HLH#C", "C#HLH#C", "C#HLH#C", "DEHLHEO", "E##P##E", "F#####F", "F#####F", "DDJJJDD")
                    .aisle("#EEEEE#", "#GHHHI#", "#BHHHB#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#CHHHC#", "#DHHHD#", "#DHHHD#", "#E###E#", "#F###F#", "#F###F#", "#DJJJD#")
                    .aisle("##EEE##", "##B#B##", "##C#C##", "##C#C##", "##C#C##", "##C#C##", "##C#C##", "##D#D##", "##D#D##", "##DED##", "##E#E##", "##F#F##", "##F#F##", "##DDD##")
                    .aisle("###B###", "###C###", "###C###", "###C###", "###C###", "###C###", "###D###", "###D###", "###D###", "###D###", "###E###", "###F###", "###F###", "###D###")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_NONCONDUCTING.get()))
                    .where("C", Predicates.blocks(CASING_TEMPERED_GLASS.get()))
                    .where("D", Predicates.blocks(CASING_STEEL_PIPE.get()))
                    .where("E", Predicates.blocks(CASING_STEEL_GEARBOX.get()))
                    .where("F", Predicates.blocks(MACHINE_CASING_MV.get()))
                    .where("G", Predicates.blocks(CASING_NONCONDUCTING.get()))
                    .where("H", (Predicates.any()))
                    .where("I", (abilities(PartAbility.OUTPUT_ENERGY)))
                    .where("J", Predicates.blocks(PISTON))
                    .where("K", abilities(PartAbility.IMPORT_ITEMS))
                    .where("L", (Predicates.any()))
                    .where("M", abilities(PartAbility.MAINTENANCE))
                    .where("N", abilities(PartAbility.EXPORT_ITEMS))
                    .where("P", abilities(CTPPPartAbility.OUTPUT_KINETIC))
                    .where("O", Predicates.controller(Predicates.blocks(definition.get())))

                    .build())
            .workableCasingModel((GTCEu.id("block/casings/solid/machine_casing_solid_steel")), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition FOREST_SEA_TREE_FARM = REGISTRATE.multiblock("forest_sea_tree_farm", ForestMachine::new)
            .rotationState(RotationState.ALL)
            .recipeTypes(CTNHRecipeTypes.WOOD_BIONICS)
            .appearanceBlock(CTNHBlocks.NATURAL_ECOLOGICAL_SHELL_CASING)
            .recipeModifiers(ForestMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK))
            .tooltips(Component.translatable("ctnh.forest.1").withStyle(ChatFormatting.GRAY),
                    Component.translatable("ctnh.forest.2"),
                    Component.translatable("ctnh.forest.3"),
                    Component.translatable("ctnh.forest.4"),
                    Component.translatable("ctnh.forest.5"),
                    Component.translatable("ctnh.forest.6"),
                    Component.translatable("ctnh.forest.7"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "AAA", "AAA")
                    .aisle("AAA", "A#A", "AAA")
                    .aisle("AAA", "A@A", "AAA")
                    .where("A", Predicates.blocks(NATURAL_ECOLOGICAL_SHELL_CASING.get())
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("#", Predicates.any())
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/natural_ecological_shell_casing")), CTNHCore.id("block/overlay/forest_sea_tree_farm"))
            .register();
    public final static MultiblockMachineDefinition SINOPE_CHEMICAL = REGISTRATE.multiblock("sinope_chemical", Sinope_Chemical::new)
            .rotationState(RotationState.ALL)
            .recipeTypes(CTNHRecipeTypes.SINOPE)
            .recipeModifiers(Sinope_Chemical::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.sinope.1"),
                    Component.translatable("ctnh.sinope.2"),
                    Component.translatable("ctnh.sinope.3"),
                    Component.translatable("ctnh.sinope.4"),
                    Component.translatable("ctnh.sinope.4.1"),
                    Component.translatable("ctnh.sinope.4.2"),
                    Component.translatable("ctnh.sinope.4.3"),
                    Component.translatable("ctnh.sinope.5"),
                    Component.translatable("ctnh.sinope.5.1"),
                    Component.translatable("ctnh.sinope.6"))

            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAA", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BBBBBBB#", "#########", "#########", "#########", "#########", "#########", "#BBBBBBB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BCCCCCB#", "##DDDDD##", "##EEEEE##", "##EEEEE##", "##EEEEE##", "##DDDDD##", "#BCCCCCB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BCFFFCB#", "##DFFFD##", "##EGGGE##", "##EGGGE##", "##EGGGE##", "##DFFFD##", "#BCFFFCB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BCFFFCB#", "##DFFFD##", "##EG#GE##", "##EGHGE##", "##EG#GE##", "##DFFFD##", "#BCFFFCB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BCFFFCB#", "##DFFFD##", "##EGGGE##", "##EGGGE##", "##EGGGE##", "##DFFFD##", "#BCFFFCB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BCCCCCB#", "##DD@DD##", "##EEEEE##", "##EEEEE##", "##EEEEE##", "##DDDDD##", "#BCCCCCB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "#BBBBBBB#", "#########", "#########", "#########", "#########", "#########", "#BBBBBBB#", "AAAAAAAAA")
                    .aisle("AAAAAAAAA", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "A#######A", "AAAAAAAAA")
                    .where("A", Predicates.blocks(CASING_ASSEMBLY_CONTROL.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("#", Predicates.any())
                    .where("B", Predicates.frames(GTMaterials.Naquadah))
                    .where("C", Predicates.blocks(MACHINE_CASING_ZPM.get()))
                    .where("D", Predicates.blocks(CTNHBlocks.CASING_NAQUADAH_GEARBOX.get()))
                    .where("E", Predicates.blocks(CASING_LAMINATED_GLASS.get()))
                    .where("F", Predicates.blocks(MACHINE_CASING_ZPM.get()))
                    .where("G", Predicates.heatingCoils())
                    .where("H", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Naquadah).get())
                            .or(Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Naquadria).get()))
                            .or(Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, NaquadahEnriched).get()))
                    )
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((GTCEu.id("block/casings/mechanic/machine_casing_assembly_control")), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();
    public final static MultiblockMachineDefinition WIDEPARTICLEACCELERATOR = REGISTRATE.multiblock("wideparticleaccelerator", WideParticleAccelerator::new)
            .rotationState(RotationState.ALL)
            .recipeTypes(CTNHRecipeTypes.ACCELERATOR_UP, CTNHRecipeTypes.ACCELERATOR_DOWN)

            .recipeModifiers(WideParticleAccelerator::recipeModifier,GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.wideaccelerator.1"),
                    Component.translatable("ctnh.wideaccelerator.2"),
                    Component.translatable("ctnh.wideaccelerator.3"),
                    Component.translatable("ctnh.wideaccelerator.4"),
                    Component.translatable("ctnh.wideaccelerator.control"),
                    Component.translatable("ctnh.wideaccelerator.pa"),
                    Component.translatable("ctnh.wideaccelerator.5"),
                    Component.translatable("ctnh.wideaccelerator.6"),
                    Component.translatable("ctnh.wideaccelerator.7"),
                    Component.translatable("ctnh.wideaccelerator.8"),
                    Component.translatable("ctnh.wideaccelerator.9"),
                    Component.translatable("ctnh.wideaccelerator.10")


            )

            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("###########################", "###########################", "###########################", "#############C#############", "############CDC############", "###########CD#DC###########", "############CDC############", "#############C#############", "###########################", "###########################", "###########################")
                    .aisle("###########################", "###########################", "#############C#############", "############CDC############", "###########C###C###########", "##########CD###DC##########", "###########C###C###########", "############CDC############", "#############C#############", "###########################", "###########################")
                    .aisle("############CCC############", "############DDD############", "############CDC############", "###########CDDDC###########", "#########CCD###DCC#########", "#########DDD###DDD#########", "#########CCD###DCC#########", "###########CDDDC###########", "############CDC############", "############DDD############", "############CCC############")
                    .aisle("###########CCFCC###########", "###########DDFDD###########", "###########CCCCC###########", "############CDC############", "########CC#C###C#CC########", "########DDCD###DCDD########", "########CC#C###C#CC########", "############CDC############", "###########CCCCC###########", "###########DDFDD###########", "###########CCFCC###########")
                    .aisle("##########CCGGGCC##########", "##########DDGGGDD##########", "##########CCGGGCC##########", "###########GGGGG###########", "#######CC##GCDCG##CC#######", "#######DD##GD#DG##DD#######", "#######CC##GCDCG##CC#######", "###########GGGGG###########", "##########CCGGGCC##########", "##########DDGGGDD##########", "##########CCGGGCC##########")
                    .aisle("#########CC#####CC#########", "#########DD#####DD#########", "#########CC#####CC#########", "##########G#####G##########", "######CC##G#HIH#G##CC######", "######DD##G#I#I#G##DD######", "######CC##G#HIH#G##CC######", "##########G#####G##########", "#########CC#####CC#########", "#########DD#####DD#########", "#########CC#####CC#########")
                    .aisle("########CC#######CC########", "########DD#######DD########", "########CC#######CC########", "#########G#######G#########", "#####CC##G##HIH##G##CC#####", "#####DD##G##I#I##G##DD#####", "#####CC##G##HIH##G##CC#####", "#########G#######G#########", "########CC#######CC########", "########DD#######DD########", "########CC#######CC########")
                    .aisle("#######CC#########CC#######", "#######DD#########DD#######", "#######CC#########CC#######", "########G#########G########", "####CC##G###HIH###G##CC####", "####DD##G###I#I###G##DD####", "####CC##G###HIH###G##CC####", "########G#########G########", "#######CC#########CC#######", "#######DD#########DD#######", "#######CC#########CC#######")
                    .aisle("######CC###########CC######", "######DD###########DD######", "######CC###########CC######", "#######G###########G#######", "###CC##G####HIH####G##CC###", "###DD##G####I#I####G##DD###", "###CC##G####HIH####G##CC###", "#######G###########G#######", "######CC###########CC######", "######DD###########DD######", "######CC###########CC######")
                    .aisle("#####CC#############CC#####", "#####DD#############DD#####", "#####CC#############CC#####", "######G#############G######", "##CC##G#####HIH#####G##CC##", "##DD##G#####I#I#####G##DD##", "##CC##G#####HIH#####G##CC##", "######G#############G######", "#####CC#############CC#####", "#####DD#############DD#####", "#####CC#############CC#####")
                    .aisle("####CC###############CC####", "####DD###############DD####", "####CC###############CC####", "#####G###############G#####", "##C##G######HIH######G##C##", "#CDC#G######I#I######G#CDC#", "##C##G######HIH######G##C##", "#####G###############G#####", "####CC###############CC####", "####DD###############DD####", "####CC###############CC####")
                    .aisle("###CC#######JJJ#######CC###", "###DD#######JJJ#######DD###", "###CC#######JJJ#######CC###", "##C#G#######JJJ#######G#C##", "#CDCG#######HIH#######GCDC#", "CDDDG#######I#I#######GDDDC", "#CDCG#######HIH#######GCDC#", "##C#G#######JJJ#######G#C##", "###CC#######JJJ#######CC###", "###DD#######JJJ#######DD###", "###CC#######JJJ#######CC###")
                    .aisle("##CCG######J###J######GCC##", "##DDG######J###J######GDD##", "##CCG######J###J######GCC##", "#CDCG######JFFFJ######GCDC#", "C###CHHHHHHH###HHHHHHHC###C", "D###DIIIIIII###IIIIIIID###D", "C###CHHHHHHH###HHHHHHHC###C", "#CDCG######JFFFJ######GCDC#", "##CCG######J###J######GCC##", "##DDG######J###J######GDD##", "##CCG######J###J######GCC##")
                    .aisle("##CFG######J#H#J######GFC##", "##DFG######J#K#J######GFD##", "#CDCG######J#F#J######GCDC#", "CDDDG######JFFFJ######GDDDC", "D###DIIIIIII#F#IIIIIIID###D", "D############F############D", "D###DIIIIIII#F#IIIIIIID###D", "CDDDG######JFFFJ######GDDDC", "#CDCG######J#F#J######GCDC#", "##DFG######J#K#J######GFD##", "##CFG######J#H#J######GFC##")
                    .aisle("##CCG######J###J######GCC##", "##DDG######J###J######GDD##", "##CCG######J###J######GCC##", "#CDCG######JFFFJ######GCDC#", "C###CHHHHHHH###HHHHHHHC###C", "D###DIIIIIII###IIIIIIID###D", "C###CHHHHHHH###HHHHHHHC###C", "#CDCG######JFFFJ######GCDC#", "##CCG######J###J######GCC##", "##DDG######J###J######GDD##", "##CCG######J###J######GCC##")
                    .aisle("###CC#######JJJ#######CC###", "###DD#######JJJ#######DD###", "###CC#######JJJ#######CC###", "##C#G#######JJJ#######G#C##", "#CDCG#######HIH#######GCDC#", "CDDDG#######I#I#######GDDDC", "#CDCG#######HIH#######GCDC#", "##C#G#######JJJ#######G#C##", "###CC#######JJJ#######CC###", "###DD#######JJJ#######DD###", "###CC#######JJJ#######CC###")
                    .aisle("####CC###############CC####", "####DD###############DD####", "####CC###############CC####", "#####G###############G#####", "##C##G######HIH######G##C##", "#CDC#G######I#I######G#CDC#", "##C##G######HIH######G##C##", "#####G###############G#####", "####CC###############CC####", "####DD###############DD####", "####CC###############CC####")
                    .aisle("#####CC#############CC#####", "#####DD#############DD#####", "#####CC#############CC#####", "######G#############G######", "##CC##G#####HIH#####G##CC##", "##DD##G#####I#I#####G##DD##", "##CC##G#####HIH#####G##CC##", "######G#############G######", "#####CC#############CC#####", "#####DD#############DD#####", "#####CC#############CC#####")
                    .aisle("######CC###########CC######", "######DD###########DD######", "######CC###########CC######", "#######G###########G#######", "###CC##G####HIH####G##CC###", "###DD##G####I#I####G##DD###", "###CC##G####HIH####G##CC###", "#######G###########G#######", "######CC###########CC######", "######DD###########DD######", "######CC###########CC######")
                    .aisle("#######CC#########CC#######", "#######DD#########DD#######", "#######CC#########CC#######", "########G#########G########", "####CC##G###HIH###G##CC####", "####DD##G###I#I###G##DD####", "####CC##G###HIH###G##CC####", "########G#########G########", "#######CC#########CC#######", "#######DD#########DD#######", "#######CC#########CC#######")
                    .aisle("########CC#######CC########", "########DD#######DD########", "########CC#######CC########", "#########G#######G#########", "#####CC##G##HIH##G##CC#####", "#####DD##G##I#I##G##DD#####", "#####CC##G##HIH##G##CC#####", "#########G#######G#########", "########CC#######CC########", "########DD#######DD########", "########CC#######CC########")
                    .aisle("#########CC#####CC#########", "#########DD#####DD#########", "#########CC#####CC#########", "##########G#####G##########", "######CC##G#HIH#G##CC######", "######DD##G#I#I#G##DD######", "######CC##G#HIH#G##CC######", "##########G#####G##########", "#########CC#####CC#########", "#########DD#####DD#########", "#########CC#####CC#########")
                    .aisle("##########CCGGGCC##########", "##########DDGGGDD##########", "##########CCGGGCC##########", "###########GGGGG###########", "#######CC##GCDCG##CC#######", "#######DD##GD#DG##DD#######", "#######CC##GCDCG##CC#######", "###########GGGGG###########", "##########CCGGGCC##########", "##########DDGGGDD##########", "##########CCGGGCC##########")
                    .aisle("###########CCFCC###########", "###########DDFDD###########", "###########CCCCC###########", "############CDC############", "########CC#C###C#CC########", "########DDCD###DCDD########", "########CC#C###C#CC########", "############CDC############", "###########CCCCC###########", "###########DDFDD###########", "###########CCFCC###########")
                    .aisle("############CCC############", "############DDD############", "############CDC############", "###########CDDDC###########", "#########CCD###DCC#########", "#########DDD###DDD#########", "#########CCD###DCC#########", "###########CDDDC###########", "############CDC############", "############DDD############", "############CCC############")
                    .aisle("###########################", "###########################", "#############C#############", "############CDC############", "###########C###C###########", "##########CD###DC##########", "###########C###C###########", "############CDC############", "#############C#############", "###########################", "###########################")
                    .aisle("###########################", "###########################", "###########################", "#############C#############", "############CDC############", "###########CDEDC###########", "############CDC############", "#############C#############", "###########################", "###########################", "###########################")
                    .where("#", Predicates.any())
                    .where("C", Predicates.blocks(CASING_NAQUADAH_BLOCK.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.SUBSTATION_INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                    )
                    .where("D", Predicates.blocks(WIDESPEEDINGPIPE.get()))
                    .where("E", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("F", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Neutronium).get()))
                    .where("G", Predicates.blocks(HERMETIC_CASING_UHV.get()))
                    .where("H", Predicates.blocks(MACHINE_CASING_UHV.get()))
                    .where("I", Predicates.blocks(SUPERCONDUCTING_COIL.get()))
                    .where("J", Predicates.blocks(DEPTH_FORCE_FIELD_STABILIZING_CASING.get()))
                    .where("K", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .build())
            .workableCasingModel((GTCEu.id("block/casings/mechanic/machine_casing_assembly_control")), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();
    public final static MultiblockMachineDefinition MANA_REACTOR = REGISTRATE.multiblock("mana_reactor", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.MANAREACTOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH,
                    GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.manareactor.1"),
                    Component.translatable("ctnh.manareactor.2")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAAAAAAAA", "###BB#######BB###", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "##BAAC#####CAAB##", "#####C#####C#####", "#####CCDDDCC#####", "######C###C######", "#################", "#################", "#################", "#######EEE#######", "#######EEE#######", "#######EEE#######", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#BAA#########AAB#", "###BA#######AB###", "#####DD###DD#####", "#######DDD#######", "#################", "######FFFFF######", "#####EEEEEEE#####", "#####EE###EE#####", "#####EE###EE#####", "#####EE###EE#####", "#####EEEEEEE#####", "######EEEEE######", "#################", "#################", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "BAA###########AAB", "##BA#########AB##", "####D#######D####", "#####DDFFFDD#####", "#####FFFFFFF#####", "####FFF####FF####", "####E#######E####", "###EE#######EE###", "###EE#######EE###", "###EE#######EE###", "####E#######E####", "####EE#####EE####", "#####GGGGGGG#####", "#######GGG#######", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "BA#############AB", "##A###########A##", "###D#########D###", "####DFFFFFFFD####", "####F#######F####", "###F#########F###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "####G#######G####", "#####GGGGGGG#####", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#C#############C#", "#C#############C#", "#CD##FFFFFF###DC#", "###DFF#####FFD###", "###F#########F###", "###F#########F###", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "###E#########E###", "###G#########G###", "####GG#####GG####", "######GGGGG######", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#################", "#################", "#CD##FFFFFFF##DC#", "#C#DF#######FD#C#", "###F#########F###", "##F###########F##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "###G#########G###", "####G#######G####", "#####GGGGGGG#####", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#################", "#######FFF#######", "#D###FF###FF###D#", "##DFF#######FFD##", "###F#########F###", "##F###########F##", "##E###########E##", "#E#############E#", "#E#############E#", "#E#############E#", "##E###########E##", "##E###########E##", "###G#########G###", "###GG#######GG###", "#####GG###GG#####", "#######GGG#######")
                    .aisle("AAAAAAAAAAAAAAAAA", "#################", "#######FFF#######", "#D###FF###FF###D#", "##DFF#######FFD##", "###F#########F###", "##F###########F##", "##E###########E##", "#E#############E#", "#E#############E#", "#E#############E#", "##E###########E##", "##E###########E##", "###G#########G###", "###GG#######GG###", "#####GG###GG#####", "#######GGG#######")
                    .aisle("AAAAAAAAAAAAAAAAA", "#################", "#######FFF#######", "#D###FF###FF###D#", "##DFF#######FFD##", "###F#########F###", "##F###########F##", "##E###########E##", "#E#############E#", "#E#############E#", "#E#############E#", "##E###########E##", "##E###########E##", "###G#########G###", "###GG#######GG###", "#####GG###GG#####", "#######GGG#######")
                    .aisle("AAAAAAAAAAAAAAAAA", "#################", "#################", "#CD##FFFFFFF##DC#", "#C#DF#######FD#C#", "###F#########F###", "##F###########F##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "###G#########G###", "####G#######G####", "#####GGGGGGG#####", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#C#############C#", "#C#############C#", "#CD###FFFFF###DC#", "###DFF#####FFD###", "###F#########F###", "###F#########F###", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "##E###########E##", "###E#########E###", "###G#########G###", "####GG#####GG####", "######GGGGG######", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "BA#############AB", "##A###########A##", "###D#########D###", "####DFFFFFFFD####", "####F#######F####", "###F#########F###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "###E#########E###", "####G#######G####", "#####GGGGGGG#####", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "BAA###########AAB", "##BA#########AB##", "####D#######D####", "#####DDFFFDD#####", "#####FFFFFFF#####", "####FF#####FF####", "####E#######E####", "###EE#######EE###", "###EE#######EE###", "###EE#######EE###", "####E#######E####", "####EE#####EE####", "#####GGGGGGG#####", "#######GGG#######", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "#BAA#########AAB#", "###BA#######AB###", "#####DD###DD#####", "#######DDD#######", "#################", "######FFFFF######", "#####EEEEEEE#####", "#####EE###EE#####", "#####EE###EE#####", "#####EE###EE#####", "#####EEEEEEE#####", "######EEEEE######", "#################", "#################", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "##BAACDDDDDCAAB##", "#####CDD@DDC#####", "#####CCDDDCC#####", "######C###C######", "#################", "#################", "#################", "#######EEE#######", "#######EEE#######", "#######EEE#######", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("AAAAAAAAAAAAAAAAA", "###BB#######BB###", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################")
                    .where("A", Predicates.blocks(BotaniaBlocks.livingrockBrick))
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(BotaniaBlocks.livingrockBrickSlab))
                    .where("C", Predicates.blocks(BotaniaBlocks.livingwoodLogStripped))
                    .where("D", Predicates.blocks(BotaniaBlocks.livingrockPolished)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.PARALLEL_HATCH))
                    )
                    .where("E", Predicates.blocks(BotaniaBlocks.manaGlass))
                    .where("F", Predicates.blocks(BotaniaBlocks.elfGlass))
                    .where("G", Predicates.blocks(BotaniaBlocks.bifrostPerm))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(ResourceLocation.tryParse("botania:block/polished_livingrock"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition ARC_GENERATOR = REGISTRATE.multiblock("arc_generator", holder -> new Arc_Generator(holder, 0.75, 1000))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ARC_GENERATOR)
            .generator(true)
            .recipeModifier(Arc_Generator::recipeModifier, true)
            .tooltips(Component.translatable("ctnh.arcgenerator.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t1.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t1.2"),
                    Component.translatable("ctnh.arcgenerator.2"),
                    Component.translatable("ctnh.arcgenerator.3"),
                    Component.translatable("ctnh.arcgenerator.4"),
                    Component.translatable("ctnh.arcgenerator.5")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################").aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGGGGGGHCCCCCGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGCCCCCHGGGGGGCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG####CIC####CB###", "##BDF####IJI####FDB##", "###BC####CIC####GB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BH####IJI####HB###", "##BDH####JJJ####HDB##", "##BFH####IJI####HFB##", "##BFB###########BFB##", "##BFB###########BFB##")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC####CIC####GB###", "##BDF####IJI####FDB##", "###BG####CIC####CB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGCCCCCHGGGGGGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGGGGGGHCCCCCGCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBEBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_NONCONDUCTING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )

                    .where("C", Predicates.frames(TungstenSteel))
                    .where("D", Predicates.blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where("E", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("F", Predicates.blocks(ARC_CELL.get()))
                    .where("G", Predicates.blocks(COIL_HSSG.get()))
                    .where("H", Predicates.blocks(HERMETIC_CASING_IV.get()))
                    .where("I", Predicates.blocks(MACHINE_CASING_IV.get()))
                    .where("J", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, TungstenSteel).get()))
                    .build()
            )
            .workableCasingModel(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition ARC_GENERATOR_MK1 = REGISTRATE.multiblock("arc_generator_mk1", holder -> new Arc_Generator(holder, 1.25, 10000))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ARC_GENERATOR)
            .generator(true)
            .recipeModifier(Arc_Generator::recipeModifier, true)
            .tooltips(Component.translatable("ctnh.arcgenerator.t2.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t2.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t2.2"),
                    Component.translatable("ctnh.arcgenerator.2"),
                    Component.translatable("ctnh.arcgenerator.3"),
                    Component.translatable("ctnh.arcgenerator.4"),
                    Component.translatable("ctnh.arcgenerator.5")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################").aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGGGGGGHCCCCCGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGCCCCCHGGGGGGCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG####CIC####CB###", "##BDF####IJI####FDB##", "###BC####CIC####GB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BH####IJI####HB###", "##BDH####JJJ####HDB##", "##BFH####IJI####HFB##", "##BFB###########BFB##", "##BFB###########BFB##")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC####CIC####GB###", "##BDF####IJI####FDB##", "###BG####CIC####CB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGCCCCCHGGGGGGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGGGGGGHCCCCCGCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBEBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_NONCONDUCTING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )

                    .where("C", Predicates.frames(TungstenSteel))
                    .where("D", Predicates.blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where("E", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("F", Predicates.blocks(ARC_CELL.get()))
                    .where("G", Predicates.blocks(COIL_HSSG.get()))
                    .where("H", Predicates.blocks(HERMETIC_CASING_IV.get()))
                    .where("I", Predicates.blocks(MACHINE_CASING_IV.get()))
                    .where("J", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, TungstenSteel).get()))
                    .build()
            )
            .workableCasingModel(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition ARC_GENERATOR_MK2 = REGISTRATE.multiblock("arc_generator_mk2", holder -> new Arc_Generator(holder, 2.25, 50000))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ARC_GENERATOR)
            .generator(true)
            .recipeModifier(Arc_Generator::recipeModifier, true)
            .tooltips(Component.translatable("ctnh.arcgenerator.t3.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t3.1"),
                    Component.translatable("ctnh.arcgenerator.arc.t3.2"),
                    Component.translatable("ctnh.arcgenerator.2"),
                    Component.translatable("ctnh.arcgenerator.3"),
                    Component.translatable("ctnh.arcgenerator.4"),
                    Component.translatable("ctnh.arcgenerator.5")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################").aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGGGGGGHCCCCCGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGCCCCCHGGGGGGCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG###########CB###", "##BDF###########FDB##", "###BC###########GB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BG####CIC####CB###", "##BDF####IJI####FDB##", "###BC####CIC####GB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BH####IJI####HB###", "##BDH####JJJ####HDB##", "##BFH####IJI####HFB##", "##BFB###########BFB##", "##BFB###########BFB##")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC####CIC####GB###", "##BDF####IJI####FDB##", "###BG####CIC####CB###", "###B#############B###", "###B#############B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###BC###########GB###", "##BDF###########FDB##", "###BG###########CB###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCGCCCCCHGGGGGGCB##", "#BCDGFFFFFHFFFFFGDCB#", "##BCGGGGGGHCCCCCGCB##", "###B######B######B###", "##########B##########")
                    .aisle("###B#############B###", "###B#############B###", "###B#############B###", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBBBBBBBCDCB#", "BCDFDDDDDDDDDDDDDFDCB", "#BCDCBBBBBFBBBBBCDCB#", "##BCB####BFB####BCB##", "###B#####BFB#####B###")
                    .aisle("#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "#BCDCBBBBBEBBBBBCDCB#", "##BCB#####B#####BCB##", "###B######B######B###", "##########B##########")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "##BCB###########BCB##", "###B#############B###", "#####################", "#####################")
                    .aisle("#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "###B#############B###", "#####################", "#####################", "#####################")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_NONCONDUCTING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )

                    .where("C", Predicates.frames(TungstenSteel))
                    .where("D", Predicates.blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where("E", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("F", Predicates.blocks(ARC_CELL.get()))
                    .where("G", Predicates.blocks(COIL_HSSG.get()))
                    .where("H", Predicates.blocks(HERMETIC_CASING_IV.get()))
                    .where("I", Predicates.blocks(MACHINE_CASING_IV.get()))
                    .where("J", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, TungstenSteel).get()))
                    .build()
            )
            .workableCasingModel(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition ARC_REACTOR = REGISTRATE.multiblock("arc_reactor", holder -> new Arc_Reactor(holder, 10))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ARC_REACTOR)
            .recipeModifier(Arc_Reactor::recipeModifier)
            .tooltips(Component.translatable("ctnh.arcreactor.1"),
                    Component.translatable("ctnh.arcreactor.2"),
                    Component.translatable("ctnh.arcreactor.t1")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#########B########", "#########B########", "#########B########", "#########B########", "#########B########", "#########B########", "##################", "##################")
                    .aisle("########BDB#######", "########BDB#######", "########BDB#######", "########BDB#######", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("#########B########", "#########B########", "#########B########", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("##################", "##################", "##################", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("##################", "##################", "##################", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("##################", "#########B########", "#########B########", "#########B########", "######BBBDBBB#####", "#########B########", "#########B########", "#########B########")
                    .aisle("##################", "#########B########", "########BDB#######", "#######BBDBB######", "######BDDDDDB#####", "#######BBDBB######", "########BDB#######", "#########B########")
                    .aisle("##B#############B#", "##B######B######B#", "##B####BBDBB####B#", "##B####B###B####B#", "##BBBBBD###DBBBBB#", "#######B###B######", "#######BBDBB######", "#########B########")
                    .aisle("#BDB###########BDB", "#BDB##BBBBBBB##BDB", "#BDB##BDDDDDB##BDB", "#BDBBBBD###DBBBBDB", "#BDDDDDD###DDDDDDB", "#BBBBBBD###DBBBBBB", "######BDDDDDB#####", "######BBBBBBB#####")
                    .aisle("##B#############B#", "##B######B######B#", "##B####BBDBB####B#", "##B####B###B####B#", "##BBBBBD###DBBBBB#", "#######B###B######", "#######BBDBB######", "#########B########")
                    .aisle("##################", "#########B########", "########BDB#######", "#######BBDBB######", "######BDDDDDB#####", "#######BBDBB######", "########BDB#######", "#########B########")
                    .aisle("##################", "#########B########", "#########B########", "#########B########", "######BBBDBBB#####", "#########B########", "#########B########", "#########B########")
                    .aisle("##################", "##################", "##################", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("##################", "##################", "##################", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("#########B########", "#########B########", "#########B########", "#########B########", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("########BDB#######", "########BDB#######", "########BDB#######", "########BDB#######", "########BDB#######", "#########B########", "##################", "##################")
                    .aisle("#########B########", "#########@########", "#########B########", "#########B########", "#########B########", "#########B########", "##################", "##################")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_NONCONDUCTING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("D", Predicates.blocks(ARC_CELL.get()))
                    .build())
            .workableCasingModel(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition MAGIC_FUEL_GENERATOR = REGISTRATE.multiblock("magic_fuel_generator", holder -> new ManaMachine(holder, 8, 25))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.MAGIC_FUEL_GENERATOR)
            .recipeModifiers(ManaMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.magic.generator"),
                    Component.translatable("ctnh.magic.generator.1"),
                    Component.translatable("ctnh.perfect_overclock"),
                    Component.translatable("ctnh.manamachine.parallel")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("##BBB##", "##BBB##", "##BBB##", "###D###", "###D###", "###B###")
                    .aisle("##BEB##", "##FGF##", "##FHF##", "##FHF##", "##FGF##", "##BIB##")
                    .aisle("BBJEJBB", "BFJGJFB", "BFJHJFB", "#FJ#JF#", "#FJGJF#", "#BJIJB#")
                    .aisle("BEEEEEB", "GGGGGGG", "BHHHHHB", "DH#H#HD", "DGGGGGD", "BIIIIIB")
                    .aisle("BBJEJBB", "BFJGJFB", "BFJHJFB", "#FJ#JF#", "#FJGJF#", "#BJIJB#")
                    .aisle("##BEB##", "##FGF##", "##FHF##", "##FHF##", "##FGF##", "##BIB##")
                    .aisle("##BBB##", "##BCB##", "##BBB##", "###D###", "###D###", "###B###")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_OSMIRIDIUM.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("C", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("D", Predicates.frames(Titanium))
                    .where("E", Predicates.blocks(ZENITH_CASING_GEARBOX.get()))
                    .where("F", Predicates.blocks(CASING_LAMINATED_GLASS.get()))
                    .where("G", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("H", Predicates.blocks(ELEMENTIUM_PIPE_CASING.get()))
                    .where("I", Predicates.blocks(ELEMENTIUM_CASING.get()))
                    .where("J", Predicates.blocks(HERMETIC_CASING_LuV.get()))
                    .build())
            .workableCasingModel(CTNHCore.id("block/casings/osmiridium_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition SUPERCONDUCTING_PENNING_TRAP = REGISTRATE.multiblock("superconducting_penning_trap", Superconducting_Penning_Trap::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(DUMMY_RECIPES)
//            .recipeModifiers(Superconducting_Penning_Trap::recipeModifier)
            .tooltips(Component.translatable("ctnh.trap.1"),
                    Component.translatable("ctnh.trap.2"),
                    Component.translatable("ctnh.trap.3"),
                    Component.translatable("ctnh.trap.4"),
                    Component.translatable("ctnh.trap.5")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("#####BEEEBBIIIIIIIIEIIIIIIIIBBEEEB#####", "####C#####CC###############CC#####C####", "####C#####CC###############CC#####C####", "####C#####CC###############CC#####C####", "#####BEEEBB#################BBEEEB#####", "##########FF###############FF##########", "##########JJ###############JJ##########", "##########JJ###############JJ##########", "##########JJ###############JJ##########", "##########JJ###############JJ##########", "##########FF######FFF######FF##########", "#######################################", "##################D#D##################", "##########GG#######B#######GG##########", "##################D#D##################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle("###BEEEBIIIIIIIIIIIEIIIIIIIIIIIBEEEB###", "###C####C#####################C####C###", "###C####C#####################C####C###", "###C####C#####################C####C###", "###BEEEB#######################BEEEB###", "########F#####################F########", "########G#####################G########", "########G#####################G########", "########G#####################G########", "########G#######FF###FF#######G########", "########F#######GG###GG#######F########", "########G#######FF###FF#######G########", "########G#######BB###BB#######G########", "########FFF#####GG###GG#####FFF########", "################KK###KK################", "################DD#D#DD################", "################KK###KK################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle("#BEEEBIIIIIIIIIIIIIEIIIIIIIIIIIIIBEEEB#", "#C####C#########################C####C#", "#C####C#########################C####C#", "#C####C#########################C####C#", "#BEEEB###########################BEEEB#", "######F#########################F######", "######J#########################J######", "######J#########################J######", "######J#########################J######", "######J#####FF###########FF#####J######", "######F#####GG###########GG#####F######", "############FF###########FF############", "############BB###########BB############", "######G####FGG###########GGF####G######", "############KK###########KK############", "############DD#####D#####DD############", "############KK###########KK############", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("BEEEBIIIIIIIIIIIIIIEIIIIIIIIIIIIIIBEEEB", "C###C##############M##############C###C", "C###C##############M##############C###C", "C###C##############M##############C###C", "BEEEB##############M##############BEEEB", "####F##############M##############F####", "####G##############M##############G####", "####G##############M##############G####", "####G##############M##############G####", "####G###F#########BBB#########F###G####", "####FFFFG########MBNBM########GFFFF####", "########F#########BBB#########F########", "DDDDDDDDB##########M##########BDDDDDDDD", "####G###G##########M##########G###G####", "DDDDDDDDK##########M##########KDDDDDDDD", "########D##########D##########D########", "########K#####################K########", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle("BEEEBIIIIIIIIIIIIIIEIIIIIIIIIIIIIIBEEEB", "C###C##############M##############C###C", "C###C##############M##############C###C", "C###C##############M##############C###C", "BEEEB##############M##############BEEEB", "####F##############M##############F####", "####G##############M##############G####", "####G##############M##############G####", "####G##############M##############G####", "####G###F#########BBB#########F###G####", "####FFFFG########MBNBM########GFFFF####", "########F#########BBB#########F########", "DDDDDDDDB##########M##########BDDDDDDDD", "####G###G##########M##########G###G####", "DDDDDDDDK##########M##########KDDDDDDDD", "########D##########D##########D########", "########K#####################K########", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###BEEEBIIIIIIIIIIIEIIIIIIIIIIIBEEEB###", "###C####C#####################C####C###", "###C####C#####################C####C###", "###C####C#####################C####C###", "###BEEEB#######################BEEEB###", "########F#####################F########", "########G#####################G########", "########G#####################G########", "########G#####################G########", "########G#######FF###FF#######G########", "########F#######GG###GG#######F########", "########G#######FF###FF#######G########", "########G#######BB###BB#######G########", "########FFF#####GG###GG#####FFF########", "################KK###KK################", "################DD#D#DD################", "################KK###KK################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("########BEEEEEEEBBBEBBBEEEEEEEB########", "#######C#########CCCCC#########C#######", "#######C#########CCCCC#########C#######", "#######C#########CCCCC#########C#######", "########BEEEEEEEBBBBBBBEEEEEEEB########", "#################FFFFF#################", "#################FGGGF#################", "#################FGGGF#################", "#################FGGGF#################", "#################FGGGF#################", "#################FFHFF#################", "#######################################", "##################D#D##################", "#################GGBGG#################", "##################D#D##################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################", "#######################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .where("#", Predicates.any())
                    .where("A", Predicates.any())
                    .where("B", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("C", Predicates.blocks(CASING_NAQUADAH_ALLOY_BLOCK.get()))
                    .where("D", Predicates.blocks(ADVANCED_COMPUTER_CASING.get())
                            .or(Predicates.abilities(PartAbility.INPUT_ENERGY)))
                    .where("E", Predicates.blocks(WIDESPEEDINGPIPE.get()))
                    .where("F", Predicates.blocks(MACHINE_CASING_ZPM.get()))
                    .where("G", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Neutronium).get()))
                    .where("H", Predicates.blocks(HERMETIC_CASING_ZPM.get()))
                    .where("I", Predicates.blocks(DEPTH_FORCE_FIELD_STABILIZING_CASING.get()))
                    .where("J", Predicates.blocks(FUSION_GLASS.get()))
                    .where("K", Predicates.blocks(COMPUTER_HEAT_VENT.get()))
                    .where("L", Predicates.any())
                    .where("M", Predicates.frames(Neutronium))
                    .where("N", Predicates.blocks(FUSION_CASING.get()))
                    .where("O", Predicates.blocks(BATTERY_EMPTY_TIER_III.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel((CTNHCore.id("block/casings/nq_alloy_casing")), GTCEu.id("block/multiblock/implosion_compressor"))
            .register();

    public static final MultiblockMachineDefinition ADVANCED_ASSEMBLY_LINE = GTRegistration.REGISTRATE
            .multiblock("advance_assembly_line", AssemblyLineMachine::new)
            .rotationState(RotationState.ALL)
            .recipeType(GTRecipeTypes.ASSEMBLY_LINE_RECIPES)
            .alwaysTryModifyRecipe(true)
            .recipeModifiers(GTRecipeModifiers::hatchParallel, GTRecipeModifiers.DEFAULT_ENVIRONMENT_REQUIREMENT,
                    GTRecipeModifiers.OC_NON_PERFECT_SUBTICK)
            .tooltips(Component.translatable("ctnh.advanceassemblyline.1"),
                    Component.translatable("gtceu.multiblock.laser.tooltip"),
                    Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .appearanceBlock(ADVANCE_MACHINE_CASING_SOLID_STEEL)
            .pattern(definition -> FactoryBlockPattern.start(BACK, UP, RIGHT)
                    .aisle("FIF", "RTR", "SAG", "#Y#")
                    .aisle("FIF", "RTR", "DAG", "#Y#").setRepeatable(3, 15)
                    .aisle("FOF", "RTR", "DAG", "#Y#")
                    .where("S", Predicates.controller(blocks(definition.getBlock())))
                    .where("F", blocks(ADVANCE_MACHINE_CASING_SOLID_STEEL.get())
                            .or(!ConfigHolder.INSTANCE.machines.orderedAssemblyLineFluids ?
                                    abilities(PartAbility.IMPORT_FLUIDS_1X,
                                            PartAbility.IMPORT_FLUIDS_4X, PartAbility.IMPORT_FLUIDS_9X) :
                                    abilities(PartAbility.IMPORT_FLUIDS_1X).setMaxGlobalLimited(4))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1).setPreviewCount(1)))
                    .where("O",
                            abilities(PartAbility.EXPORT_ITEMS)
                                    .addTooltips(Component.translatable("gtceu.multiblock.pattern.location_end")))
                    .where("Y",
                            blocks(ADVANCE_MACHINE_CASING_SOLID_STEEL.get())
                                    .or(abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(16))
                                    .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(16)))
                    .where("I", abilities(PartAbility.IMPORT_ITEMS))
                    .where("G", blocks(ADVANCE_MACHINE_CASING_GRATE.get()))
                    .where("A", blocks(ADVANCE_MACHINE_CASING_ASSEMBLY_CONTROL.get()))
                    .where("R", blocks(FUSION_GLASS.get()))
                    .where("T", blocks(ADVANCE_MACHINE_CASING_ASSEMBLY_LINE.get()))
                    .where("D", dataHatchPredicate(blocks(ADVANCE_MACHINE_CASING_GRATE.get())))
                    .where("#", Predicates.any())
                    .build())
            .workableCasingModel(CTNHCore.id("block/casings/advance_machine_casing_solid_steel"),
                    GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public final static MultiblockMachineDefinition CultivationRoom = REGISTRATE.multiblock("cultivationroom", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.CULTIVATION_ROOM)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH,
                    GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK))
            .tooltips(Component.translatable("ctnh.cultivationroom.1").withStyle(ChatFormatting.GREEN),
                    Component.translatable("ctnh.cultivationroom.2"),
                    Component.translatable("ctnh.multiblock.parallelize.tooltip"),
                    Component.translatable("gtceu.multiblock.laser.tooltip")
            )
            .appearanceBlock(CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "ABBBA", "ACCCA", "ADDDA", "ADDDA", "ADDDA", "AAAAA", "ABBBA", "AAAAA")
                    .aisle("AAAAA", "BBBBB", "CDDDC", "DEEED", "DEEED", "DEEED", "ADDDA", "BBBBB", "AAAAA")
                    .aisle("AAAAA", "BBBBB", "CDDDC", "DEEED", "DEEED", "DEEED", "ADDDA", "BBBBB", "AAAAA")
                    .aisle("AAAAA", "BBBBB", "CDDDC", "DEEED", "DEEED", "DEEED", "ADDDA", "BBBBB", "AAAAA")
                    .aisle("AAAAA", "ABBBA", "AC@CA", "ADDDA", "ADDDA", "ADDDA", "AAAAA", "ABBBA", "AAAAA")
                    .where("A", blocks(CASING_STAINLESS_CLEAN.get()))
                    .where("B", blocks(FILTER_CASING_STERILE.get()))
                    .where("C", Predicates.autoAbilities(definition.getRecipeTypes())
                            .or(abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(blocks(CASING_STAINLESS_CLEAN.get())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("D", Predicates.blocks(CLEANROOM_GLASS.get()))
                    .where("E", Predicates.blocks(WATER))
                    .build()
            )
            .workableCasingModel(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/implosion_compressor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_PRESSOR = REGISTRATE.multiblock("mechanical_pressor", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_PRESSOR_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "B###B", "BBBBB", "B###B", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#####", "B###B", "#####", "CEEEC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#####", "B###B", "#####", "CEEEC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#####", "B###B", "#####", "CEEEC", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "B###B", "BBBBB", "B###B", "BCCCB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(AllBlocks.DEPOT.get()))
                    .where("E", Predicates.blocks(AllBlocks.MECHANICAL_PRESS.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_MIXER = REGISTRATE.multiblock("mechanical_mixer", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_MIXER_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "BDDDB", "B###B", "B###B", "BDDDB", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#####", "#####", "DGGGD", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#####", "#####", "DGGGD", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#####", "#####", "DGGGD", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "BDDDB", "B###B", "B###B", "BDDDB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(GLASS))
                    .where("D", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("E", Predicates.blocks(AllBlocks.BLAZE_BURNER.get()))
                    .where("F", Predicates.blocks(AllBlocks.BASIN.get()))
                    .where("G", Predicates.blocks(AllBlocks.MECHANICAL_MIXER.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_CENTRIFUGE = REGISTRATE.multiblock("mechanical_centrifuge", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_CENTRIFUGE_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "B###B", "B###B", "B###B", "BBBBB", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "#EEE#", "#EEE#", "BF#FB", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EGE#", "#EGE#", "#EGE#", "B#H#B", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "#EEE#", "#EEE#", "BF#FB", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "B###B", "B###B", "B###B", "BBBBB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(AllBlocks.BASIN.get()))
                    .where("E", Predicates.blocks(VintageBlocks.CENTRIFUGE_STRUCTURAL.get()))
                    .where("F", Predicates.blocks(AllBlocks.BRASS_ENCASED_COGWHEEL.get()))
                    .where("G", Predicates.blocks(VintageBlocks.CENTRIFUGE.get()))
                    .where("H", Predicates.blocks(AllBlocks.BRASS_ENCASED_LARGE_COGWHEEL.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_SIFTER = REGISTRATE.multiblock("mechanical_sifter", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_SIFTER_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "B###B", "AAAAA", "B###B", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "ADDDA", "#####", "CFFFC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "ADDDA", "#####", "CFFFC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "ADDDA", "#####", "CFFFC", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "B###B", "AAAAA", "B###B", "BCCCB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(AllBlocks.BASIN.get()))
                    .where("E", Predicates.blocks(VintageBlocks.VIBRATING_TABLE.get()))
                    .where("F", Predicates.blocks(VintageBlocks.VACUUM_CHAMBER.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_EXTRACTOR = REGISTRATE.multiblock("mechanical_extractor", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_EXTRACTOR_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "BDDDB", "B###B", "B###B", "BDDDB", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#GGG#", "#HHH#", "DIIID", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#GGG#", "#HHH#", "DIIID", "AAAAA")
                    .aisle("AAAAA", "CEEEC", "DFFFD", "#GGG#", "#HHH#", "DIIID", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "BDDDB", "B###B", "B###B", "BDDDB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(GLASS))
                    .where("D", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("E", Predicates.blocks(AllBlocks.BLAZE_BURNER.get()))
                    .where("F", Predicates.blocks(CMBlocks.FOUNDRY_BASIN_BLOCK.get()))
                    .where("G", Predicates.blocks(AllBlocks.COPPER_CASING.get()))
                    .where("H", Predicates.blocks(CMBlocks.GLASSED_FOUNDRY_LID_BLOCK.get()))
                    .where("I", Predicates.blocks(CMBlocks.FOUNDRY_MIXER_BLOCK.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_LATHE = REGISTRATE.multiblock("mechanical_lathe", KineticWorkableMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_LATHE_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW),
                    Component.translatable("ctnh.mechanical_lathe.structure"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAA", "AAAAAAAB", "AAACCCCB", "BBBBBBBB", "B######B", "BDDDDDDB", "AAAAAAAA")
                    .aisle("AAAAAAAA", "A#AEFFEA", "ADAGGGGC", "B######B", "########", "D######D", "AAAAAAAA")
                    .aisle("AAAAAAAA", "A#AEFFEA", "ADAGGGGC", "B######B", "########", "D######D", "AAAAAAAA")
                    .aisle("AAAAAAAA", "A#AEFFEA", "ADAGGGGC", "B######B", "########", "D######D", "AAAAAAAA")
                    .aisle("AAAAAAAA", "A@AGGGGB", "AAAGGGGB", "BBBBBBBB", "B######B", "BDDDDDDB", "AAAAAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(AllBlocks.ITEM_VAULT.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("E", Predicates.blocks(VintageBlocks.LATHE_MOVING.get()))
                    .where("F", Predicates.blocks(VintageBlocks.LATHE_ROTATING.get()))
                    .where("G", Predicates.blocks(CASING_TEMPERED_GLASS.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition MECHANICAL_LASER = REGISTRATE.multiblock("mechanical_laser", KineticElectricMutiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CreateRecipeTypes.MECHANICAL_LASER_RECIPES)
            .appearanceBlock(() -> AllBlocks.RAILWAY_CASING.get())
            .recipeModifier(CTPPRecipeModifiers.KINETIC_OVERCLOCK)
            .tooltips(Component.translatable("kinetic_overclock"),
                    Component.translatable("actual_speed").withStyle(ChatFormatting.YELLOW))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "BCCCB", "B###B", "B###B", "B###B", "BCCCB", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "#EEE#", "#EEE#", "CFFFC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "#EEE#", "#EEE#", "CFFFC", "AAAAA")
                    .aisle("AAAAA", "CDDDC", "#EEE#", "#EEE#", "#EEE#", "CFFFC", "AAAAA")
                    .aisle("AA@AA", "BCCCB", "B###B", "B###B", "B###B", "BCCCB", "AAAAA")
                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
                    .where("B", Predicates.blocks(AllBlocks.METAL_GIRDER.get()))
                    .where("C", Predicates.blocks(AllBlocks.BRASS_CASING.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(AllBlocks.DEPOT.get()))
                    .where("E", Predicates.blocks(CASING_TEMPERED_GLASS.get()))
                    .where("F", Predicates.blocks(VintageBlocks.LASER.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();
    public final static MultiblockMachineDefinition ETERNAL_GARDEN = REGISTRATE.multiblock("eternal_garden", EternalGarden::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ETERNAL_GARDEN)
            .recipeModifiers(EternalGarden::recipeModifier)
            .tooltips(Component.translatable("ctnh.eternalgarden.1"),
                    Component.translatable("ctnh.eternalgarden.2"),
                    Component.translatable("ctnh.eternalgarden.3"),
                    Component.translatable("ctnh.eternalgarden.unknown")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A###################BBBBBBB###################A", "####################BBBBBBB####################", "####################BBBBBBB####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "A#############################################A")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("####BBBBBBBBQRRHHHRRRVVLVVRRRHHHRRQBBBBBBBB####", "####BBBBBBBB#SS###UUU#W#W#UUU###SS#BBBBBBBB####", "####BBBIBBBB#######################BBBBIBBB####", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "########N######X###############X######N########", "######GK###############################KG######", "#######H###############################H#######", "######FK###############################KF######", "########N#############################N########", "######################HHH######################", "######################HJH######################", "######################HHH######################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "######################KLK######################", "###############################################", "###############################################", "###############################################")
                    .aisle("####BBBBBBBQIHHHRRVVVBBLBBVVVRRHHHIQBBBBBBB####", "####BBBBBBB#Y###UU###ZZMZZ###UU###Y#BBBBBBB####", "####BBBIBBB#########################BBBIBBB####", "###############################################", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "########N#####XaX#############Xa
                    .aisle("###BBBBBBBQRHIHRVVBBBHHLHHBBBVVRHIHRQBBBBBBB###", "###BBBBBBB#b#c#U##ZZZdd#ddZZZ##U#c#e#BBBBBBB###", "###BBBIBBB###########################BBBIBBB###", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "##############XXX#############XXX##############", "#######N#####XXaXX###########XXaXX#####N#######", "#####FK#######XaX#############Xa
                    .aisle("###BBBBBBBQRHHIVBBHHHHHLHHHHHBBVIHHRQBBBBBBB###", "###BBBBBBB#b##f#ZZddddd#dddddZZ#f##e#BBBBBBB###", "###BBBIBBB###########################BBBIBBB###", "###############################################", "###############################################", "###############X###############X###############", "##############XX##############XXX##############", "#############XXXXX###########XXXXX#############", "#######N####XXXaXXX#########XXXaXXX####N#######", "#####EK######XXaXX###########XXaXX######KE#####", "#####GH#######XaX#############Xa
                    .aisle("##BBBBBBBQRHHRVgLLLLLLLLLLLLLLLgVRHHRQBBBBBBB##", "##BBBBBBB#b##h#aiiiiiiiOiiiiiiia#j##e#BBBBBBB##", "##BBBIBBB######aM######k######Ma######BBBIBBB##", "###############a###############a###############", "###############a###############a###############", "##############XaX#############XaX##############", "#############XXaX############XXaXX#############", "############XXXaXXX#########XXXaXXX############", "######N####XaaaaaaaX#######XaaaaaaaX####N######", "####GK######XaaaaaX#########XaaaaaX######KG####", "#####H#######XaaaX###########XaaaX#######H#####", "####FK########XaX#############Xa
                    .aisle("##BBBBBBBQRHRVBLMMMMMMMLMMMMMMMLBVRHRQBBBBBBB##", "##BBBBBBB#b#h#Zi###############iZ#j#e#BBBBBBB##", "##BBBIBBB######M###############M######BBBIBBB##", "###############################################", "###############################################", "###############X###############X###############", "##############XXX#############XXX##############", "#############XXXXX###########XXXXX#############", "######N#####XXXaXXX#########XXXaXXX#####N######", "####EK#######XXaXX###########XXaXX#######KE####", "####GH########XaX#############Xa
                    .aisle("#BBBBBBBQRHHRVBLMllllMMLMMllllMLBVRHHRQBBBBBBB#", "#BBBBBBB#b##h#Zi###############iZ#j##e#BBBBBBB#", "#BBBIBBB###############################BBBIBBB#", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "##############XXX#############XXX##############", "#####N#######XXaXX###########XXaXX#######N#####", "###FK#########XaX#############Xa
                    .aisle("#BBBBBBBQRHRVBZLMlllMMLPLMMlllMLHBVRHRQBBBBBBB#", "#BBBBBBB#b#h#Zmi######X#X######inZ#j#e#BBBBBBB#", "#BBBIBBB###############################BBBIBBB#", "###############################################", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "#####N########XaX#############XaX########N#####", "###EK##########X######G#G######X##########KE###", "###GH###############GGGGG#################HG###", "###EK###############GGGGGG################KE###", "#####N#############GGGGGGGG##############N#####", "###################GGGGGGG#####################", "###################GG#GGGG#####################", "#####################GGGGG#####################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "###############################################", "#######################N#######################", "######################KLK######################")
                    .aisle("#BBBBBBBQRHRVBHLMllMMLMMMLMMllMLHBVRHRQBBBBBBB#", "#BBBBBBB#b#h#Zmi#####X###X#####inZ#j#e
                    .aisle("BBBBBBBQRHHRVBHLMlMMLIIIIILMMlMLHBVRHHRQBBBBBBB", "BBBBBBB#b##h#Zmi####X#####X####inZ#j##e#BBBBBBB", "BBBIBBB#############o#####o
                    .aisle("BBBBBBBQRHRVBHHLMMMLIVVVVVILMMMLHHBVRHRQBBBBBBB", "BBBBBBB#b#h#Zmmi###X#######X###innZ#j#e
                    .aisle("BBBBBBBQRHRVBHHLMMLMIVVVVVIMLMMLHHBVRHRQBBBBBBB", "BBBBBBB#b#hWZmmi##X###VVV###X##innZWj#e#BBBBBBB", "BBBBBBB###############VVV###############BBBBBBB", "##CCC#################VVV#################CCC##", "######################VVV######################", "######################VVV######################", "######################VVV######################", "######################VVV######################", "##DDN################GVVVG################NDD##", "##EK###############GGGVVVGGG###############KE##", "##GH#############GGGGGVVV#GG###############HG##", "##EK############GGGGGGVVVGGGGG#############KE##", "##DKN############GG##GVVVGGGGGG###########NKD##", "####OHHHHHHHHHHOGGGGGGGGGGGGGGGOHHHHHHHHHHO####", "####OHHHHHHHHHHOGGGGGGGGGGGGG#GOHHHHHHHHHHO####", "####OHHHHHHHHHHOGGGGGGGGGGGG#GGOHHHHHHHHHHO####", "#####K############GGGGGGGGGGG############K#####", "#####K############GGGGGGGGG##############K#####", "######K##############GGGG###############K######", "######K###############OOO###############K######", "#######K##############HHH##############K#######", "#######K##############HHH##############K#######", "########K#############HHH#############K########", "#########K############HHH############K#########", "##########KK##########HHH##########KK##########", "############KK########HHH########KK############", "##############KK######MMM######KK##############", "################KKKKKKKLKKKKKKK################")
                    .aisle("BBBBBBBLLLLLLLLLLLPMIVVVVVIMPLLLLLLLLLLLBBBBBBB", "BBBBBBBL####M##O######VVV######O#######LBBBBBBB", "BBBBBBBL#######k######VVV######k#######LBBBBBBB", "##CJMNNN##############VVV##############NNNMJC##", "###J##################VVV##################J###", "###J##################VVV##################J###", "###J##################VVV##################J###", "###J##################VVV##################J###", "##DJN################GVVVG################NJD##", "##GJ################G#VVVGGG###############JG##", "##HJ#############GGGGGVVVGGGG##############JH##", "##FJ#############GGGGGVVVGGGGG#############JF##", "##DLN###########GGG#GGVVV#GGGGG###########NLD##", "####LHHHHHHHHHHOGGGGGGGGGGGGGGGOHHHHHHHHHHL####", "####PJJJJJJJJJJJGGGGGGGGGGGGGGGJJJJJJJJJJJP####", "####LHHHHHHHHHHOGGGGGGGGGGGGGGGOHHHHHHHHHHL####", "#####L###########GGGGGGGGGGG#############L#####", "#####L##############GGGGGGGG#############L#####", "######L##############GGGGG##############L######", "######L###############OJO###############L######", "#######L##############HJH##############L#######", "#######L##############HJH##############L#######", "########L#############HJH#############L########", "#########L############HJH############L#########", "##########LL##########HJH##########LL##########", "############LL########HJH########LL############", "##############LLNNNNNNMJMNNNNNNLL##############", "################LLLLLLLPLLLLLLL################")
                    .aisle("BBBBBBBQRHRVBHHLMMLMIVVVVVIMLMMLHHBVRHRQBBBBBBB", "BBBBBBB###hWZmmi##X###VVV###X##innZWj#e#BBBBBBB", "BBBBBBB###############VVV###############BBBBBBB", "##CCC#################VVV#################CCC##", "######################VVV######################", "######################VVV######################", "######################VVV######################", "######################VVV######################", "##DDN##############GGGVVVG################NDD##", "##EK###############GGGVVVGGG###############KE##", "##GH############GGGGGGVVVGGGG##############HG##", "##EK#############GGGGGVVVGGGGG#############KE##", "##DKN############GGGGGVVV#GGGGG###########NKD##", "####OHHHHHHHHHHOGGGGGGGGGGGGGGGOHHHHHHHHHHO####", "####OHHHHHHHHHHOGGGGGGGGG#GGGGGOHHHHHHHHHHO####", "####OHHHHHHHHHHOGGGGGGGGGGGG#GGOHHHHHHHHHHO####", "#####K############GGGGGGGGGGGG###########K#####", "#####K############GGGGGGGGGG#############K#####", "######K#############GGGGGG##############K######", "######K###############OOO###############K######", "#######K###############HH##############K#######", "#######K###############HH##############K#######", "########K##############HH#############K########", "#########K#############HH############K#########", "##########KK###########HH##########KK##########", "############KK#########HH########KK############", "##############KK######MMM######KK##############", "################KKKKKKKLKKKKKKK################")
                    .aisle("BBBBBBBQRHRVBHHLMMMLIVVVVVILMMMLHHBVRHRQBBBBBBB", "BBBBBBB#b#h#Zmmi###X#######X###innZ#j#e
                    .aisle("BBBBBBBQRHHRVBHLMlMMLIIIIILMMlMLHBVRHHRQBBBBBBB", "BBBBBBB#b##h#Zmi####X#####X####inZ#j##e#BBBBBBB", "BBBIBBB#############o#####o
                    .aisle("#BBBBBBBQRHRVBHLMllMMLMMMLMMllMLHBVRHRQBBBBBBB#", "#BBBBBBB#b#h#Zmi#####X###X#####inZ#j#e
                    .aisle("#BBBBBBBQRHRVBHLMlllMMLPLMMlllMLHBVRHRQBBBBBBB#", "#BBBBBBB#b#h#Zmi######X#X######inZ#j#e#BBBBBBB#", "#BBBIBBB###############################BBBIBBB#", "###############################################", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "#####N########XaX#############Xa
                    .aisle("#BBBBBBBQRHHRVBLMllllMMLMMllllMLBVRHHRQBBBBBBB#", "#BBBBBBB#b##h#Zi###############iZ#j##e#BBBBBBB#", "#BBBIBBB###############################BBBIBBB#", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "##############XX##############XXX##############", "#####N#######XXaX############XXaXX#######N#####", "###FK#########XaX#############Xa
                    .aisle("##BBBBBBBQRHRVBLMMMMMMMLMMMMMMMLBVRHRQBBBBBBB##", "##BBBBBBB#b#h#Zi###############iZ#j#e#BBBBBBB##", "##BBBIBBB######M###############M######BBBIBBB##", "###############################################", "###############################################", "###############X###############X###############", "##############XX##############XXX##############", "#############XXX#############XXXXX#############", "######N#####XXXaX###########XXXaXXX#####N######", "####EK#######XXaX############XXaXX#######KE####", "####GH########XaX#############Xa
                    .aisle("##BBBBBBBQRHHRVgLLLLLLLLLLLLLLLgVRHHRQBBBBBBB##", "##BBBBBBB#b##h#aiiiiiiiOiiiiiiia#j##e#BBBBBBB##", "##BBBIBBB######aM######k######Ma######BBBIBBB##", "###############a###############a###############", "###############a###############a###############", "##############XaX#############XaX##############", "#############XXaXX###########XXaXX#############", "############XXXaXXX#########XXXaXXX############", "######N####XaaaaaaaX#######XaaaaaaaX####N######", "####GK######XaaaaaX#########XaaaaaX######KG####", "#####H#######XaaaX###########XaaaX#######H#####", "####FK########XaX#############Xa
                    .aisle("###BBBBBBBQRHHIVBBHHHHHLHHHHHBBVIHHRQBBBBBBB###", "###BBBBBBB#b##f#ZZppppp#pppppZZ#f##e#BBBBBBB###", "###BBBIBBB###########################BBBIBBB###", "###############################################", "###############################################", "###############X###############X###############", "##############XXX#############XXX##############", "#############XXXXX###########XXXXX#############", "#######N####XXXaXXX#########XXXaXXX####N#######", "#####EK######XXaXX###########XXaXX######KE#####", "#####GH#######XaX#############Xa
                    .aisle("###BBBBBBBQRHIHRVVBBBHHLHHBBBVVRHIHRQBBBBBBB###", "###BBBBBBB#b#c#q##ZZZpp#ppZZZ##q#c#e#BBBBBBB###", "###BBBIBBB###########################BBBIBBB###", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "##############XXX#############XXX##############", "#######N#####XXaXX###########XXaXX#####N#######", "#####FK#######XaX#############Xa
                    .aisle("####BBBBBBBQIHHHRRVVVBBLBBVVVRRHHHIQBBBBBBB####", "####BBBBBBB#Y###qq###ZZ#ZZ###qq###Y#BBBBBBB####", "####BBBIBBB#########################BBBIBBB####", "###############################################", "###############################################", "###############################################", "###############################################", "###############X###############X###############", "########N#####XaX#############Xa
                    .aisle("####BBBBBBBBQRRHHHRRRVVLVVRRRHHHRRQBBBBBBBB####", "####BBBBBBBB#rr###qqq#W#W#qqq###rr
                    .aisle("#####BBBBBBBBQQRRHHHHRRLRRHHHHRRQQBBBBBBBB#####", "#####BBBBBBBB##rr####qq#qq####rr
                    .aisle("#####BBBBBBBBBBQQRRRHHHLHHHRRRQQBBBBBBBBBB#####", "#####BBBBBBBBBB##rrr#######rrr
                    .aisle("######BBBBBBBBBBBQQQRRRLRRRQQQBBBBBBBBBBB######", "######BBBBBBBBBBB###rrr#rrr
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .where("A", Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_STAINLESS_CLEAN.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                    )

                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("C", Predicates.blocks(SMOOTH_QUARTZ))
                    .where("D", Predicates.blocks(SMOOTH_QUARTZ_SLAB))
                    .where("E", Predicates.blocks(FLOURISHING_LEAVES.get()))
                    .where("F", Predicates.blocks(BLAZING_LEAVES.get()))
                    .where("G", Predicates.blocks(CASCADING_LEAVE.get()))
                    .where("H", Predicates.blocks(BotaniaBlocks.elfGlass))
                    .where("I", Predicates.blocks(GLOWSTONE))
                    .where("J", Predicates.blocks(BotaniaBlocks.elfQuartzPillar))
                    .where("K", Predicates.blocks(SMOOTH_QUARTZ))
                    .where("L", Predicates.blocks(BotaniaBlocks.elfQuartz))
                    .where("M", Predicates.blocks(BotaniaBlocks.elfQuartzStairs))
                    .where("N", Predicates.blocks(BotaniaBlocks.elfQuartzSlab))
                    .where("O", Predicates.blocks(BotaniaBlocks.elfQuartzChiseled))
                    .where("P", Predicates.blocks(BotaniaBlocks.alfPortal))
                    .where("Q", Predicates.blocks(FLOURISHING_LOG.get()))
                    .where("R", Predicates.blocks(GRASS_BLOCK))
                    .where("S", Predicates.blocks(BotaniaFlowerBlocks.bellethorn))
                    .where("T", Predicates.blocks(QUARTZ_PILLAR))
                    .where("U", Predicates.blocks(BotaniaFlowerBlocks.dreadthorn))
                    .where("V", Predicates.blocks(CASCADING_LOG.get()))
                    .where("W", Predicates.blocks(BotaniaBlocks.naturaPylon))
                    .where("X", Predicates.blocks(VEXING_LEAVES.get()))
                    .where("Y", Predicates.blocks(BotaniaFlowerBlocks.jiyuuliaFloating))
                    .where("Z", Predicates.blocks(VEXING_WOOD.get()))
                    .where("a", Predicates.blocks(VEXING_LOG.get()))
                    .where("b", Predicates.blocks(BotaniaFlowerBlocks.vinculotus))
                    .where("c", Predicates.blocks(BotaniaFlowerBlocks.labelliaFloating))
                    .where("d", Predicates.blocks(BotaniaFlowerBlocks.dreadthornFloating))
                    .where("e", Predicates.blocks(BotaniaFlowerBlocks.shulkMeNot))
                    .where("f", Predicates.blocks(BotaniaFlowerBlocks.heiseiDreamFloating))
                    .where("g", Predicates.blocks(DIRT))
                    .where("h", Predicates.blocks(BotaniaBlocks.whiteFlower))
                    .where("i", Predicates.blocks(CASING_STAINLESS_EVAPORATION.get()))
                    .where("j", Predicates.blocks(BotaniaBlocks.blackFlower))
                    .where("k", Predicates.blocks(BotaniaBlocks.gaiaPylon))
                    .where("l", Predicates.blocks(WATER))
                    .where("m", Predicates.blocks(BotaniaBlocks.whiteFloatingFlower))
                    .where("n", Predicates.blocks(BotaniaBlocks.blackFloatingFlower))
                    .where("o", Predicates.blocks(BotaniaBlocks.manaPylon))
                    .where("p", Predicates.blocks(BotaniaFlowerBlocks.fallenKanadeFloating))
                    .where("q", Predicates.blocks(BotaniaFlowerBlocks.fallenKanade))
                    .where("r", Predicates.blocks(BotaniaFlowerBlocks.rosaArcana))
                    .build()
            )
            .renderer(EternalGardenRender::new)
            .hasTESR(true)
            .register();
    public final static MultiblockMachineDefinition PLASMA_ALLOY_BLAST_SMELTER = REGISTRATE.multiblock("plasma_alloy_blast_smelter", Plasma_alloy_blast::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(GCYMRecipeTypes.ALLOY_BLAST_RECIPES)
            .recipeModifiers(Plasma_alloy_blast::recipeModifier, GTRecipeModifiers::ebfOverclock)
            .tooltips(Component.translatable("ctnh.plasma_alloy.1"),
                    Component.translatable("ctnh.plasma_alloy.11"),
                    Component.translatable("ctnh.pab"),
                    Component.translatable("ctnh.plasma_alloy.2"),
                    Component.translatable("ctnh.plasma_alloy.3"),
                    Component.translatable("ctnh.plasma_alloy.4"),
                    Component.translatable("ctnh.plasma_alloy.5"),
                    Component.translatable("ctnh.plasma_alloy.6"),
                    Component.translatable("ctnh.plasma_alloy.7"),
                    Component.translatable("ctnh.plasma_alloy.8"),
                    Component.translatable("ctnh.plasma_alloy.9"),
                    Component.translatable("ctnh.plasma_alloy.10")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A####BBBBBBB####A", "#####BBBBBBB#####", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("###BBBBBBBBBBB###", "###BBBBBBBBBBB###", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("##BBBBBBBBBBBBB##", "##BBBBBBBBBBBBB##", "####CCCCCCCCC####", "####CCCCCCCCC####", "#################", "#################", "#################", "#################", "#################", "####CCCCCCCCC####", "####CCCCCCCCC####", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("#BBBBBBBBBBBBBBB#", "#BBBBBBBBBBBBBBB#", "###CCDDDDDDDCC###", "###CCDDDDDDDCC###", "####C#######C####", "####C#######C####", "####C#######C####", "####C#######C####", "####C#######C####", "###CCDDDDDDDCC###", "###CCDDDDDDDCC###", "#################", "#################", "#################", "#################", "#################", "#####EEEEEEE#####")
                    .aisle("#BBBBBBBBBBBBBBB#", "#BBBBBBBBBBBBBBB#", "##CCDFFFFFFFDCC##", "##CCDGGGGGGGDCC##", "###C#########C###", "###C#########C###", "###C#########C###", "###C#########C###", "###C#########C###", "##CCDGGGGGGGDCC##", "##CCDHHHHHHHDCC##", "#################", "#################", "#################", "#################", "#################", "####EEEEEEEEE####")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFFFFFFFFDC##", "##CDGGGGGGGGGDC##", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "##CDGIGGIGGIGDC##", "##CDHIHHIHHIHDC##", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "###EEJEEJEEJEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFKKKKKFFDC##", "##CDGGLLLLLGGDC##", "######MNNNM######", "######MNNNM######", "######MNNNM######", "######MNNNM######", "######MNNNM######", "##CDGGLLLLLGGDC##", "##CDHHOOOOOHHDC##", "######PPPPP######", "######QQQQQ######", "######QQQQQ######", "######QQQQQ######", "######PPPPP######", "###EEEJEJEJEEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFK###KFFDC##", "##CDGGL###LGGDC##", "######N###N######", "######N###N######", "######N###N######", "######N###N######", "######N###N######", "##CDGGL###LGGDC##", "##CDHHO###OHHDC##", "######P###P######", "######Q###Q######", "######Q###Q######", "######Q###Q######", "######P###P######", "###EEEEJJJEEEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFK###KFFDC##", "##CDGGL###LGGDC##", "#####IN###NI#####", "#####IN###NI#####", "#####IN###NI#####", "#####IN###NI#####", "#####IN###NI#####", "##CDGIL###LIGDC##", "##CDHIO###OIHDC##", "#####IP###PI#####", "#####IQ###QI#####", "#####IQ###QI#####", "#####IQ###QI#####", "#####IP###PI#####", "###EEJJJEJJJEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFK###KFFDC##", "##CDGGL###LGGDC##", "######N###N######", "######N###N######", "######N###N######", "######N###N######", "######N###N######", "##CDGGL###LGGDC##", "##CDHHO###OHHDC##", "######P###P######", "######Q###Q######", "######Q###Q######", "######Q###Q######", "######P###P######", "###EEEEJJJEEEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFKKKKKFFDC##", "##CDGGLLLLLGGDC##", "######MNNNM######", "######MNNNM######", "######MNNNM######", "######MNNNM######", "######MNNNM######", "##CDGGLLLLLGGDC##", "##CDHHOOOOOHHDC##", "######PPPPP######", "######QQQQQ######", "######QQQQQ######", "######QQQQQ######", "######PPPPP######", "###EEEJEJEJEEE###")
                    .aisle("BBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBB", "##CDFFFFFFFFFDC##", "##CDGGGGGGGGGDC##", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "##CDGIGGIGGIGDC##", "##CDHIHHIHHIHDC##", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "#####I##I##I#####", "###EEJEEJEEJEE###")
                    .aisle("#BBBBBBBBBBBBBBB#", "#BBBBBBBBBBBBBBB#", "##CCDFFFFFFFDCC##", "##CCDGGGGGGGDCC##", "###C#########C###", "###C#########C###", "###C#########C###", "###C#########C###", "###C#########C###", "##CCDGGGGGGGDCC##", "##CCDHHHHHHHDCC##", "#################", "#################", "#################", "#################", "#################", "####EEEEEEEEE####")
                    .aisle("#BBBBBBBBBBBBBBB#", "#BBBBBBBBBBBBBBB#", "###CCDDDDDDDCC###", "###CCDDDDDDDCC###", "####C#######C####", "####C#######C####", "####C#######C####", "####C#######C####", "####C#######C####", "###CCDDDDDDDCC###", "###CCDDDDDDDCC###", "#################", "#################", "#################", "#################", "#################", "#####EEEEEEE#####")
                    .aisle("##BBBBBBBBBBBBB##", "##BBBBBBBBBBBBB##", "####CCCCCCCCC####", "####CCCCCCCCC####", "#################", "#################", "#################", "#################", "#################", "####CCCCCCCCC####", "####CCCCCCCCC####", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("###BBBBBBBBBBB###", "###BBBBBBBBBBB###", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################")
                    .aisle("A####BBBBBBB####A", "#####BBB@BBB#####", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "#################", "################A")
                    .where("A", Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_HIGH_TEMPERATURE_SMELTING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH))
                            .or(Predicates.abilities(PartAbility.INPUT_LASER)))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("C", Predicates.frames(Naquadria))
                    .where("D", Predicates.blocks(CASING_TUNGSTENCU_DIAMOND_PLATING.get()))
                    .where("E", Predicates.blocks(CASING_NAQUADAH_ALLOY_BLOCK.get()))
                    .where("F", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("G", Predicates.blocks(PLASMA_COOLED_CORE.get()))
                    .where("H", Predicates.blocks(HEAT_VENT.get()))
                    .where("I", Predicates.blocks(HERMETIC_CASING_ZPM.get()))
                    .where("J", Predicates.blocks(CASING_NEUTRONIUM_ALLOY_BLOCK.get()))
                    .where("K", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, NaquadahEnriched).get()))
                    .where("L", Predicates.blocks(FUSION_COIL.get()))
                    .where("M", Predicates.blocks(CASING_ULTIMATE_ENGINE_INTAKE.get()))
                    .where("N", Predicates.heatingCoils())
                    .where("O", Predicates.blocks(CASING_NAQUADAH_GEARBOX.get()))
                    .where("P", Predicates.blocks(CASING_ANTIFREEZE_HEATPROOF_MACHINE.get()))
                    .where("Q", Predicates.blocks(WIDESPEEDINGPIPE.get()))
                    .where("Q", Predicates.blocks(WIDESPEEDINGPIPE.get()))

                    .build())
            .workableCasingModel(GTCEu.id("block/casings/gcym/high_temperature_smelting_casing"), CTNHCore.id("block/overlay/super_ebf/"))
            .register();
    public final static MultiblockMachineDefinition UNIVERSE_SINOPE = REGISTRATE.multiblock("universe_sinope", holder -> new Arc_Reactor(holder, 10))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.ARC_REACTOR)
            .recipeModifiers(Plasma_alloy_blast::recipeModifier, GTRecipeModifiers::ebfOverclock)
            .tooltips(Component.translatable("ctnh.u_sinope.story.1"),
                    Component.translatable("ctnh.u_sinope.story.2"),
                    Component.translatable("ctnh.u_sinope.story.3"),
                    Component.translatable("ctnh.u_sinope.1"),
                    Component.translatable("ctnh.u_sinope.2"),
                    Component.translatable("ctnh.u_sinope.3"),
                    Component.translatable("ctnh.u_sinope.4"),
                    Component.translatable("ctnh.u_sinope.5"),
                    Component.translatable("ctnh.u_sinope.6"),
                    Component.translatable("ctnh.u_sinope.7"),
                    Component.translatable("ctnh.u_sinope.8")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A                   BB@BB                     ", "CCC               BB     BB               CCC ", "CDC           BBBB         BBBB           CDC ", "CCC           BDB           BDB           CCC ", "              BBB           BBB               ", "             B                 B              ", "          BBB                   BBB           ", "          BDB    EEEEEEEEEEE    BDB           ", "          BBB   EEEEEEEEEEEEE   BBB           ", "         B     EEEEEEEEEEEEEEE     B          ", "        B     EEEEEEEEEEEEEEEEE     B         ", "     BBB     EEEEEEEEEEEEEEEEEEE     BBB      ", "     BDB    EEEEEEEEEEEEEEEEEEEEE    BDB      ", "     BBB   EEEEEEEEEEEEEEEEEEEEEEE   BBB      ", "    B     EEEEEEEEEEEEEEEEEEEEEEEEE     B     ", " BBB     EEEEEEEEEEEEEEEEEEEEEEEEEEE     BBB  ", " BDB    EEEEEEEEEEEEEEEEEEEEEEEEEEEEE    BDB  ", " BBB   EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE   BBB  ", " B    EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE    B  ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      F", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", " B    EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE    B  ", " BBB   EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE   BBB  ", " BDB    EEEEEEEEEEEEEEEEEEEEEEEEEEEEE    BDB  ", " BBB     EEEEEEEEEEEEEEEEEEEEEEEEEEE     BBB  ", "    B     EEEEEEEEEEEEEEEEEEEEEEEEE     B     ", "     BBB   EEEEEEEEEEEEEEEEEEEEEEE   BBB      ", "     BDB    EEEEEEEEEEEEEEEEEEEEE    BDB      ", "     BBB     EEEEEEEEEEEEEEEEEEE     BBB      ", "        B     EEEEEEEEEEEEEEEEE     B         ", "         B     EEEEEEEEEEEEEEE     B          ", "          BBB   EEEEEEEEEEEEE   BBB           ", "          BDB    EEEEEEEEEEE    BDB           ", "          BBB                   BBB           ", "             B                 B              ", "              BBB           BBB               ", "CCC           BDB           BDB           CCC ", "CDC           BBBB         BBBB           CDC ", "CCC               BB     BB               CCC ", "                    BBFBB                     ")
                    .aisle("                    FFFFF                     ", "BBB               FF     FF               BBB ", "BDB           BBBF         FBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             F                 F              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB    GGGGGGGGGGG    BBB           ", "         F      GGGGGGGGGGGGG      F          ", "        F      GGGGGGGGGGGGGGG      F         ", "     BBB      GGGGGGGGGGGGGGGGG      BBB      ", "     BDB     GGGGGGGGGGGGGGGGGGG     BDB      ", "     BBB    GGGGGGGGGGGGGGGGGGGGG    BBB      ", "    F      GGGGGGGGGGGGGGGGGGGGGGG      F     ", " BBB      GGGGGGGGGGGGGGGGGGGGGGGGG      BBB  ", " BDB     GGGGGGGGGGGGGGGGGGGGGGGGGGG     BDB  ", " BBB    GGGGGGGGGGGGGGGGGGGGGGGGGGGGG    BBB  ", " F     GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG     F  ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", " F     GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG     F  ", " BBB    GGGGGGGGGGGGGGGGGGGGGGGGGGGGG    BBB  ", " BDB     GGGGGGGGGGGGGGGGGGGGGGGGGGG     BDB  ", " BBB      GGGGGGGGGGGGGGGGGGGGGGGGG      BBB  ", "    F      GGGGGGGGGGGGGGGGGGGGGGG      F     ", "     BBB    GGGGGGGGGGGGGGGGGGGGG    BBB      ", "     BDB     GGGGGGGGGGGGGGGGGGG     BDB      ", "     BBB      GGGGGGGGGGGGGGGGG      BBB      ", "        F      GGGGGGGGGGGGGGG      F         ", "         F      GGGGGGGGGGGGG      F          ", "          BBB    GGGGGGGGGGG    BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             F                 F              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBF         FBBB           BDB ", "BBB               FF     FF               BBB ", "                    FFFFF                     ")
                    .aisle("                    BBFBB                     ", "BBB               BB     BB               BBB ", "BDB           BBBB         BBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             B                 B              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         B       HHHHHHHHHHH       B          ", "        B       HHHHHHHHHHHHH       B         ", "     BBB       HHHHHHHHHHHHHHH       BBB      ", "     BDB      HHHHHHHHHHHHHHHHH      BDB      ", "     BBB     HHHHHHHHHHHHHHHHHHH     BBB      ", "    B       HHHHHHHHHHHHHHHHHHHHH       B     ", " BBB       HHHHHHHHHHHHHHHHHHHHHHH       BBB  ", " BDB      HHHHHHHHHHHHHHHHHHHHHHHHH      BDB  ", " BBB     HHHHHHHHHHHHHHHHHHHHHHHHHHH     BBB  ", " B      HHHHHHHHHHHHHHHHHHHHHHHHHHHHH      B  ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        F", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", " B      HHHHHHHHHHHHHHHHHHHHHHHHHHHHH      B  ", " BBB     HHHHHHHHHHHHHHHHHHHHHHHHHHH     BBB  ", " BDB      HHHHHHHHHHHHHHHHHHHHHHHHH      BDB  ", " BBB       HHHHHHHHHHHHHHHHHHHHHHH       BBB  ", "    B       HHHHHHHHHHHHHHHHHHHHH       B     ", "     BBB     HHHHHHHHHHHHHHHHHHH     BBB      ", "     BDB      HHHHHHHHHHHHHHHHH      BDB      ", "     BBB       HHHHHHHHHHHHHHH       BBB      ", "        B       HHHHHHHHHHHHH       B         ", "         B       HHHHHHHHHHH       B          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             B                 B              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBB         BBBB           BDB ", "BBB               BB     BB               BBB ", "                    BBFBB                     ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                 IIIIIIIIIII                  ", "     BBB        IIIIIIIIIIIII        BBB      ", "     BDB       IIIIIIIIIIIIIII       BDB      ", "     BBB      IIIIIIIIIIIIIIIII      BBB      ", "             IIIIIIIIIIIIIIIIIII              ", " BBB        IIIIIIIIIIIIIIIIIIIII        BBB  ", " BDB       IIIIIIIIIIIIIIIIIIIIIII       BDB  ", " BBB      IIIIIIIIIIIIIIIIIIIIIIIII      BBB  ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", " BBB      IIIIIIIIIIIIIIIIIIIIIIIII      BBB  ", " BDB       IIIIIIIIIIIIIIIIIIIIIII       BDB  ", " BBB        IIIIIIIIIIIIIIIIIIIII        BBB  ", "             IIIIIIIIIIIIIIIIIII              ", "     BBB      IIIIIIIIIIIIIIIII      BBB      ", "     BDB       IIIIIIIIIIIIIII       BDB      ", "     BBB        IIIIIIIIIIIII        BBB      ", "                 IIIIIIIIIII                  ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB         AAAAAAAAAAA         BBB      ", "     BDB        AAAAAAAAAAAAA        BDB      ", "     BBB       AAAAAAAAAAAAAAA       BBB      ", "              AAAAAAAAAAAAAAAAA               ", " BBB         AAAAAAAAAAAAAAAAAAA         BBB  ", " BDB        AAAAAAAAAAAAAAAAAAAAA        BDB  ", " BBB       AAAAAAAAAAAAAAAAAAAAAAA       BBB  ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", " BBB       AAAAAAAAAAAAAAAAAAAAAAA       BBB  ", " BDB        AAAAAAAAAAAAAAAAAAAAA        BDB  ", " BBB         AAAAAAAAAAAAAAAAAAA         BBB  ", "              AAAAAAAAAAAAAAAAA               ", "     BBB       AAAAAAAAAAAAAAA       BBB      ", "     BDB        AAAAAAAAAAAAA        BDB      ", "     BBB         AAAAAAAAAAA         BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB         JJJJJJJJJJJ         BDB      ", "     BBB        JJJJJJJJJJJJJ        BBB      ", "               JJJJJJJJJJJJJJJ                ", " BBB          JJJJJJJJJJJJJJJJJ          BBB  ", " BDB         JJJJJJJJJJJJJJJJJJJ         BDB  ", " BBB        JJJJJJJJJJJJJJJJJJJJJ        BBB  ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", " BBB        JJJJJJJJJJJJJJJJJJJJJ        BBB  ", " BDB         JJJJJJJJJJJJJJJJJJJ         BDB  ", " BBB          JJJJJJJJJJJJJJJJJ          BBB  ", "               JJJJJJJJJJJJJJJ                ", "     BBB        JJJJJJJJJJJJJ        BBB      ", "     BDB         JJJJJJJJJJJ         BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB         KKKKKKKKKKK         BBB      ", "                KKKKKKKKKKKKK                 ", " BBB           KKKKKKKKKKKKKKK           BBB  ", " BDB          KKKKKKKKKKKKKKKKK          BDB  ", " BBB         KKKKKKKKKKKKKKKKKKK         BBB  ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK          B  ", " BBB         KKKKKKKKKKKKKKKKKKK         BBB  ", " BDB          KKKKKKKKKKKKKKKKK          BDB  ", " BBB           KKKKKKKKKKKKKKK           BBB  ", "                KKKKKKKKKKKKK                 ", "     BBB         KKKKKKKKKKK         BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LLLLLLLLLLL                  ", " BBB            LLLLLLLLLLLLL            BBB  ", " BDB           LLLLLLLLLLLLLLL           BDB  ", " BBB          LLLLLLLLLLLLLLLLL          BBB  ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", " BBB          LLLLLLLLLLLLLLLLL          BBB  ", " BDB           LLLLLLLLLLLLLLL           BDB  ", " BBB            LLLLLLLLLLLLL            BBB  ", "                 LLLLLLLLLLL                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB     B     BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB     B     BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB     B     BBB           BDB ", "BBB           BDB    BOB    BDB           BBB ", "              BBB     B     BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB     B     BBB               ", "BBB           BDB    BOB    BDB           BBB ", "BDB           BBB     B     BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                   B                   BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB           BDB   BOAOB   BDB           BBB ", "              BBB    BOB    BBB               ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "                     CBC                      ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL           B  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                     CBC                      ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "              BBB    BOB    BBB               ", "BBB           BDB   BOAOB   BDB           BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB                   B                   BBB ", "                                              ")
                    .aisle("                      B                       ", "BBB                  BOB                  BBB ", "BDB           BBB   BOAOB   BBB           BDB ", "BBB           BDB  BOAAAOB  BDB           BBB ", "              BBB   BOAOB   BBB               ", "                     BAB                      ", "          BBB        BAB        BBB           ", "          BDB        BAB        BDB           ", "          BBB        BAB        BBB           ", "                     BAB                      ", "                     BAB                      ", "     BBB             BAB             BBB      ", "     BDB             BAB             BDB      ", "     BBB             BAB             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", "OAAAAAAAAAAAALNNNNNNNNNNNNNNNNNLAAAAAAAAAAAAOB", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             BAB             BBB      ", "     BDB             BAB             BDB      ", "     BBB             BAB             BBB      ", "                     BAB                      ", "                     BAB                      ", "          BBB        BAB        BBB           ", "          BDB        BAB        BDB           ", "          BBB        BAB        BBB           ", "                     BAB                      ", "              BBB   BOAOB   BBB               ", "BBB           BDB  BOAAAOB  BDB           BBB ", "BDB           BBB   BOAOB   BBB           BDB ", "BBB                  BOB                  BBB ", "                      B                       ")
                    .aisle("                                              ", "BBB                   B                   BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB           BDB   BOAOB   BDB           BBB ", "              BBB    BOB    BBB               ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "                     CBC                      ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                     CBC                      ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "              BBB    BOB    BBB               ", "BBB           BDB   BOAOB   BDB           BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB                   B                   BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB     B     BBB           BDB ", "BBB           BDB    BOB    BDB           BBB ", "              BBB     B     BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB     B     BBB               ", "BBB           BDB    BOB    BDB           BBB ", "BDB           BBB     B     BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                    LLLLL                     ", "BBB               LL     LL               BBB ", "BDB           BBBL         LBBB           BDB ", "BBB           BDB     B     BDB           BBB ", "              BBB           BBB               ", "             L                 L              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         L                         L          ", "        L                           L         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    L            LMMMMMMMMML            L     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " L           LNNNNNNNNNNNNNNNNNL           L  ", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "  B          MNNNNNNNNNNNNNNNNNM          B  L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", " L           LNNNNNNNNNNNNNNNNNL           L  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    L            LMMMMMMMMML            L     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        L                           L         ", "         L                         L          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             L                 L              ", "              BBB           BBB               ", "BBB           BDB     B     BDB           BBB ", "BDB           BBBL         LBBB           BDB ", "BBB               LL     LL               BBB ", "                    LLLLL                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    LLLLL                     ", "BBB               LL     LL               BBB ", "BDB           BBBL         LBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             L                 L              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         L                         L          ", "        L                           L         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    L            LMMMMMMMMML            L     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " L           LNNNNNNNNNNNNNNNNNL           L  ", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", " L           LNNNNNNNNNNNNNNNNNL           L  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    L            LMMMMMMMMML            L     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        L                           L         ", "         L                         L          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             L                 L              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBL         LBBB           BDB ", "BBB               LL     LL               BBB ", "                    LLLLL                     ")
                    .aisle("                    PPPPP                     ", "BBB               PP     PP               BBB ", "BDB           BBBP         PBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             P                 P              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         P                         P          ", "        P                           P         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    P            LMMMMMMMMML            P     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " P           LNNNNNNNNNNNNNNNNNL           P  ", "P            MNNNNNNNNNNNNNNNNNM            P ", "P            MNNNNNNNNNNNNNNNNNM            P ", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "P            MNNNNNNNNNNNNNNNNNM            P ", "P            MNNNNNNNNNNNNNNNNNM            P ", " P           LNNNNNNNNNNNNNNNNNL           P  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    P            LMMMMMMMMML            P     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        P                           P         ", "         P                         P          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             P                 P              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBP         PBBB           BDB ", "BBB               PP     PP               BBB ", "                    PPPPP                     ")
                    .aisle("                    PPPPP                     ", "BBB               PP     PP               BBB ", "BDB           BBBP         PBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             P                 P              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         P                         P          ", "        P                           P         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    P            LMMMMMMMMML            P     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " P           LNNNNNNNNNNNNNNNNNL           P  ", "P            MNNNNNNNNNNNNNNNNNM            P ", "P            MNNNNNNNNNNNNNNNNNM            P ", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "             MNNNNNNNNNNNNNNNNNM             P", "P            MNNNNNNNNNNNNNNNNNM            P ", "P            MNNNNNNNNNNNNNNNNNM            P ", " P           LNNNNNNNNNNNNNNNNNL           P  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    P            LMMMMMMMMML            P     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        P                           P         ", "         P                         P          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             P                 P              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBP         PBBB           BDB ", "BBB               PP     PP               BBB ", "                    PPPPP                     ")
                    .aisle("                    LLLLL                     ", "BBB               LL     LL               BBB ", "BDB           BBBL         LBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             L                 L              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         L                         L          ", "        L                           L         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    L            LMMMMMMMMML            L     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " L           LNNNNNNNNNNNNNNNNNL           L  ", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", " L           LNNNNNNNNNNNNNNNNNL           L  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    L            LMMMMMMMMML            L     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        L                           L         ", "         L                         L          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             L                 L              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBL         LBBB           BDB ", "BBB               LL     LL               BBB ", "                    LLLLL                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    NNNNN                     ", "BBB               NN     NN               BBB ", "BDB           BBBN         NBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             N                 N              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         N                         N          ", "        N                           N         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    N            LMMMMMMMMML            N     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " N           LNNNNNNNNNNNNNNNNNL           N  ", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "             MNNNNNNNNNNNNNNNNNM             N", "N            MNNNNNNNNNNNNNNNNNM            N ", "N            MNNNNNNNNNNNNNNNNNM            N ", " N           LNNNNNNNNNNNNNNNNNL           N  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    N            LMMMMMMMMML            N     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        N                           N         ", "         N                         N          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             N                 N              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBN         NBBB           BDB ", "BBB               NN     NN               BBB ", "                    NNNNN                     ")
                    .aisle("                    LLLLL                     ", "BBB               LL     LL               BBB ", "BDB           BBBL         LBBB           BDB ", "BBB           BDB     B     BDB           BBB ", "              BBB           BBB               ", "             L                 L              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         L                         L          ", "        L                           L         ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "    L            LMMMMMMMMML            L     ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " L           LNNNNNNNNNNNNNNNNNL           L  ", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "  B          MNNNNNNNNNNNNNNNNNM          B  L", "             MNNNNNNNNNNNNNNNNNM             L", "             MNNNNNNNNNNNNNNNNNM             L", "L            MNNNNNNNNNNNNNNNNNM            L ", "L            MNNNNNNNNNNNNNNNNNM            L ", " L           LNNNNNNNNNNNNNNNNNL           L  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "    L            LMMMMMMMMML            L     ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "        L                           L         ", "         L                         L          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             L                 L              ", "              BBB           BBB               ", "BBB           BDB     B     BDB           BBB ", "BDB           BBBL         LBBB           BDB ", "BBB               LL     LL               BBB ", "                    LLLLL                     ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB     B     BBB           BDB ", "BBB           BDB    BOB    BDB           BBB ", "              BBB     B     BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB     B     BBB               ", "BBB           BDB    BOB    BDB           BBB ", "BDB           BBB     B     BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                   B                   BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB           BDB   BOAOB   BDB           BBB ", "              BBB    BOB    BBB               ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "                     CBC                      ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                     CBC                      ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "              BBB    BOB    BBB               ", "BBB           BDB   BOAOB   BDB           BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB                   B                   BBB ", "                                              ")
                    .aisle("                      B                       ", "BBB                  BOB                  BBB ", "BDB           BBB   BOAOB   BBB           BDB ", "BBB           BDB  BOAAAOB  BDB           BBB ", "              BBB   BOAOB   BBB               ", "                     BAB                      ", "          BBB        BAB        BBB           ", "          BDB        BAB        BDB           ", "          BBB        BAB        BBB           ", "                     BAB                      ", "                     BAB                      ", "     BBB             BAB             BBB      ", "     BDB             BAB             BDB      ", "     BBB             BAB             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", "OAAAAAAAAAAAALNNNNNNNNNNNNNNNNNLAAAAAAAAAAAAOB", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             BAB             BBB      ", "     BDB             BAB             BDB      ", "     BBB             BAB             BBB      ", "                     BAB                      ", "                     BAB                      ", "          BBB        BAB        BBB           ", "          BDB        BAB        BDB           ", "          BBB        BAB        BBB           ", "                     BAB                      ", "              BBB   BOAOB   BBB               ", "BBB           BDB  BOAAAOB  BDB           BBB ", "BDB           BBB   BOAOB   BBB           BDB ", "BBB                  BOB                  BBB ", "                      B                       ")
                    .aisle("                                              ", "BBB                   B                   BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB           BDB   BOAOB   BDB           BBB ", "              BBB    BOB    BBB               ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "                     CBC                      ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                 LMMMLLLMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "BOAOBBBBBBBBBLNNNNNNNNNNNNNNNNNLBBBBBBBBBOAOB ", " BOBCCCCCCCCCLNNNNNNNNNNNNNNNNNLCCCCCCCCCBOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMLLLMMML                  ", "     BBB             CBC             BBB      ", "     BDB             CBC             BDB      ", "     BBB             CBC             BBB      ", "                     CBC                      ", "                     CBC                      ", "          BBB        CBC        BBB           ", "          BDB        CBC        BDB           ", "          BBB        CBC        BBB           ", "                     CBC                      ", "              BBB    BOB    BBB               ", "BBB           BDB   BOAOB   BDB           BBB ", "BDB           BBB    BOB    BBB           BDB ", "BBB                   B                   BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB     B     BBB           BDB ", "BBB           BDB    BOB    BDB           BBB ", "              BBB     B     BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", " BOB         MNNNNNNNNNNNNNNNNNM         BOB  ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB     B     BBB               ", "BBB           BDB    BOB    BDB           BBB ", "BDB           BBB     B     BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB     B     BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LMMMMMMMMML                  ", " BBB            LNNNNNNNNNNNL            BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", "             LNNNNNNNNNNNNNNNNNL              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "  B          MNNNNNNNNNNNNNNNNNM          B   ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             MNNNNNNNNNNNNNNNNNM              ", "             LNNNNNNNNNNNNNNNNNL              ", " BBB          LNNNNNNNNNNNNNNNL          BBB  ", " BDB           LNNNNNNNNNNNNNL           BDB  ", " BBB            LNNNNNNNNNNNL            BBB  ", "                 LMMMMMMMMML                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB     B     BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                 LLLLLLLLLLL                  ", " BBB            LLLLLLLLLLLLL            BBB  ", " BDB           LLLLLLLLLLLLLLL           BDB  ", " BBB          LLLLLLLLLLLLLLLLL          BBB  ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", "             LLLLLLLLLLLLLLLLLLL              ", " BBB          LLLLLLLLLLLLLLLLL          BBB  ", " BDB           LLLLLLLLLLLLLLL           BDB  ", " BBB            LLLLLLLLLLLLL            BBB  ", "                 LLLLLLLLLLL                  ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB                             BDB      ", "     BBB         KKKKKKKKKKK         BBB      ", "                KKKKKKKKKKKKK                 ", " BBB           KKKKKKKKKKKKKKK           BBB  ", " BDB          KKKKKKKKKKKKKKKKK          BDB  ", " BBB         KKKKKKKKKKKKKKKKKKK         BBB  ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", "            KKKKKKKKKKKKKKKKKKKKK             ", " BBB         KKKKKKKKKKKKKKKKKKK         BBB  ", " BDB          KKKKKKKKKKKKKKKKK          BDB  ", " BBB           KKKKKKKKKKKKKKK           BBB  ", "                KKKKKKKKKKKKK                 ", "     BBB         KKKKKKKKKKK         BBB      ", "     BDB                             BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB                             BBB      ", "     BDB         JJJJJJJJJJJ         BDB      ", "     BBB        JJJJJJJJJJJJJ        BBB      ", "               JJJJJJJJJJJJJJJ                ", " BBB          JJJJJJJJJJJJJJJJJ          BBB  ", " BDB         JJJJJJJJJJJJJJJJJJJ         BDB  ", " BBB        JJJJJJJJJJJJJJJJJJJJJ        BBB  ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", "           JJJJJJJJJJJJJJJJJJJJJJJ            ", " BBB        JJJJJJJJJJJJJJJJJJJJJ        BBB  ", " BDB         JJJJJJJJJJJJJJJJJJJ         BDB  ", " BBB          JJJJJJJJJJJJJJJJJ          BBB  ", "               JJJJJJJJJJJJJJJ                ", "     BBB        JJJJJJJJJJJJJ        BBB      ", "     BDB         JJJJJJJJJJJ         BDB      ", "     BBB                             BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                                              ", "     BBB         AAAAAAAAAAA         BBB      ", "     BDB        AAAAAAAAAAAAA        BDB      ", "     BBB       AAAAAAAAAAAAAAA       BBB      ", "              AAAAAAAAAAAAAAAAA               ", " BBB         AAAAAAAAAAAAAAAAAAA         BBB  ", " BDB        AAAAAAAAAAAAAAAAAAAAA        BDB  ", " BBB       AAAAAAAAAAAAAAAAAAAAAAA       BBB  ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", "          AAAAAAAAAAAAAAAAAAAAAAAAA           ", " BBB       AAAAAAAAAAAAAAAAAAAAAAA       BBB  ", " BDB        AAAAAAAAAAAAAAAAAAAAA        BDB  ", " BBB         AAAAAAAAAAAAAAAAAAA         BBB  ", "              AAAAAAAAAAAAAAAAA               ", "     BBB       AAAAAAAAAAAAAAA       BBB      ", "     BDB        AAAAAAAAAAAAA        BDB      ", "     BBB         AAAAAAAAAAA         BBB      ", "                                              ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                                              ", "BBB                                       BBB ", "BDB           BBB           BBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "                 IIIIIIIIIII                  ", "     BBB        IIIIIIIIIIIII        BBB      ", "     BDB       IIIIIIIIIIIIIII       BDB      ", "     BBB      IIIIIIIIIIIIIIIII      BBB      ", "             IIIIIIIIIIIIIIIIIII              ", " BBB        IIIIIIIIIIIIIIIIIIIII        BBB  ", " BDB       IIIIIIIIIIIIIIIIIIIIIII       BDB  ", " BBB      IIIIIIIIIIIIIIIIIIIIIIIII      BBB  ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", "         IIIIIIIIIIIIIIIIIIIIIIIIIII          ", " BBB      IIIIIIIIIIIIIIIIIIIIIIIII      BBB  ", " BDB       IIIIIIIIIIIIIIIIIIIIIII       BDB  ", " BBB        IIIIIIIIIIIIIIIIIIIII        BBB  ", "             IIIIIIIIIIIIIIIIIII              ", "     BBB      IIIIIIIIIIIIIIIII      BBB      ", "     BDB       IIIIIIIIIIIIIII       BDB      ", "     BBB        IIIIIIIIIIIII        BBB      ", "                 IIIIIIIIIII                  ", "                                              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "                                              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBB           BBB           BDB ", "BBB                                       BBB ", "                                              ")
                    .aisle("                    BBFBB                     ", "BBB               BB     BB               BBB ", "BDB           BBBB         BBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             B                 B              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "         B       HHHHHHHHHHH       B          ", "        B       HHHHHHHHHHHHH       B         ", "     BBB       HHHHHHHHHHHHHHH       BBB      ", "     BDB      HHHHHHHHHHHHHHHHH      BDB      ", "     BBB     HHHHHHHHHHHHHHHHHHH     BBB      ", "    B       HHHHHHHHHHHHHHHHHHHHH       B     ", " BBB       HHHHHHHHHHHHHHHHHHHHHHH       BBB  ", " BDB      HHHHHHHHHHHHHHHHHHHHHHHHH      BDB  ", " BBB     HHHHHHHHHHHHHHHHHHHHHHHHHHH     BBB  ", " B      HHHHHHHHHHHHHHHHHHHHHHHHHHHHH      B  ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        F", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "        HHHHHHHHHHHHHHHHHHHHHHHHHHHHH        B", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", "B       HHHHHHHHHHHHHHHHHHHHHHHHHHHHH       B ", " B      HHHHHHHHHHHHHHHHHHHHHHHHHHHHH      B  ", " BBB     HHHHHHHHHHHHHHHHHHHHHHHHHHH     BBB  ", " BDB      HHHHHHHHHHHHHHHHHHHHHHHHH      BDB  ", " BBB       HHHHHHHHHHHHHHHHHHHHHHH       BBB  ", "    B       HHHHHHHHHHHHHHHHHHHHH       B     ", "     BBB     HHHHHHHHHHHHHHHHHHH     BBB      ", "     BDB      HHHHHHHHHHHHHHHHH      BDB      ", "     BBB       HHHHHHHHHHHHHHH       BBB      ", "        B       HHHHHHHHHHHHH       B         ", "         B       HHHHHHHHHHH       B          ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             B                 B              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBB         BBBB           BDB ", "BBB               BB     BB               BBB ", "                    BBFBB                     ")
                    .aisle("                    FFFFF                     ", "BBB               FF     FF               BBB ", "BDB           BBBF         FBBB           BDB ", "BBB           BDB           BDB           BBB ", "              BBB           BBB               ", "             F                 F              ", "          BBB                   BBB           ", "          BDB                   BDB           ", "          BBB    GGGGGGGGGGG    BBB           ", "         F      GGGGGGGGGGGGG      F          ", "        F      GGGGGGGGGGGGGGG      F         ", "     BBB      GGGGGGGGGGGGGGGGG      BBB      ", "     BDB     GGGGGGGGGGGGGGGGGGG     BDB      ", "     BBB    GGGGGGGGGGGGGGGGGGGGG    BBB      ", "    F      GGGGGGGGGGGGGGGGGGGGGGG      F     ", " BBB      GGGGGGGGGGGGGGGGGGGGGGGGG      BBB  ", " BDB     GGGGGGGGGGGGGGGGGGGGGGGGGGG     BDB  ", " BBB    GGGGGGGGGGGGGGGGGGGGGGGGGGGGG    BBB  ", " F     GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG     F  ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "       GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG       F", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", "F      GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG      F ", " F     GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG     F  ", " BBB    GGGGGGGGGGGGGGGGGGGGGGGGGGGGG    BBB  ", " BDB     GGGGGGGGGGGGGGGGGGGGGGGGGGG     BDB  ", " BBB      GGGGGGGGGGGGGGGGGGGGGGGGG      BBB  ", "    F      GGGGGGGGGGGGGGGGGGGGGGG      F     ", "     BBB    GGGGGGGGGGGGGGGGGGGGG    BBB      ", "     BDB     GGGGGGGGGGGGGGGGGGG     BDB      ", "     BBB      GGGGGGGGGGGGGGGGG      BBB      ", "        F      GGGGGGGGGGGGGGG      F         ", "         F      GGGGGGGGGGGGG      F          ", "          BBB    GGGGGGGGGGG    BBB           ", "          BDB                   BDB           ", "          BBB                   BBB           ", "             F                 F              ", "              BBB           BBB               ", "BBB           BDB           BDB           BBB ", "BDB           BBBF         FBBB           BDB ", "BBB               FF     FF               BBB ", "                    FFFFF                     ")
                    .aisle("                    BBFBB                     ", "CCC               BB     BB               CCC ", "CDC           BBBB         BBBB           CDC ", "CCC           BDB           BDB           CCC ", "              BBB           BBB               ", "             B                 B              ", "          BBB                   BBB           ", "          BDB    EEEEEEEEEEE    BDB           ", "          BBB   EEEEEEEEEEEEE   BBB           ", "         B     EEEEEEEEEEEEEEE     B          ", "        B     EEEEEEEEEEEEEEEEE     B         ", "     BBB     EEEEEEEEEEEEEEEEEEE     BBB      ", "     BDB    EEEEEEEEEEEEEEEEEEEEE    BDB      ", "     BBB   EEEEEEEEEEEEEEEEEEEEEEE   BBB      ", "    B     EEEEEEEEEEEEEEEEEEEEEEEEE     B     ", " BBB     EEEEEEEEEEEEEEEEEEEEEEEEEEE     BBB  ", " BDB    EEEEEEEEEEEEEEEEEEEEEEEEEEEEE    BDB  ", " BBB   EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE   BBB  ", " B    EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE    B  ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      F", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "      EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE      B", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", "B     EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE     B ", " B    EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE    B  ", " BBB   EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE   BBB  ", " BDB    EEEEEEEEEEEEEEEEEEEEEEEEEEEEE    BDB  ", " BBB     EEEEEEEEEEEEEEEEEEEEEEEEEEE     BBB  ", "    B     EEEEEEEEEEEEEEEEEEEEEEEEE     B     ", "     BBB   EEEEEEEEEEEEEEEEEEEEEEE   BBB      ", "     BDB    EEEEEEEEEEEEEEEEEEEEE    BDB      ", "     BBB     EEEEEEEEEEEEEEEEEEE     BBB      ", "        B     EEEEEEEEEEEEEEEEE     B         ", "         B     EEEEEEEEEEEEEEE     B          ", "          BBB   EEEEEEEEEEEEE   BBB           ", "          BDB    EEEEEEEEEEE    BDB           ", "          BBB                   BBB           ", "             B                 B              ", "              BBB           BBB               ", "CCC           BDB           BDB           CCC ", "CDC           BBBB         BBBB           CDC ", "CCC               BB     BB               CCC ", "                    BBFBB                    A")

                    .where("A", Predicates.any())
                    .where("B", Predicates.frames(CTNHMaterials.Infinity))
                    .where("C", Predicates.blocks(CASING_NAQUADAH_GEARBOX.get()))
                    .where("D", Predicates.blocks(ADVANCED_COMPUTER_CASING.get()))
                    .where("E", Predicates.blocks(ANNIHILATE_CORE_MKI.get()))
                    .where("F", Predicates.blocks(MACHINE_CASING_UHV.get()))
                    .where("G", Predicates.blocks(FUSION_CASING_MK3.get()))
                    .where("H", Predicates.blocks(PLASMA_COOLED_CORE.get()))
                    .where("I", Predicates.blocks(CASING_NAQUADAH_GEARBOX.get()))
                    .where("J", Predicates.blocks(MACHINE_CASING_UHV.get()))
                    .where("K", Predicates.blocks(CASING_ANTIFREEZE_HEATPROOF_MACHINE.get()))
                    .where("L", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, CTNHMaterials.Infinity).get()))
                    .where("M", Predicates.blocks(FUSION_GLASS.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("N", heatingCoils())
                    .where("O", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("P", Predicates.blocks(COMPUTER_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))

                    .build())
            .workableCasingModel(GTCEu.id("block/casings/gcym/nonconducting_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition HYBRID_POWER_MIXER = REGISTRATE.multiblock("hybrid_power_mixer", Hybrid_Power_Mixer::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(GTRecipeTypes.MIXER_RECIPES)
            .recipeModifiers(Hybrid_Power_Mixer::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.hybrid_mixer.0"),
                    Component.translatable("ctnh.hybrid_mixer.1"),
                    Component.translatable("ctnh.hybrid_mixer.2"),
                    Component.translatable("ctnh.hybrid_mixer.3"),
                    Component.translatable("ctnh.hybrid_mixer.4")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("##BBB##", "##BBB##", "##BBB##", "###D###", "###D###", "###B###")
                    .aisle("##BEB##", "##FGF##", "##FHF##", "##FHF##", "##FGF##", "##BIB##")
                    .aisle("BBJEJBB", "BFJGJFB", "BFJHJFB", "#FJ#JF#", "#FJGJF#", "#BJIJB#")
                    .aisle("BEEEEEB", "GGGGGGG", "BHHHHHB", "DH#H#HD", "DGGGGGD", "BIIIIIB")
                    .aisle("BBJEJBB", "BFJGJFB", "BFJHJFB", "#FJ#JF#", "#FJGJF#", "#BJIJB#")
                    .aisle("##BEB##", "##FGF##", "##FHF##", "##FHF##", "##FGF##", "##BIB##")
                    .aisle("##BBB##", "##BCB##", "##BBB##", "###D###", "###D###", "###B###")
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(CASING_OSMIRIDIUM.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))

                    .where("C", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("D", Predicates.frames(Titanium))
                    .where("E", Predicates.blocks(ZENITH_CASING_GEARBOX.get()))
                    .where("F", Predicates.blocks(CASING_LAMINATED_GLASS.get()))
                    .where("G", Predicates.blocks(COIL_ULTRA_MANA.get()))
                    .where("H", Predicates.blocks(ELEMENTIUM_PIPE_CASING.get()))
                    .where("I", Predicates.blocks(ELEMENTIUM_CASING.get()))
                    .where("J", Predicates.blocks(HERMETIC_CASING_LuV.get()))
                    .build())
            .workableCasingModel(CTNHCore.id("block/casings/osmiridium_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    //    public final static MultiblockMachineDefinition COMPONENT_ASSEMBLY_LINE_CT = REGISTRATE.multiblock("component_assembly_line_ct", Hybrid_Power_Mixer::new)
//            .rotationState(RotationState.NON_Y_AXIS)
//            .recipeModifiers(Hybrid_Power_Mixer::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
//            .tooltips(Component.translatable("ctnh.hybrid_mixer.0"),
//                    Component.translatable("ctnh.hybrid_mixer.1"),
//                    Component.translatable("ctnh.hybrid_mixer.2"),
//                    Component.translatable("ctnh.hybrid_mixer.3"),
//                    Component.translatable("ctnh.hybrid_mixer.4")
//            )
//            .pattern(definition -> FactoryBlockPattern.start()
//                    .aisle("ABBBBBBBBBA", "ACCCCCCCCCA", "@AAAAAAAAAA", "A#########A")
//                    .aisle("ADDDDDDDDDA", "B#########B", "AEEEEEEEEEA", "AAAAAAAAAAA")
//                    .aisle("ABBBBBBBBBA", "ACCCCCCCCCA", "AAAAAAAAAAA", "A#########A")
//                    .where("A", Predicates.blocks(AllBlocks.RAILWAY_CASING.get())
//                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
//                            .or(Predicates.abilities(CTPPPartAbility.INPUT_KINETIC)))
//                    .where("B", Predicates.blocks(CASING_OSMIRIDIUM.get()))
//                    .where("C", Predicates.blocks(FUSION_GLASS.get()))
//                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
//                    .where("#", Predicates.any())
//                    .where("D", Predicates.blocks(AllBlocks.RAILWAY_CASING.get()))
//                    .where("E", Predicates.blocks(AllBlocks.DEPLOYER.get()))
//                    .build())
//
//            .workableCasingModel(CTPP.id("block/create/railway_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
//            .register();
    public final static MultiblockMachineDefinition COMBINED_VAPOR_DEPOSITION_FACILITY = REGISTRATE.multiblock("combined_vapor_deposition_facility", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.PVB_RECIPE, CTNHRecipeTypes.CHEMICAL_VAPOR_DEPOSITION)
            .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.perfect_overclock")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("ABBBA", "BACAB", "BCCCB", "BACAB", "ABBBA")
                    .aisle("BDDDB", "AEFEA", "AGHGA", "AEFEA", "BDDDB")
                    .aisle("BDDDB", "AFFFA", "AIFIA", "AFFFA", "BDDDB")
                    .aisle("BDDDB", "AEFEA", "AGHGA", "AEFEA", "BDDDB")
                    .aisle("ABBBA", "BACAB", "BC@CB", "BACAB", "ABBBA")
                    .where("A", Predicates.blocks(MACHINE_CASING_LuV.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION)))
                    .where("B", Predicates.blocks(HERMETIC_CASING_LuV.get()))
                    .where("C", Predicates.blocks(CASING_LAMINATED_GLASS.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("D", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("E", Predicates.blocks(COIL_HSSG.get()))
                    .where("F", Predicates.blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where("G", Predicates.blocks(CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where("H", Predicates.blocks(MOLYBDENUM_DISILICIDE_COIL_BLOCK.get()))
                    .where("I", Predicates.blocks(MOLYBDENUM_DISILICIDE_COIL_BLOCK.get()))
                    .build())

            .workableCasingModel(GTCEu.id("block/casings/hpca/high_power_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition LaserSorder = REGISTRATE.multiblock("lasersorder", LaserSorter::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.LS_RECIPE,GTRecipeTypes.LASER_ENGRAVER_RECIPES)
            .recipeModifiers(LaserSorter::recipeModifier,GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.ls.0"),
                    Component.translatable("ctnh.ls.1"),
                    Component.translatable("ctnh.ls.2"),
                    Component.translatable("ctnh.ls.3"),
                    Component.translatable("ctnh.ls.4"),
                    Component.translatable("ctnh.ls.5"),
                    Component.translatable("ctnh.ls.6"),
                    Component.translatable("ctnh.ls.7"),
                    Component.translatable("ctnh.ls.8"),
                    Component.translatable("ctnh.ls.9"),
                    Component.translatable("ctnh.ls.10"),
                    Component.translatable("ctnh.ls.11")
            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "AABBBAA", "AABBBAA", "AABBBAA", "AAAAAAA")
                    .aisle("ACCCCCA", "AC###CA", "AC###CA", "AC###CA", "ACCCCCA")
                    .aisle("ACCCCCA", "B#####B", "B#####B", "B#####B", "ACCDCCA")
                    .aisle("ACCCCCA", "B#####B", "B#####B", "B#####B", "ACDDDCA")
                    .aisle("ACCCCCA", "B#####B", "B#####B", "B#####B", "ACCDCCA")
                    .aisle("ACCCCCA", "AC###CA", "AC###CA", "AC###CA", "ACCCCCA")
                    .aisle("AAAAAAA", "AABBBAA", "AAB@BAA", "AABBBAA", "AAAAAAA")
                    .where("A", Predicates.blocks(COMPUTER_HEAT_VENT.get()))
                    .where("B", Predicates.blocks(HIGH_POWER_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setExactLimit(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                    )
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("C", Predicates.blocks(ADVANCED_COMPUTER_CASING.get()))
                    .where("#", Predicates.any())
                    .where("D", Predicates.blocks(FUSION_GLASS.get()))
                    .build())

            .workableCasingModel(GTCEu.id("block/casings/hpca/high_power_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition SPACEPHOTOVOLTAICBASESTATION = REGISTRATE.multiblock("space_photovoltai_cbase_station", SpacePhotovoltaicBaseStation::new)
            .rotationState(RotationState.ALL)
            .generator(true)
            .recipeTypes(CTNHRecipeTypes.PHOTOVOLTAIC_GENERATOR, CTNHRecipeTypes.PHOTOVOLTAIC_ASSEMBER)
            .recipeModifier(SpacePhotovoltaicBaseStation::recipeModifier,true)
            .tooltips(Component.translatable("ctnh.spvb.0"),
                    Component.translatable("ctnh.spvb.1"),
                    Component.translatable("ctnh.spvb.2"),
                    Component.translatable("ctnh.spvb.3"),
                    Component.translatable("ctnh.spvb.4"),
                    Component.translatable("ctnh.spvb.5"),
                    Component.translatable("ctnh.spvb.ex")

            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle("####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "##############FFFFFFF###############", "#############C#######C##############", "############F#########F#############", "###########F###########F############", "###########C#####G#####C############", "###########F####H#H####F############", "############F#########F#############", "#############C#######C##############", "##############FFFFFFF###############", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################")
                    .aisle
                    .aisle("####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "##############FFFFFFF###############", "#############F#######F##############", "############F#########F#############", "###########C###########C############", "##########F#############F###########", "#########F###############F##########", "#########C#######G#######C##########", "#########F######H#H######F##########", "##########F#############F###########", "###########C###########C############", "############F#########F#############", "#############F#######F##############", "##############FFFFFFF###############", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("##########BJJJJJJJJJJJJJB###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "##########B####K###K####B###########", "#########F#####K###K#####F##########", "########F######K###K######F#########", "#######F#######K###K#######F########", "######F########K###K########F#######", "#####F#########K###K#########F######", "####F##########K###K##########F#####", "###F###########################F####", "##F#############################F###", "#C###############################C##", "D#################################D#", "###################################D", "############F####K####F############D", "###########H###########H###########D", "D#################################D#", "#C###############################C##", "##F#############################F###", "###F###########################F####", "####F#########################F#####", "#####F#######################F######", "######F#####################F#######", "#######F###################F########", "########F#################F#########", "#########F###############F##########", "##########FH###########HF###########", "############E#########E#############", "#############FJJJJJJJH##############", "############E#########E#############", "############D#########D#############", "############E#########E#############", "############D#########D#############", "############E#########E#############", "############D#########D#############", "############E#########E#############")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("B####B#####IJJJJJJJJJJJI#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B#####I#K#######K#I#####B####B#", "B####B####FL###########LF####B####B#", "B####B###FLL###########LLF###B####B#", "B####B##FLLL###########LLLF##B####B#", "B####B#FLLLL###########LLLLF#B####B#", "B####BFLLLLL###########LLLLLFB####B#", "B####FLLLLLL###########LLLLLLF####B#", "B###FLLLLLLL###########LLLLLLLF###B#", "B##FLLLLLLLL###########LLLLLLLLF##B#", "B#FLLLLLLLLL###########LLLLLLLLLF#B#", "BFLLLLLLLLLL###########LLLLLLLLLLFB#", "BLLLLLLLLLLL###########LLLLLLLLLLLB#", "BLLLLLLLLLLL##F##K##F##LLLLLLLLLLLB#", "BLLLLLLLLLLL#H#######H#LLLLLLLLLLLB#", "#FLLLLLLLLLL###########LLLLLLLLLLF##", "##FLLLLLLLLL###########LLLLLLLLLF###", "###FLLLLLLLL###########LLLLLLLLF####", "####FLLLLLLL###########LLLLLLLF#####", "#####FLLLLLL###########LLLLLLF######", "######FLLLLL###########LLLLLF#######", "#######FLLLL###########LLLLF########", "########FLLL###########LLLF#########", "#########FLL###########LLF##########", "##########FL###########LF###########", "###########FEH#######HEF############", "##############E#####E###############", "###############HLLLH################", "##############E#####E###############", "##############D#####D###############", "##############E#####E###############", "##############D#####D###############", "##############E#####E###############", "##############D#####D###############", "##############E#####E###############")
                    .aisle
                    .aisle("#############IJJJJJJJI##############", "#############I#######I##############", "#############I#######I##############", "#############I#######I##############", "#############I#######I##############", "#############I#######I##############", "#############I#######I##############", "#############I#######I##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L##FKF##L##############", "#############L#H###H#L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############L#######L##############", "#############LEH###HEL##############", "################EEE#################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################", "####################################")
                    .aisle
                    .where("A", Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", (CTNHPredicates.SpaceStructuralFrameworkBlock())
                            .or(Predicates.abilities(PartAbility.OUTPUT_ENERGY))
                            .or(Predicates.abilities(PartAbility.OUTPUT_LASER))
                            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.EXPORT_ITEMS))
                            .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS))
                            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
                    )
                    .where("C", Predicates.blocks(PV_COIL.get()))
                    .where("D", Predicates.blocks(FUSION_CASING.get()))
                    .where("E", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("F", Predicates.blocks(STELLAR_RADIATION_ROUTER_CASING.get()))
                    .where("G", Predicates.blocks(SUPERCONDUCTING_COIL.get()))
                    .where("H", Predicates.blocks(MACHINE_CASING_LuV.get()))
                    .where("I", Predicates.blocks(HERMETIC_CASING_ZPM.get()))
                    .where("J", CTNHPredicates.PhotovoltaicBlock())
                    .where("K", Predicates.blocks(COIL_NAQUADAH.get()))
                    .where("L", Predicates.blocks(FUSION_GLASS.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )

            .workableCasingModel(CTNHCore.id("block/casings/depth_force_field_stabilizing_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public final static MultiblockMachineDefinition HYPER_PLASMA_TURBINE = HyperPlasmaTurbineRegister.register();
    public final static MultiblockMachineDefinition PHOTOVOLTAIC_DRONE_STATION = REGISTRATE.multiblock("photovoltaic_drone_station", PhotoVoltaicDroneStation::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(CTNHRecipeTypes.PVDRONE)
            .recipeModifiers(PhotoVoltaicDroneStation::recipeModifier,GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.pvdrone.0"),
                    Component.translatable("ctnh.pvdrone.1"),
                    Component.translatable("ctnh.pvdrone.2"),
                    Component.translatable("ctnh.pvdrone.3"),
                    Component.translatable("ctnh.pvdrone.4")


            )
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A#####BBBCCCBBB######", "#########CCC#########", "#########CCC#########", "#####################", "#####################", "#####################", "#####################", "#####################", "#########EEE#########", "######FFFECEFFF######", "#########EEE#########", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#########EEE#########", "######FFFECEFFF######", "#########EEE#########", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#########EEE#########", "######FFFECEFFF######", "#########EEE#########", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#########EEE#########", "######FFFECEFFF######")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("BBBBBBBBBBCBBBBBBBBBB", "####CFFFFFFFFFFFC####", "#####GLLLLLLLLLG#####", "#######LLLLLLL#######", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "FH##H#####H#####H##HF")
                    .aisle("BBBBBBBBBBCBBBBBBBBBB", "##CCCFFFFFFFFFFFCCC##", "#####GLLLLLLLLLG#####", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "F###################F", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "FH##H#####H#####H##HF")
                    .aisle
                    .aisle
                    .aisle("##BBBBBBBBCBBBBBBBB##", "##CFFFC##CBC##CFFFC##", "###MMM#########NNN###", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "##F######CBC######F##", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "##F###############F##", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "##F###############F##", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "##FH######H######HF##")
                    .aisle
                    .aisle("####BBBBBBCBBBBBB####", "#########CBC#########", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "####FF###CBC###FF####", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "####FF#########FF####", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "####FF#########FF####", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "#####################", "####FFHHHHHHHHHFF####")
                    .aisle
                    .where("A", Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", CTNHPredicates.SpaceStructuralFrameworkBlock())
                    .where("C", Predicates.blocks(HIGH_POWER_CASING.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.PARALLEL_HATCH))
                    )
                    .where("D", Predicates.any())
                    .where("E", Predicates.blocks(PV_COIL.get()))
                    .where("F", Predicates.blocks(FUSION_CASING.get()))
                    .where("G", Predicates.blocks(STELLAR_RADIATION_ROUTER_CASING.get()))
                    .where("H", Predicates.blocks(FUSION_GLASS.get()))
                    .where("I", Predicates.blocks(DIAMOND_BLOCK))
                    .where("J", Predicates.blocks(EMERALD_BLOCK))
                    .where("K", Predicates.blocks(BEACON))
                    .where("L", Predicates.blocks(NETHERITE_BLOCK))
                    .where("M", Predicates.blocks(GOLD_BLOCK))
                    .where("N", Predicates.blocks(IRON_BLOCK))
                    .where("O", Predicates.blocks(CTNHMachines.DRONEHOLDER.getBlock()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())

            .workableCasingModel(GTCEu.id("block/casings/hpca/high_power_casing"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static final MultiblockMachineDefinition GAS_CENTRIFUGE = REGISTRATE.multiblock("gas_centrifuge", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.GAS_CENTRIFUGE_RECIPES)
            .appearanceBlock(GTBlocks.CASING_STAINLESS_CLEAN)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#CCC#", "#CCC#", "#####", "#####", "#####", "#####", "#####")
                    .aisle("CBBBC", "CBBBC", "#DED#", "#D#D#", "#D#D#", "#D#D#", "#D#D#")
                    .aisle("CBBBC", "CBBBC", "#EEE#", "#####", "#####", "#####", "#####")
                    .aisle("CBBBC", "CBBBC", "#DED#", "#D#D#", "#D#D#", "#D#D#", "#D#D#")
                    .aisle("#CCC#", "#C@C#", "#####", "#####", "#####", "#####", "#####")
                    .where("B", Predicates.blocks(GTBlocks.CASING_STAINLESS_CLEAN.get()))
                    .where("C", Predicates.blocks(GTBlocks.CASING_STAINLESS_CLEAN.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where("#", Predicates.air())
                    .where("D", Predicates.blocks(CASING_STEEL_SOLID.get()))
                    .where("E", Predicates.blocks(CASING_STEEL_PIPE.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static final MultiblockMachineDefinition HOT_COOLANT_TURBINE = REGISTRATE.multiblock("hot_coolant_turbine", holder -> new LargeTurbineMachine(holder, GTValues.EV))
            .generator(true)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.HOT_COOLANT_TURBINE_RECIPES)
            .recipeModifier(LargeTurbineMachine::recipeModifier, true)
            .appearanceBlock(GTBlocks.CASING_TITANIUM_TURBINE)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAA", "ASSA", "AAAA")
                    .aisle("ASSA", "BCCB", "ASSA")
                    .aisle("AAAA", "A@SA", "AAAA")
                    .where("A", Predicates.blocks(GTBlocks.CASING_TITANIUM_TURBINE.get()))
                    .where("B", Predicates.abilities(PartAbility.OUTPUT_ENERGY).setExactLimit(1)
                            .or(Predicates.abilities(PartAbility.ROTOR_HOLDER).setExactLimit(1)))
                    .where("C", Predicates.blocks(GTBlocks.CASING_TITANIUM_GEARBOX.get()))
                    .where("S", Predicates.blocks(GTBlocks.CASING_TITANIUM_TURBINE.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                            .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(Predicates.abilities(PartAbility.MUFFLER).setExactLimit(1)))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(GTCEu.id("block/casings/mechanic/machine_casing_turbine_titanium"), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
    public static final MultiblockMachineDefinition NUCLEAR_REACTOR = REGISTRATE.multiblock("nuclear_reactor", NuclearReactorMachine::new)
            .rotationState(RotationState.ALL)
            .recipeType(CTNHRecipeTypes.NUCLEAR_REACTOR_RECIPES)
            .tooltips(Component.translatable("nuclear_reactor").withStyle(ChatFormatting.GRAY),
                    Component.translatable("ctnh.nuclear_reactor.basic"),
                    Component.translatable("ctnh.nuclear_reactor.coolant"),
                    Component.translatable("ctnh.nuclear_reactor.overclock"),
                    Component.translatable("ctnh.nuclear_reactor.safe"))
            .recipeModifier(NuclearReactorMachine::recipeModifier)
            .appearanceBlock(CASING_SHIELDED_REACTOR)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("DDD", "ABA", "ABA", "ABA", "ABA", "ABA", "ABA", "ABA", "DDD")
                    .aisle("DDD", "BCB", "BCB", "BCB", "BCB", "BCB", "BCB", "BCB", "DDD")
                    .aisle("D@D", "ABA", "ABA", "ABA", "ABA", "ABA", "ABA", "ABA", "DDD")
                    .where("A", Predicates.blocks(CASING_SHIELDED_REACTOR.get()))
                    .where("B", Predicates.blocks(CASING_TEMPERED_GLASS.get()))
                    .where("C", CTNHPredicates.reactorCore())
                    .where("D", Predicates.blocks(CASING_SHIELDED_REACTOR.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build())
            .workableCasingModel(CTNHCore.id("block/casings/shielded_reactor_casing"), GTCEu.id("block/machines/nuclear_reactor"))
            .register();
    public final static MultiblockMachineDefinition  CRYOTHEUMFREEZER = REGISTRATE.multiblock("cryotheum_freezer", CryotheumFreezer::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(GTRecipeTypes.VACUUM_RECIPES)
            .recipeModifiers(CryotheumFreezer::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.cryotheum.0"),
                    Component.translatable("ctnh.cryotheum.1"),
                    Component.translatable("ctnh.cryotheum.2"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "BBB", "AAA")
                    .aisle("AAA", "B#B", "AAA")
                    .aisle("AAA", "B@B", "AAA")
                    .where("A", Predicates.blocks(SUPER_FREEZE_BLOCK.get()).setMinGlobalLimited(10)
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))

                    .where("B", Predicates.blocks(SUPERCOOLED_BLOCK.get()))
                    .where("#", Predicates.any())
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTNHCore.id("block/casings/super_machine_casing_frost_proof"), GTCEu.id("block/multiblock/vacuum_freezer"))
            .register();
    public static final MultiblockMachineDefinition MANA_CONDENSER = REGISTRATE.multiblock("mana_condenser", ManaCondenserMachine::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.MANA_CONDENSER_RECIPES)
            .tooltips(Component.translatable("ctnh.multiblock.mana_condenser.tooltips.1").withStyle(ChatFormatting.GRAY),
                    Component.translatable("ctnh.multiblock.mana_condenser.tooltips.2"),
                    Component.translatable("ctnh.multiblock.mana_condenser.tooltips.3"))
            .recipeModifier(ManaCondenserMachine::recipeModifier)
            .appearanceBlock(CASING_TITANIUM_STABLE)
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("#############AABAA#############", "#############CC#CC#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############ADDDA#############", "#############CEFEC#############", "##############GHG##############", "##############GHG##############", "##############GHG##############", "##############IFI##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############BDDDB#############", "##############FJF##############", "##############HJH##############", "##############HJH##############", "##############HJH##############", "##############FJF##############", "###############J###############", "###############J###############", "###############J###############", "###############G###############", "###############K###############", "###############L###############")
                    .aisle("#############ADDDA#############", "#############CEFEC#############", "##############GHG##############", "##############GHG##############", "##############GHG##############", "##############IFI##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############AAMAA#############", "#############CC#CC#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####BBNBB###########BBNBB#####", "#####CC#CC###########CC#CC#####", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####BDDDB###########BDDDB#####", "#####CEFEC###########CEFEC#####", "######GHG#############GHG######", "######GHG#############GHG######", "######GHG#############GHG######", "######IFI#############IFI######", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####NDDDN###OIIIO###NDDDN#####", "######FJF#############FJF######", "######HJH#############HJH######", "######HJH#############HJH######", "######HJH#############HJH######", "######FJF#############FJF######", "#######J###############J#######", "#######J###############J#######", "#######J###############J#######", "#######G###############G#######", "#######K###############K#######", "#######L###############L#######")
                    .aisle("#####BDDDB##CI###IC##BDDDB#####", "#####CEFEC###########CEFEC#####", "######GHG#############GHG######", "######GHG#############GHG######", "######GHG#############GHG######", "######IFI#############IFI######", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####BBNBBPP#######PPBBNBB#####", "#####CC#CC###########CC#CC#####", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#########PJP#######PJP#########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########G#########G##########", "##########K#########K##########", "##########L#########L##########", "###############################", "###############################", "###############################")
                    .aisle("#########PPPPFFFFFPPPP#########", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("########C##PDDBBBDDP##C########", "############PPFFFPP############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("AABAA##OI##FD#####DF##IO##AABAA", "CC#CC#######PDDBDDP#######CC#CC", "#############PPFPP#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("ADDDA##I###FB#####BF###I##ADDDA", "CEFEC#######FD###DF#######CEFEC", "#GHG#########PBBBP#########GHG#", "#GHG##########PPP##########GHG#", "#GHG#######################GHG#", "#IFI#######################IFI#", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("BDDDM##I###FB##@##BF###I##MDDDB", "#FJF########FB#E#BF########FJF#", "#HJH#########FBBBF#########HJH#", "#HJH##########PNP##########HJH#", "#HJH###########R###########HJH#", "#FJF###########L###########FJF#", "##J#########################J##", "##J#########################J##", "##J#########################J##", "##G#########################G##", "##K#########################K##", "##L#########################L##")
                    .aisle("ADDDA##I###FB#####BF###I##ADDDA", "CEFEC#######FD###DF#######CEFEC", "#GHG#########PBBBP#########GHG#", "#GHG##########PPP##########GHG#", "#GHG#######################GHG#", "#IFI#######################IFI#", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("AABAA##OI##FD#####DF##IO##AABAA", "CC#CC#######PDDBDDP#######CC#CC", "#############PPFPP#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("########C##PDDBBBDDP##C########", "############PPFFFPP############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#########PPPPFFFFFPPPP#########", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#########PJP#######PJP#########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########J#########J##########", "##########G#########G##########", "##########K#########K##########", "##########L#########L##########", "###############################", "###############################", "###############################")
                    .aisle("#####BBNBBPP#######PPBBNBB#####", "#####CC#CC###########CC#CC#####", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####BDDDB##CI###IC##BDDDB#####", "#####CEFEC###########CEFEC#####", "######GHG#############GHG######", "######GHG#############GHG######", "######GHG#############GHG######", "######IFI#############IFI######", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####NDDDN###OIIIO###NDDDN#####", "######FJF#############FJF######", "######HJH#############HJH######", "######HJH#############HJH######", "######HJH#############HJH######", "######FJF#############FJF######", "#######J###############J#######", "#######J###############J#######", "#######J###############J#######", "#######G###############G#######", "#######K###############K#######", "#######L###############L#######")
                    .aisle("#####BDDDB###########BDDDB#####", "#####CEFEC###########CEFEC#####", "######GHG#############GHG######", "######GHG#############GHG######", "######GHG#############GHG######", "######IFI#############IFI######", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#####BBNBB###########BBNBB#####", "#####CC#CC###########CC#CC#####", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############AAMAA#############", "#############CC#CC#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############ADDDA#############", "#############CEFEC#############", "##############GHG##############", "##############GHG##############", "##############GHG##############", "##############IFI##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############BDDDB#############", "##############FJF##############", "##############HJH##############", "##############HJH##############", "##############HJH##############", "##############FJF##############", "###############J###############", "###############J###############", "###############J###############", "###############G###############", "###############K###############", "###############L###############")
                    .aisle("#############ADDDA#############", "#############CEFEC#############", "##############GHG##############", "##############GHG##############", "##############GHG##############", "##############IFI##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############AABAA#############", "#############CC#CC#############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .where("#", Predicates.any())
                    .where("A", Predicates.blocks(CASING_TITANIUM_GEARBOX.get()))
                    .where("B", Predicates.blocks(CASING_TITANIUM_PIPE.get()))
                    .where("C", Predicates.blocks(BotaniaBlocks.corporeaBrickSlab))
                    .where("D", Predicates.blocks(CASING_TITANIUM_STABLE.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("E", Predicates.blocks(BotaniaBlocks.lavenderQuartz))
                    .where("F", Predicates.blocks(BotaniaBlocks.lavenderQuartzStairs))
                    .where("G", Predicates.blocks(BotaniaBlocks.corporeaBrickWall))
                    .where("H", Predicates.blocks(CASING_LAMINATED_GLASS.get()))
                    .where("I", Predicates.blocks(BotaniaBlocks.lavenderQuartzSlab))
                    .where("J", Predicates.blocks(BotaniaBlocks.lavenderQuartzPillar))
                    .where("K", Predicates.blocks(END_ROD))
                    .where("L", Predicates.blocks(BotaniaBlocks.corporeaIndex))
                    .where("M", Predicates.blocks(GTMachines.HULL[EV].getBlock()))
                    .where("N", Predicates.blocks(CASING_TITANIUM_TURBINE.get()))
                    .where("O", Predicates.blocks(BotaniaBlocks.corporeaCrystalCube))
                    .where("P", Predicates.blocks(BotaniaBlocks.corporeaBrickStairs))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .where("R", Predicates.blocks(BotaniaBlocks.fabulousPool)
                            .or(Predicates.blocks(BotaniaBlocks.manaPool))
                            .or(Predicates.blocks(BotaniaBlocks.dilutedPool)))
                    .build())
            .renderer(ManaCondenserRender::new)
            .register();
    public final static MultiblockMachineDefinition  NERUOMATRIXCOMPILER = REGISTRATE.multiblock("neruo_martix_compiler", NeuroMatrixCompiler::new)
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeType(CTNHRecipeTypes.COMPILER_RECIPE)
            .appearanceBlock(CASING_ANTIFREEZE_HEATPROOF_MACHINE)
            .recipeModifiers(NeuroMatrixCompiler::recipeModifier)
            .tooltips(Component.translatable("ctnh.compiler.0"),
                    Component.translatable("ctnh.compiler.01"),
                    Component.translatable("ctnh.compiler.1"),
                    Component.translatable("ctnh.compiler.2"),
                    Component.translatable("ctnh.compiler.3"),
                    Component.translatable("ctnh.compiler.4"),
                    Component.translatable("ctnh.compiler.5"),
                    Component.translatable("ctnh.compiler.6"),
                    Component.translatable("ctnh.compiler.part1"),
                    Component.translatable("ctnh.compiler.part2"),
                    Component.translatable("ctnh.compiler.part3"),
                    Component.translatable("ctnh.compiler.part4"),
                    Component.translatable("ctnh.compiler.7"),
                    Component.translatable("ctnh.compiler.8"),
                    Component.translatable("ctnh.compiler.9"),
                    Component.translatable("ctnh.compiler.10"),
                    Component.translatable("ctnh.compiler.11"),

                    Component.translatable("ctnh.compiler.12"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A############BBBBB#############", "#############CCDCC#############", "#############B#B#B#############", "###############################", "###############################", "###############################", "##############B#B##############", "#############CCCCC#############", "#############BBBBB#############")
                    .aisle("#############BBBBB#############", "#############CEFEC#############", "##############EFE##############", "##############EFE##############", "##############EFE##############", "##############EFE##############", "#############BEFEB#############", "#############CEFEC#############", "#############BBBBB#############")
                    .aisle("#############BBBBB#############", "#############CFGFC#############", "#############BFGFB#############", "##############FGF##############", "##############FGF##############", "##############FGF##############", "##############FGF##############", "#############CFGFC#############", "#############BBBBB#############")
                    .aisle("#############BBBBB#############", "#############CEHEC#############", "##############ECE##############", "##############ECE##############", "##############ECE##############", "##############ECE##############", "#############BECEB#############", "#############CECEC#############", "#############BBBBB#############")
                    .aisle("#############BBBBB#############", "#############CCHCC#############", "#############BBCBB#############", "###############################", "###############################", "###############################", "###############################", "#############CCCCC#############", "#############BBBBB#############")
                    .aisle("##############III##############", "##############FHF##############", "##############BCB##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("##############III##############", "##############FHF##############", "##############BCB##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("##############III##############", "##############FHF##############", "##############BCB##############", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("#############IIIII#############", "#############IIHII#############", "#############IIIII#############", "#############FIIIF#############", "#############FFIFF#############", "#############FFIFF#############", "#############FIIIF#############", "#############IIIII#############", "#############IIIII#############")
                    .aisle("###########IIJJIJJII###########", "###########II##I##II###########", "###########FF##I##FF###########", "###########FF##I##FF###########", "###########FF##F##FF###########", "###########FF##F##FF###########", "###########FF##I##FF###########", "###########FF##I##FF###########", "###########IIKKIKKII###########")
                    .aisle("##########IJJJJIJJJJI##########", "##########I####I####I##########", "##########I####I####I##########", "##########I####F####I##########", "##########I####F####I##########", "##########I####F####I##########", "##########I####F####I##########", "##########I####I####I##########", "##########IKKKKIKKKKI##########")
                    .aisle("#########IJJJJJIJJJJJI#########", "#########I#####I#####I#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########IKKKKKIKKKKKI#########")
                    .aisle("#########IJJJJJIJJJJJI#########", "#########I#####I#####I#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########IKKKKKIKKKKKI#########")
                    .aisle("BBBBB###IJJJJJJIJJJJJJI###BBBBB", "CCCCC###I######I######I###CCCCC", "B#B#B###I######I######I###B#B#B", "########F######F######F########", "########F######F######F########", "########F######F######F########", "#B#B####F######F######F####B#B#", "CCCCC###I######I######I###CCCCC", "BBBBB###IKKKKKKIKKKKKKI###BBBBB")
                    .aisle("BBBBBIIIIJJJJJJIJJJJJJIIIIBBBBB", "CEFECFFFI######I######IFFFCEFEC", "#EFEBBBBI######I######IBBBBEFE#", "#EFE####I######I######I####EFE#", "#EFE####F######F######F####EFE#", "#EFE####F######F######F####EFE#", "BEFE####I######I######I####EFEB", "CEFEC###I######I######I###CEFEC", "BBBBB###IKKKKKKIKKKKKKI###BBBBB")
                    .aisle("BBBBBIIIIIIIIIIIIIIIIIIIIIBBBBB", "DFGHHHHHHIIIIIIIIIIIIIHHHHHHGCD", "BFGCCCCCIIIFFIIIIIFFIIICCCCCGCB", "#FGC####IIFFFFIIIFFFFII####CGC#", "#FGC####IFFFFFFIFFFFFFI####CGC#", "#FGC####IFFFFFFIFFFFFFI####CGC#", "#FGC####IIFFFFIIIFFFFII####CGC#", "CFGCC###IIIFFIIIIIFFIII###CCGCC", "BBBBB###IIIIIIILIIIIIII###BBBBB")
                    .aisle("BBBBBIIIIJJJJJJIJJJJJJIIIIBBBBB", "CEFECFFFI######I######IFFFCEFEC", "#EFEBBBBI######I######IBBBBEFE#", "#EFE####I######I######I####EFE#", "#EFE####F######F######F####EFE#", "#EFE####F######F######F####EFE#", "BEFE####I######I######I####EFEB", "CEFEC###I######I######I###CEFEC", "BBBBB###IKKKKKKIKKKKKKI###BBBBB")
                    .aisle("BBBBB###IJJJJJJIJJJJJJI###BBBBB", "CCCCC###I######I######I###CCCCC", "B#B#B###I######I######I###B#B#B", "########F######F######F########", "########F######F######F########", "########F######F######F########", "#B#B####F######F######F####B#B#", "CCCCC###I######I######I###CCCCC", "BBBBB###IKKKKKKIKKKKKKI###BBBBB")
                    .aisle("#########IJJJJJIJJJJJI#########", "#########I#####I#####I#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########IKKKKKIKKKKKI#########")
                    .aisle("#########IJJJJJIJJJJJI#########", "#########I#####I#####I#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########F#####F#####F#########", "#########IKKKKKIKKKKKI#########")
                    .aisle("#########IIJJJJIJJJJII#########", "#########FH####I####HF#########", "#########BI####I####IB#########", "##########I####F####I##########", "##########I####F####I##########", "##########I####F####I##########", "##########I####F####I##########", "##########I####I####I##########", "##########IKKKKIKKKKI##########")
                    .aisle("########IIIIIJJIJJIIIII########", "########FHFII##I##IIFHF########", "########BCBFF##I##FFBCB########", "###########FF##I##FF###########", "###########FF##F##FF###########", "###########FF##F##FF###########", "###########FF##I##FF###########", "###########FF##I##FF###########", "###########IIKKIKKII###########")
                    .aisle("#######III###IIIII###III#######", "#######FHF###II@II###FHF#######", "#######BCB###IIDII###BCB#######", "#############FIIIF#############", "#############FFIFF#############", "#############FFIFF#############", "#############FIIIF#############", "#############IIIII#############", "#############IIIII#############")
                    .aisle("######III#############III######", "######FHF#############FHF######", "######BCB#############BCB######", "###############################", "###############################", "###############################", "###############################", "###############################", "###############################")
                    .aisle("##BBBBBI###############IBBBBB##", "##CCCCHF###############FCCCCC##", "##B#BBCB###############BCBB#B##", "###############################", "###############################", "###############################", "###B#######################B###", "##CCCCC#################CCCCC##", "##BBBBB#################BBBBB##")
                    .aisle("##BBBBB#################BBBBB##", "##CEFEC#################CEFEC##", "###EFEB#################BEFE###", "###EFC###################CFE###", "###EFC###################CFE###", "###EFC###################CFE###", "##BEFC###################CFEB##", "##CEFCC#################CCFEC##", "##BBBBB#################BBBBB##")
                    .aisle("##BBBBB#################BBBBB##", "##CFGFC#################CFGCC##", "##BFGFB#################BFGCB##", "###FGF###################FGC###", "###FGF###################FGC###", "###FGF###################FG####", "###FGF###################FG####", "##CFGFC#################CFGCC##", "##BBBBB#################BBBBB##")
                    .aisle("##BBBBB#################BBBBB##", "##CEFEC#################CEFEC##", "###EFE###################EFE###", "###EFE###################EFE###", "###EFE###################EFE###", "###EFE###################EFE###", "##BEFEB#################BEFEB##", "##CEFEC#################CEFEC##", "##BBBBB#################BBBBB##")
                    .aisle("##BBBBB#################BBBBB##", "##CCDCC#################CCDCC##", "##B#B#B#################B#B#B##", "###############################", "###############################", "###############################", "###B#B###################B#B###", "##CCCCC#################CCCCC##", "##BBBBB#################BBBBB#A")
                    .where("A",Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(ADVANCED_BIO_REACTOR_CASING.get()))
                    .where("C", Predicates.blocks(FUSION_CASING.get()))
                    .where("D", Predicates.abilities(CTNHPartAbility.COMPILER))
                    .where("E", Predicates.blocks(ADVANCED_COMPUTER_CASING.get()))
                    .where("F", Predicates.blocks(FUSION_CASING.get()))
                    .where("G", Predicates.blocks(HIGH_POWER_CASING.get()))
                    .where("H", Predicates.blocks(WIDESPEEDINGPIPE.get()))
                    .where("I", Predicates.blocks(CASING_ANTIFREEZE_HEATPROOF_MACHINE.get())
                            .or(Predicates.autoAbilities(definition.getRecipeTypes())))
                    .where("J", Predicates.blocks(CASING_PTFE_INERT.get()))
                    .where("K", Predicates.frames(Naquadria))
                    .where("L", Predicates.blocks(CASING_NEUTRONIUM_ALLOY_BLOCK.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel(CTNHCore.id("block/casings/antifreeze_heatproof_machine_casing"), GTCEu.id("block/multiblock/vacuum_freezer"))
            .register();
    public final static MultiblockMachineDefinition ZENITH_EXTRUDER = REGISTRATE.multiblock("zenith_extruder", holder -> new ZenithMachine(holder, 24, 12, 60, 20))
            .rotationState(RotationState.NON_Y_AXIS)
            .recipeTypes(GTRecipeTypes.EXTRUDER_RECIPES, CTNHRecipeTypes.ZENITH_EXTRUDER_RECIPES)
            .appearanceBlock(CTNHBlocks.ZENITH_CASING_BLOCK)
            .recipeModifiers(ZenithMachine::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .tooltips(Component.translatable("ctnh.zenith_laser"),
                    Component.translatable("zenith_machine_sp").withStyle(ChatFormatting.DARK_PURPLE),
                    Component.translatable("ctnh.super_mana_machine.mana_consume"),
                    Component.translatable("zenith_extruder"),
                    Component.translatable("zenith_extruder.1"),
                    Component.translatable("zenith_extruder.2"),
                    Component.translatable("ctnh.zenith_machine_tip"),
                    Component.translatable("ctnh.zenith_waring"),
                    Component.translatable("ctnh.perfect_overclock"))

            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("A#BBBBB##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########")
                    .aisle("#BBBBBBB#", "##CBDBE##", "##CDFDE##", "##CBDBE##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "###BBB###")
                    .aisle("BBBBBBBBB", "#C##G##E#", "#C##F##E#", "#C#####E#", "##CBDBE##", "##CHDHE##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "###BBB###", "##BDDDB##")
                    .aisle("BBBBBBBBB", "#B##G##B#", "#D##F##D#", "#B#####B#", "##B###B##", "##B###H##", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "##BDDDB##", "#BDJJJDB#")
                    .aisle("BBBBBBBBB", "#DGGGGGD#", "#FFFGFFF#", "#D##G##D#", "##D#G#D##", "##D#G#D##", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "###IGI###", "##BDGDB##", "#BDJKJDB#")
                    .aisle("BBBBBBBBB", "#B##G##B#", "#D##F##D#", "#B#####B#", "##B###B##", "##B###H##", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "###BIB###", "##BDDDB##", "#BDJJJDB#")
                    .aisle("BBBBBBBBB", "#L##G##M#", "#L##F##M#", "#L#####M#", "##LBDBM##", "##LHDHM##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "###BBB###", "##BDDDB##")
                    .aisle("#BBBBBBB#", "##LBDBM##", "##LDFDM##", "##LBDBM##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "###BBB###")
                    .aisle("##BB@BB##", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "#########", "########A")
                    .where("A", Predicates.any())
                    .where("#", Predicates.any())
                    .where("B", Predicates.blocks(ZENITH_CASING_BLOCK.get())
                            .or(autoAbilities(definition.getRecipeTypes())))
                    .where("C", Predicates.blocks(ELEMENTIUM_CASING.get()))
                    .where("D", Predicates.blocks(CASING_STRESS_PROOF.get()))
                    .where("E", Predicates.blocks(MANA_STEEL_CASING.get()))
                    .where("F", Predicates.frames(GTMaterials.Naquadah))
                    .where("G", Predicates.blocks(ZENITH_CASING_GEARBOX.get()))
                    .where("H", Predicates.blocks(MACHINE_CASING_ZPM.get()))
                    .where("I", Predicates.blocks(BotaniaBlocks.manaGlass))
                    .where("J", Predicates.blocks(FILTER_CASING.get()))
                    .where("K", Predicates.blocks(ZENITH_EYE.get()))
                    .where("L", Predicates.blocks(ALF_STEEL_CASING.get()))
                    .where("M", Predicates.blocks(TERRA_STEEL_CASING.get()))
                    .where("@", Predicates.controller(Predicates.blocks(definition.get())))
                    .build()
            )
            .workableCasingModel((CTNHCore.id("block/casings/zenith_casing")), GTCEu.id("block/multiblock/generator/large_steam_turbine"))
            .register();
//    public final static MultiblockMachineDefinition  QUANTUM_MANAGEMENT_CENTER = REGISTRATE.multiblock("quantum_management_center", CryotheumFreezer::new)
//            .rotationState(RotationState.NON_Y_AXIS)
//            .recipeType(GTRecipeTypes.VACUUM_RECIPES)
//            .recipeModifiers(CryotheumFreezer::recipeModifier, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
//            .tooltips(Component.translatable("ctnh.cryotheum.0"),
//                    Component.translatable("ctnh.cryotheum.1"),
//                    Component.translatable("ctnh.cryotheum.2"))
//            .pattern(definition -> FactoryBlockPattern.start()
//                            .aisle("ABCBBBBBBBBBBBDBBBBBBBBBBBEBB", "BFFFBGGGGGGGBBBBBGGGGGGGHGGGH", "BFIFBGGGGGGGBBIBBGGGGGGGHGIGH", "BFFFBGGGGGGGBBBBBGGGGGGGHGGGH", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "############BBBBB############", "############BJJJB############", "############BJKJB############", "############BJJJB############", "############BBBBB############", "#############################")
//                            .aisle("BFFFFJJJJJJJBBBBBJJJJJJJBJJJB", "F###F#######B###B#######G#L#G", "F#M#F#######B#I#B#######G#L#G", "F###F#######B###B#######G#L#G", "BFFFBJJJJJJJBIIIBJJJJJJJBJJJB", "############BBBBB############", "############N###N############", "############N###N############", "############N###N############", "############BOOOB############", "#############################")
//                            .aisle("BFFFFJJJJJJJBBBBBJJJJJJJBJJJB", "F#M#F#######B#I#B#######GLJLG", "IMMMIIIIIIIIIIIIIIIIIIIIILJLI", "F#M#F#######B#I#B#######GLJLG", "BFFFBJJJJJJJBIIIBJJJJJJJBJJJB", "############BBBBB############", "############N###N############", "############N###N############", "############N###N############", "############BOOOB############", "#############################")
//                            .aisle("BFFFFJJJJJJJBBBBBJJJJJJJBJJJB", "F###F#######B###B#######G#L#G", "F#M#F#######B#I#B#######G#L#G", "F###F#######B###B#######G#L#G", "BFFFBJJJJJJJBIIIBJJJJJJJBJJJB", "############BBBBB############", "############N###N############", "############N###N############", "############N###N############", "############BOOOB############", "#############################")
//                            .aisle("BBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BFFFBGGGGGGGBIIIBGGGGGGGHGGGH", "BFIFBGGGGGGGBIIIBGGGGGGGHGIGH", "BFFFBGGGGGGGBIIIBGGGGGGGHGGGH", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "############BBBBB############", "############BNNNB############", "############BNNNB############", "############BNNNB############", "############BBBBB############", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB#######BJJJB#######BJJJB", "G###G#######GIIIG#######G###G", "G#I#G#######GIPIG#######G#I#G", "G###G#######GIIIG#######G###G", "BJJJB#######BJJJB#######BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BBBBB#######BQQQB#######BBBBB", "BHHHB#######QIIIQ#######BRRRB", "BHIHB#######QIIIQ#######BRIRB", "BHHHB#######QIIIQ#######BRRRB", "BBBBB#######BQQQB#######BBBBB", "############BBBBB############", "############BQQQB############", "############BQQQB############", "############BQQQB############", "############BBBBB############", "#############################")
//                            .aisle("BBBBB#######QSSSQ#######BBBBB", "HTJTH#######GIIIG#######RUHUR", "HTITH#######GIIIG#######RHIHR", "HTJTH#######GIIIG#######RUHUR", "BBBBB#######QGGGQ#######BBBBB", "############BVVVB############", "############QWWWQ############", "############QWWWQ############", "############QWWWQ############", "############BQQQB############", "#############################")
//                            .aisle("XBBBB#######QSSSQ#######BBBBY", "HJTJH#######GIIIG#######RHHHR", "IITII#######GILIG#######IIIII", "HJ#JH#######GIIIG#######RHIHR", "BBBBB#######QGZGQ#######BBBBB", "############BVVVB############", "############QWWWQ############", "############QWWWQ############", "############QWWWQ############", "############BQaQB############", "#############################")
//                            .aisle("BBBBB#######QSSSQ#######BBBBB", "HTJTH#######GIIIG#######RUHUR", "HTITH#######GIIIG#######RHIHR", "HTJTH#######GIIIG#######RUHUR", "BBBBB#######QGGGQ#######BBBBB", "############BVVVB############", "############QWWWQ############", "############QWWWQ############", "############QWWWQ############", "############BQQQB############", "#############################")
//                            .aisle("BBBBB#######BQQQB#######BBBBB", "BHHHB#######QBBBQ#######BRRRB", "BHIHB#######QBbBQ#######BRIRB", "BHHHB#######QBBBQ#######BRRRB", "BBBBB#######BQQQB#######BBBBB", "############BBcBB############", "############BQQQB############", "############BQQQB############", "############BQQQB############", "############BBBBB############", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BJJJB###################BJJJB", "G###G###################G###G", "G#I#G###################G#I#G", "G###G###################G###G", "BJJJB###################BJJJB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BBBBBBBBBBBBBQQQBBBBBBBBBBBBB", "BGGGBGGGGGGGQTTTQGGGGGGGBBBBB", "BGIGBGGGGGGGQTTTQGGGGGGGBBIBB", "BGGGBGGGGGGGQTTTQGGGGGGGBBBBB", "BBBBBBBBBBBBBQQQBBBBBBBBBBBBB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "G###IIIIIIIII###IIIIIIIII###G", "G#I#IIIIIIIII#T#IIIIIIIII#I#G", "G###IIIIIIIII###IIIIIIIII###G", "BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "G#I#IIIIIIIII#T#IIIIIIIII#I#G", "G#IIIIIIIIIIIIRIIIIIIIIIIII#G", "G#I#IIIIIIIII#T#IIIIIIIII#I#G", "BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "G###IIIIIIIII###IIIIIIIII###G", "G###IIIIIIIII#T#IIIIIIIII###G", "G###IIIIIIIII###IIIIIIIII###G", "BIIIBJJJJJJJQTTTQJJJJJJJBIIIB", "#############################", "#############################", "#############################", "#############################", "#############################", "#############################")
//                            .aisle("BBdBBBBBBBBBBQQQBBBBBBBBBBeBB", "BGGGBGGGGGGGQaaaQGGGGGGGBGGGB", "BGGGBGGGGGGGQafaQGGGGGGGBGGGB", "BGGGBGGGGGGGQaaaQGGGGGGGBGGGB", "BBBBBBBBBBBBBQQQBBBBBBBBBBBBB", "#############################", "#############################", "#############################", "#############################", "#############################", "############################A")
//                            .where("A", Predicates.any())
//                            .where("B", Predicates.blocks(COMPUTER_CASING.get()))
//                            .where("C",  Predicates.controller(Predicates.blocks(definition.get())))
//                            .where("D", Predicates.any())
//                            .where("E", Predicates.any())
//                            .where("F", Predicates.blocks(CASING_NEUTRONIUM_ALLOY_BLOCK.get()))
//                            .where("G", Predicates.blocks(FUSION_GLASS.get()))
//                            .where("H", Predicates.frames(GTMaterials.Neutronium))
//                            .where("I", Predicates.blocks(HIGH_POWER_CASING.get()))
//                            .where("#", Predicates.any())
//                            .where("J", Predicates.blocks(MACHINE_CASING_UHV.get()))
//                            .where("K",  Predicates.any())
//                            .where("L", Predicates.blocks(WIDESPEEDINGPIPE.get()))
//                            .where("M", Predicates.blocks(ELECTROLYTIC_CELL.get()))
//                            .where("N", Predicates.blocks(HERMETIC_CASING_UHV.get()))
//                            .where("O", Predicates.blocks(FILTER_CASING_STERILE.get()))
//                            .where("P", Predicates.blocks(COIL_HSSG.get()))
//                            .where("Q", Predicates.blocks(COMPUTER_HEAT_VENT.get()))
//                            .where("R", Predicates.blocks(CASING_TUNGSTENSTEEL_GEARBOX.get()))
//                            .where("S", Predicates.blocks(CASING_LARGE_SCALE_ASSEMBLING.get()))
//                            .where("T", Predicates.blocks(MATERIAL_BLOCKS.get(TagPrefix.block, GTMaterials.Neutronium).get()))
//                            .where("U", Predicates.blocks(CASING_TUNGSTENSTEEL_TURBINE.get()))
//                            .where("V", Predicates.blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
//                            .where("W", Predicates.powerSubstationBatteries())
//                            .where("K",  Predicates.any())
//                            .where("K",  Predicates.any())
//                            .where("Z", Predicates.blocks(HERMETIC_CASING_UHV.get()))
//                            .where("a", Predicates.blocks(NEUTRONIUM_REINFORCED_TURBINE_CASING.get()))
//                            .where("b", Predicates.blocks(WIDEPARTICLEACCELERATOR.get())
//                                    .or(Predicates.autoAbilities(definition.getRecipeTypes())))
//                            .where("c", Predicates.any())
//                            .where("d", Predicates.any())
//                            .where("e", Predicates.any())
//                            .where("f",Predicates.any())
//                    .build()
//            )
//            .workableCasingModel(CTNHCore.id("block/casings/super_machine_casing_frost_proof"), GTCEu.id("block/multiblock/vacuum_freezer"))
//            .register();
    public static void init() {}
}
